{
    "docs": [
        {
            "location": "/", 
            "text": "Overview\n\n\nThis specification describes a\n\n\"hook\"\n-based pattern for invoking\ndecision support from within a clinician's EHR workflow. The API supports:\n\n\n\n\nSynchronous, workflow-triggered CDS calls returning information and suggestions\n\n\nLaunching a user-facing SMART app when CDS requires additional interaction\n\n\n\n\nThe CDS Hooks API is still in active development and thus subject to change. We're currently working towards a 1.0 release and would love your feedback and proposed changes. Look at our \ncurrent issue list\n and get involved!\n\n\nHow it works\n\n\nUser activity inside the EHR triggers \nCDS hooks\n in real-time.  For example:\n\n\n\n\npatient-view\n when opening a new patient record\n\n\nmedication-prescribe\n on authoring a new prescription\n\n\norder-review\n on viewing pending orders for approval\n\n\n\n\nWhen a triggering activity occurs, the EHR notifies each CDS service registered for the activity. These services must then provide near-real-time feedback about the triggering event. Each service gets basic details about the EHR\ncontext (via the \ncontext\n parameter of the hook) plus whatever\nservice-specific data are required (via the \npre-fetch-template\n parameter).\n\n\n\n\nCDS Cards\n\n\nEach CDS service can return any number of \ncards\n in response to the hook.\nCards convey some combination of text (\ninformation card\n), alternative\nsuggestions (\nsuggestion card\n), and links to apps or reference\nmaterials (\napp link card\n). A user sees these cards \u2014 one or more of each type\n\u2014 embedded in the EHR, and can interact with them as follows:\n\n\n\n\n\n\ninformation card\n: provides text for the user to read.\n\n\n\n\n\n\nsuggestion card\n: provides a specific suggestion for which the EHR renders a button that the user can click to accept. Clicking automatically populates the suggested change into the EHR's UI.\n\n\n\n\n\n\napp link card\n: provides a link to an app (often a SMART app) where the user can supply details, step through a flowchart, or do anything else required to help reach an informed decision.\n\n\n\n\n\n\nTry it!\n\n\nYou can try CDS Hooks in our Sandbox at \nhttp://sandbox.cds-hooks.org", 
            "title": "Overview"
        }, 
        {
            "location": "/#overview", 
            "text": "This specification describes a \"hook\" -based pattern for invoking\ndecision support from within a clinician's EHR workflow. The API supports:   Synchronous, workflow-triggered CDS calls returning information and suggestions  Launching a user-facing SMART app when CDS requires additional interaction   The CDS Hooks API is still in active development and thus subject to change. We're currently working towards a 1.0 release and would love your feedback and proposed changes. Look at our  current issue list  and get involved!", 
            "title": "Overview"
        }, 
        {
            "location": "/#how-it-works", 
            "text": "User activity inside the EHR triggers  CDS hooks  in real-time.  For example:   patient-view  when opening a new patient record  medication-prescribe  on authoring a new prescription  order-review  on viewing pending orders for approval   When a triggering activity occurs, the EHR notifies each CDS service registered for the activity. These services must then provide near-real-time feedback about the triggering event. Each service gets basic details about the EHR\ncontext (via the  context  parameter of the hook) plus whatever\nservice-specific data are required (via the  pre-fetch-template  parameter).", 
            "title": "How it works"
        }, 
        {
            "location": "/#cds-cards", 
            "text": "Each CDS service can return any number of  cards  in response to the hook.\nCards convey some combination of text ( information card ), alternative\nsuggestions ( suggestion card ), and links to apps or reference\nmaterials ( app link card ). A user sees these cards \u2014 one or more of each type\n\u2014 embedded in the EHR, and can interact with them as follows:    information card : provides text for the user to read.    suggestion card : provides a specific suggestion for which the EHR renders a button that the user can click to accept. Clicking automatically populates the suggested change into the EHR's UI.    app link card : provides a link to an app (often a SMART app) where the user can supply details, step through a flowchart, or do anything else required to help reach an informed decision.", 
            "title": "CDS Cards"
        }, 
        {
            "location": "/#try-it", 
            "text": "You can try CDS Hooks in our Sandbox at  http://sandbox.cds-hooks.org", 
            "title": "Try it!"
        }, 
        {
            "location": "/specification/1.0/", 
            "text": "CDS Services\n\n\n\n\n1.0 Draft\n\n\nThis is the draft of the 1.0 release of the CDS Hooks specification. We are currently working towards a 1.0 release and would love your feedback and proposed changes. Look at our \ncurrent issue list\n and get involved!\n\n\n\n\nOverview\n\n\nThe CDS Hooks specification describes the RESTful APIs and interactions between EHRs and CDS Services. All data exchanged through the RESTful APIs MUST BE sent and received as JSON structures, and MUST be transmitted over channels secured using Transport Layer Security (TLS). \n\n\nConformance Language\n\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this specification are to be interpreted as described in \nRFC2119\n.\n\n\nLimitations\n\n\nThis specification has the following limitations.\n\n\n\n\nThe specification provides options for providing a CDS Service access to the EHR's FHIR resources through use of either prefetch and/or a bearer access token to be presented to the FHIR Server.  Decisions regarding which approach to take, and details regarding how the choice is implemented, are left up to the EHR vendor/provider, as architectural considerations will come into play.\n\n\nThe specification requires that each CDS Service provider be registered (client_id, key-pair identifier) with the EHR Authorization Server, but does not dictate how registration is accomplished (e.g., dynamic vs. manual).\n\n\nThe specification acknowledges that each EHR vendor/provider will need to vet CDS Service providers and suggests that vendors/providers may want to create a \"white list\" of providers deemed \"safe\" and/or a \"black list\" of providers deemed \"unsafe.\"  Similarly, an EHR vendor/provider may choose to assess the safety of active links embedded in CDS Hooks Cards returned to the EHR.  The specification does not suggest how such vetting is accomplished nor suggest factors to consider, as these judgments are dependent upon each EHR vendor's or provider's existing vetting processes and risk-management policy.\n\n\n\n\nSwagger (Open API Specification)\n\n\nThe CDS Hooks specification is available as an Open API Specification using Swagger. You can download the \nAPI specification\n and view it online via the \nSwagger Editor\n.\n\n\nDiscovery\n\n\nDevelopers of CDS Services SHALL provide a stable endpoint for allowing EHRs to discover available CDS Services, including information such as the purpose of the CDS Service, when it should be invoked, and any data that is requested to be prefetched.\n\n\nA CDS Service provider SHALL expose its Discovery endpoint at\"\n\n\n1\n{\nbaseURL\n}\n/cds-services  \n\n\n\n\n\n\nHTTP Request\n\n\nThe discovery endpoint is always available at \n{baseUrl}/cds-services\n. For example, if the \nbaseUrl\n is https://example.com, the EHR would invoke:\n\n\nGET https://example.com/cds-services\n\n\nResponse\n\n\nThe response to the discovery endpoint is an object containing a list of CDS Services.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nservices\n\n\narray\n. An array of \nCDS Services\n\n\n\n\n\n\n\n\nEach CDS Service is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nhook\n\n\nREQUIRED\n\n\nstring\n or \nurl\n. The hook this service should be invoked on. See \nHook Catalog\n\n\n\n\n\n\ntitle\n\n\nRECOMMENDED\n\n\nstring\n.  The human-friendly name of this service\n\n\n\n\n\n\ndescription\n\n\nREQUIRED\n\n\nstring\n. The description of this service\n\n\n\n\n\n\nid\n\n\nREQUIRED\n\n\nstring\n. The {id} portion of the URL to this service which is available at\n{baseUrl}/cds-services/{id}\n\n\n\n\n\n\nprefetch\n\n\nOPTIONAL\n\n\nobject\n. An object containing key/value pairs of FHIR queries that this service is requesting that the EHR prefetch and provide on each service call. The key is a \nstring\n that describes the type of data being requested and the value is a \nstring\n representing the FHIR query.\nSee \nPrefetch Template\n.\n\n\n\n\n\n\n\n\nHTTP Status Codes\n\n\n\n\n\n\n\n\nCode\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200 OK\n\n\nA successful response\n\n\n\n\n\n\n\n\nDiscovery Example\n\n\n1\ncurl \nhttps://example.com/cds-services\n\n\n\n\n\n\n\n\n\nThe above command returns JSON structured like this:\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n{\n\n  \nservices\n:\n \n[\n\n    \n{\n\n      \nhook\n:\n \npatient-view\n,\n\n      \ntitle\n:\n \nStatic CDS Service Example\n,\n\n      \ndescription\n:\n \nAn example of a CDS Service that returns a static set of cards\n,\n\n      \nid\n:\n \nstatic-patient-greeter\n,\n\n      \nprefetch\n:\n \n{\n\n        \npatientToGreet\n:\n \nPatient/{{Patient.id}}\n\n      \n}\n\n    \n},\n\n    \n{\n\n      \nhook\n:\n \nmedication-prescribe\n,\n\n      \ntitle\n:\n \nMedication Echo CDS Service\n,\n\n      \ndescription\n:\n \nAn example of a CDS Service that simply echos the medication being prescribed\n,\n\n      \nid\n:\n \nmedication-echo\n,\n\n      \nprefetch\n:\n \n{\n\n        \npatient\n:\n \nPatient/{{Patient.id}}\n,\n\n        \nmedications\n:\n \nMedicationOrder?patient={{Patient.id}}\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\nCalling a CDS Service\n\n\nHTTP Request\n\n\nAn EHR calls a CDS service by \nPOST\ning a JSON document to the service\nendpoint, which can be constructed from the CDS Service base URL and an\nindividual service id as \n{baseUrl}/cds-services/{service.id}\n.  The CDS Hook\ncall includes a JSON POST body with the following input fields:\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nhook\n\n\nREQUIRED\n\n\nstring\n or \nURL\n. The hook that triggered this CDS Service call\n(todo: link to hook documentation)\n\n\n\n\n\n\nhookInstance\n\n\nREQUIRED\n\n\nstring\n.  A UUID for this particular hook call (see more information below)\n\n\n\n\n\n\nfhirServer\n\n\nOPTIONAL\n\n\nURL\n.  The base URL EHR's \nFHIR\n server. If fhirAuthorization is provided, this field is REQUIRED.  The scheme should be \nhttps\n\n\n\n\n\n\nfhirAuthorization\n\n\nOPTIONAL\n\n\nobject\n. A structure holding an OAuth 2.0 bearer access token granting the CDS Service access to FHIR resources, along with supplemental information relating to the token. See the \nFHIR Resource Access\n section for more information.\n\n\n\n\n\n\nuser\n\n\nREQUIRED\n\n\nstring\n.  The FHIR resource type + id representing the current user.\nThe type is one of: \nPractitioner\n, \nPatient\n, or \nRelatedPerson\n.\nFor example, \nPractitioner/123\n\n\n\n\n\n\ncontext\n\n\nREQUIRED\n\n\nobject\n.  Hook-specific contextual data that the CDS service will need.\nFor example, with the \nmedication-prescribe\n hook this will include \nMedicationOrder\n being prescribed.  For details, see the \nHooks specification\n.\n\n\n\n\n\n\nprefetch\n\n\nOPTIONAL\n\n\nobject\n.  The FHIR data that was prefetched by the EHR (see more information below)\n\n\n\n\n\n\n\n\nhookInstance\n\n\nWhile working in the EHR, a user can perform multiple actions in series or in parallel. For example, a clinician might prescribe two drugs in a row; each prescription action would be assigned a unique \nhookInstance\n. This allows a CDS Service to uniquely identify each hook invocation.\n\n\nNote: the \nhookInstance\n is globally unique and should contain enough entropy to be un-guessable.\n\n\nExample\n\n\n1\n2\n3\n4\n5\ncurl\n  -X POST \\\n  -H \nContent-type: application/json\n \\\n  --data @hook-details-see-example-below\n  \nhttps://example.com/cds-services/static-patient-greeter\n\n\n\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n{\n\n   \nhookInstance\n \n:\n \nd1577c69-dfbe-44ad-ba6d-3e05e953b2ea\n,\n\n   \nfhirServer\n \n:\n \nhttp://hooks.smarthealthit.org:9080\n,\n\n   \nhook\n \n:\n \npatient-view\n,\n\n   \nfhirAuthorization\n \n:\n \n{\n\n     \naccess_token\n \n:\n \nsome-opaque-fhir-access-token\n,\n\n     \ntoken_type\n \n:\n \nBearer\n,\n\n     \nexpires_in\n \n:\n \n300\n,\n\n     \nscope\n \n:\n \npatient/Patient.read patient/Observation.read\n,\n\n     \nsubject\n \n:\n \ncds-service4\n\n   \n},\n\n   \nuser\n \n:\n \nPractitioner/example\n,\n\n   \ncontext\n \n:\n \n{\n\n       \npatientId\n \n:\n \n1288992\n,\n\n       \nencounterId\n \n:\n \n89284\n\n   \n},\n\n   \nprefetch\n \n:\n \n{\n\n      \npatientToGreet\n \n:\n \n{\n\n         \nresourceType\n \n:\n \nPatient\n,\n\n         \ngender\n \n:\n \nmale\n,\n\n         \nbirthDate\n \n:\n \n1925-12-23\n,\n\n         \nid\n \n:\n \n1288992\n,\n\n         \nactive\n \n:\n \ntrue\n\n      \n}\n\n   \n}\n\n\n}\n\n\n\n\n\n\n\nProviding FHIR Resources to a CDS Service\n\n\nEach CDS Service will require specific FHIR resources in order to compute the recommendations the EHR requests. If real-world performance were no issue, an EHR could launch a CDS Service passing only context data, and the CDS Service could then request authorization for  FHIR resources as they were needed, and then retrieve the resources from the EHR's FHIR server.  However, CDS Services must respond quickly (on the order of 500 ms.), and so we provide performance enhancements that allow a CDS Service to request and obtain FHIR resources more efficiently. Regardless of the method used to provide FHIR resources to a CDS Service, the EHR must assure that clinical data provided to the CDS Service are the most current data available to the EHR user.  Decisions based on stale clinical data pose a safety threat to the patient and must be avoided.\n\n\nTwo optional enhancements are provided.  First, FHIR resources may be obtained by passing \"prefetched\" data from the EHR to the CDS Service in the service call.  FHIR resources requested in the CDS Service desciption are passed as key-value pairs, with each key matching a key described in the CDS Service description, and each value being a FHIR resource. If data are to be prefetched, the CDS Service registers a set of \"prefetch templates\" with the EHR, as described in the \nPrefetch Template\n section below.\n\n\nThe second enhancement enables the CDS Service to retrieve FHIR resources for itself, but to do so more efficiently than if it were required to request and obtain its own authorization.  If the EHR decides to have the CDS Service fetch its own FHIR resources, the EHR obtains and passes directly to the CDS Service a bearer token issued for the CDS Service's use in executing FHIR API calls against the EHR FHIR server to obtain the required resources.  Some EHRs may choose to pass prefetched data, along with a bearer token for the CDS Service to use if additional resources are required.  Each EHR may decide which approach, or combination, is preferred, based on performance considerations and assessment of attendant security and safety risks. For more detail, see the \nFHIR Resource Access\n section below.\n\n\nSimilarly, each EHR will decide what FHIR resources to authorize and to prefetch, based on the CDS Service description's \"prefetch\" request and on the provider's assessment of the \"minimum necessary.\"  The EHR provider and the CDS Service provider will negotiate the set of FHIR resources to be provided, and how these data will be provided, as part of their service agreement. \n\n\nPrefetch Template\n\n\nThe prefetch template is a dictionary of \nread\n and \nsearch\n requests to supply\nrelevant data, where the following variables are defined:\n\n\n\n\n\n\n\n\nvariable\n\n\nmeaning\n\n\n\n\n\n\n\n\n\n\n{{Patient.id}}\n\n\nThe id of the patient in context for this activity (e.g. \n123\n)\n\n\n\n\n\n\n{{User.id}}\n\n\nThe type and id of the user for this session (e.g. \nPractitioner/123\n)\n\n\n\n\n\n\n\n\nAn EHR MAY choose to honor some or all of the desired prefetch templates, and is free to choose the most appropriate source for these data. For example:\n\n\n\n\nThe EHR may have some of the desired prefetched data already in memory, thereby removing the need for any network call\n\n\nThe EHR may compute an efficient set of prefetch templates from multiple CDS Services, thereby reducing the number of network calls to a minimum\n\n\nThe EHR may satisfy some of the desired prefetched templates via some internal service or even its own FHIR server\n\n\nThe EHR may deny access because the requested resource is outside the user's authorized context.\n\n\n\n\nRegardless of how the EHR satisfies the prefetch templates (if at all), the prefetched data given to the CDS Service MUST BE equivalent to the data the CDS Service would receive if it were making its own call to the EHR FHIR server using the parameterized prefetch template.\n\n\nThe resulting response, which MUST BE rendered in a single page \u2014 no \"next page\" links allowed \u2014 is passed along to the CDS Service using the \nprefetch\n parameter (see below for a complete example). \n\n\nThe CDS Service MUST NOT receive any prefetch template key that the EHR chooses not to satisfy; in which case the prefetch template key SHOULD NOT be sent. Similarly, if the EHR encounters an error while prefetching any data, the prefetch template key SHOULD NOT be sent to the CDS Service. If the EHR has no data to populate a template prefetch key, the prefetch template key MUST have a value of \nnull\n. It is the CDS Service's responsibility to check prefetched data against its template to determine what requests were satisfied (if any) and to manually retrieve any additional necessary data. If the CDS Service is unable to obtain required data because it cannot access the FHIR server and the request did not contain the necessary prefetch keys, the service SHALL respond with an HTTP 412 Precondition Failed status code.\n\n\nExample of prefetch in request\n\n\n1\n2\n3\n4\n5\n6\n7\n{\n\n  \nprefetch\n:\n \n{\n\n    \np\n:\n \nPatient/{{Patient.id}}\n,\n\n    \na1c\n:\n \nObservation?patient={{Patient.id}}\ncode=4548-4\n_count=1\nsort:desc=date\n,\n\n    \nu\n:\n \nPractitioner/{{User.id}}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nHere is an example prefetch property from a CDS Service discovery endpoint. The\ngoal is to know, at call time:\n\n\n\n\n\n\n\n\nKey\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\np\n\n\nPatient demographics\n\n\n\n\n\n\na1c\n\n\nMost recent Hemoglobin A1c reading for this patient\n\n\n\n\n\n\nu\n\n\nInformation on the current user (Practitioner)\n\n\n\n\n\n\n\n\nExample prefetch response\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n{\n\n  \nprefetch\n:\n \n{\n\n    \np\n:{\n\n      \nresourceType\n:\n \nPatient\n,\n\n      \ngender\n:\n \nmale\n,\n\n      \nbirthDate\n:\n \n1974-12-25\n,\n\n      \n...\n:\n \nsnipped for brevity\n\n    \n},\n\n    \na1c\n:\n \n{\n\n      \nresourceType\n:\n \nBundle\n,\n\n      \ntype\n:\n \nsearchset\n,\n\n      \nentry\n:\n \n[{\n\n        \nresource\n:\n \n{\n\n        \nresourceType\n:\n \nObservation\n,\n\n        \ncode\n:\n \n{\n\n          \ncoding\n:\n \n[{\n\n            \nsystem\n:\n \nhttp://loinc.org\n,\n\n            \ncode\n:\n \n4548-4\n,\n\n            \ndisplay\n:\n \nHemoglobin A1c\n\n            \n}]\n\n          \n},\n\n          \n...\n:\n \nsnipped for brevity\n\n        \n}\n\n      \n}]\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nThe response is augmented to include two prefetch values, where the dictionary\nkeys match the request keys (\np\n and \na1c\n in this case).\n\n\nNote that the missing \nu\n key indicates that either the EHR has decided not to satisfy this particular prefetch template or it was not able to retrieve this prefetched data. The CDS Service is responsible for retrieving this Practitioner data from the FHIR server (if required).\n\n\nPrefetch query restrictions\n\n\nTo reduce the implementation burden on EHRs that support CDS Services, CDS Hooks recommends that prefetch queries only use a subset of the full functionality available in the FHIR specification. Valid prefetch URLs should only contain:\n\n\n\n\ninstance\n level \nread\n interactions (for resources with known ids such as \nPatient\n and \nPractitioner\n)\n\n\ntype\n level \nsearch\n interactions\n\n\nPatient references (e.g. \npatient={{Patient}}\n)\n\n\ntoken\n search parameters using equality (e.g. \ncode=4548-4\n) and optionally the \n:in\n modifier (no other modifiers for token parameters)\n\n\ndate\n search parameters on \ndate\n, \ndateTime\n, \ninstant\n, or \nPeriod\n types only, and using only the prefixes \neq\n, \nlt\n, \ngt\n, \nge\n, \nle\n\n\nthe \n_count\n parameter to limit the number of results returned\n\n\nthe \n_sort\n parameter to allow for \nmost recent\n and \nfirst\n queries\n\n\n\n\nFHIR Resource Access\n\n\nThe CDS Service is able to use the EHR's FHIR server to obtain any FHIR resources it requires beyond those provided by the EHR as prefetched data. This is similar to the approach used by SMART on FHIR wherein the SMART app requests and ultimately obtains an access token from the EHR's Authorization server using the SMART launch workflow, as described in \nSMART App Authorization Guide\n.\n\n\nLike SMART on FHIR, CDS Hooks requires that clients present a valid access token to the FHIR server with each API call. Thus, a CDS Service must be able to obtain an access token before communicating with the EHR's FHIR resource server. While CDS Hooks shares the underlying technical framework and standards as SMART on FHIR, the CDS Hooks workflow must accommodate the automated, low-latency delivery of an access token to the CDS service.\n\n\nWith CDS Hooks, if the EHR wants to provide the CDS Service direct access to FHIR resources, the EHR creates an access token prior to invoking the CDS Service, passing this token to the CDS Service as part of the service call. This approach remains compatible with OAuth 2.0's bearer token protocol while minimizing the number of HTTPS round-trips and the service invocation latency. The EHR remains in control of creating an access token that is associated with the specific CDS Service, user, and context of the invocation.  As the CDS Service executes on behalf of a user, the data to which the CDS Service is given access MUST BE limited to the same restrictions and authorizations afforded the current user. As such, the access token SHALL BE scoped to:\n\n\n\n\nThe CDS Service being invoked\n\n\nThe current user\n\n\n\n\nPassing the Access Token to the CDS Service\n\n\nThe access token is specified in the CDS Service request via the OPTIONAL \nfhirAuthorization\n request parameter. This parameter is an object that contains both the access token as well as other related information.  If the EHR chooses not to pass along an access token, the \nfhirAuthorization\n parameter is omitted.  \n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nREQUIRED\n\n\nstring\n. This is the OAuth 2 access token that provides access to the FHIR server.\n\n\n\n\n\n\ntoken_type\n\n\nREQUIRED\n\n\nstring\n. Fixed value: \nBearer\n.\n\n\n\n\n\n\nexpires_in\n\n\nREQUIRED\n\n\ninteger\n. The lifetime in seconds of the access token.\n\n\n\n\n\n\nscope\n\n\nREQUIRED\n\n\nstring\n. The scopes the access token grants the CDS Service.\n\n\n\n\n\n\nsubject\n\n\nREQUIRED\n\n\nstring\n.  The OAuth 2.0 client identifier of the CDS Service, as registered with the EHR's authorization server.\n\n\n\n\n\n\n\n\nThe \nexpires_in\n value is established by the authorization server and SHOULD BE very short lived, as the access token must be treated as a transient value by the CDS Service.\n\n\nBelow is an example \nfhirAuthorization\n parameter:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n{\n\n  \nfhirAuthorization\n \n:\n \n{\n\n    \naccess_token\n \n:\n \nsome-opaque-fhir-access-token\n,\n\n    \ntoken_type\n \n:\n \nBearer\n,\n\n    \nexpires_in\n \n:\n \n300\n,\n\n    \nscope\n \n:\n \npatient/Patient.read patient/Observation.read\n,\n\n    \nsubject\n \n:\n \ncds-service4\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nCDS Service Response\n\n\nCard Array\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncards\n\n\nREQUIRED\n\n\narray\n. An array of \nCards\n. Cards can provide a combination of information (for reading), suggested actions (to be applied if a user selects them), and links (to launch an app if the user selects them). The EHR decides how to display cards, but we recommend displaying suggestions using buttons, and links using underlined text.\n\n\n\n\n\n\n\n\nIf your CDS Service has no decision support for the user, your service should return a 200 HTTP response with an empty array of cards.\n\n\n\n\nResponse when no decision support is necessary for the user\n\n\n\n\n1\n2\n3\n{\n\n  \ncards\n:\n \n[]\n\n\n}\n\n\n\n\n\n\n\nCard Attributes\n\n\nEach \nCard\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsummary\n\n\nREQUIRED\n\n\nstring\n. one-sentence, \n140-character summary message for display to the user inside of this card.\n\n\n\n\n\n\ndetail\n\n\nOPTIONAL\n\n\nstring\n.  optional detailed information to display; if provided MUST BE represented in \n(GitHub Flavored) Markdown\n without HTML. (For non-urgent cards, the EHR MAY hide these details until the user clicks a link like \"view more details...\".)\n\n\n\n\n\n\nindicator\n\n\nREQUIRED\n\n\nstring\n.  urgency/importance of what this card conveys. Allowed values, in order of increasing urgency, are: \ninfo\n, \nwarning\n, \nhard-stop\n. The EHR MAY use this field to help make UI display decisions such as sort order or coloring. The value \nhard-stop\n indicates that the workflow should not be allowed to proceed.\n\n\n\n\n\n\nsource\n\n\nREQUIRED\n\n\nobject\n. grouping structure for the \nSource\n of the information displayed on this card. The source should be the primary source of guidance for the decision support the card represents.\n\n\n\n\n\n\nsuggestions\n\n\nOPTIONAL\n\n\narray\n of \nSuggestions\n, which allow a service to suggest a set of changes in the context of the current activity (e.g.  changing the dose of the medication currently being prescribed, for the \nmedication-prescribe\n activity). If used, the user MUST BE allowed to choose no more than one suggestion.\n\n\n\n\n\n\nlinks\n\n\nOPTIONAL\n\n\narray\n of \nLinks\n, which allow a service to suggest a link to an app that the user might want to run for additional information or to help guide a decision.\n\n\n\n\n\n\n\n\nSource\n\n\nThe \nSource\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlabel\n\n\nREQUIRED\n\n\nstring\n. A short, human-readable label to display for the source of the information displayed on this card. If a \nurl\n is also specified, this may be the text for the hyperlink.\n\n\n\n\n\n\nurl\n\n\nOPTIONAL\n\n\nURL\n. An optional absolute URL to load (via \nGET\n, in a browser context) when a user clicks on this link to learn more about the organization or data set that provided the information on this card. Note that this URL should not be used to supply a context-specific \"drill-down\" view of the information on this card. For that, use \nlink.url\n instead.\n\n\n\n\n\n\nicon\n\n\nOPTIONAL\n\n\nURL\n. An optional absolute URL to an icon for the source of this card. The icon returned by this URL should be in PNG format, an image size of 100x100 pixels, and must not include any transparent regions.\n\n\n\n\n\n\n\n\nSuggestion\n\n\nEach \nSuggestion\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlabel\n\n\nREQUIRED\n\n\nstring\n. human-readable label to display for this suggestion (e.g. the EHR might render this as the text on a button tied to this suggestion).\n\n\n\n\n\n\nuuid\n\n\nOPTIONAL\n\n\nstring\n. unique identifier for this suggestion. For details see \nSuggestion Tracking Analytics\n\n\n\n\n\n\nactions\n\n\nOPTIONAL\n\n\narray\n. array of objects, each defining a suggested action. Within a suggestion, all actions are logically AND'd together, such that a user selecting a suggestion selects all of the actions within it.\n\n\n\n\n\n\n\n\nSuggestion Tracking Analytics\n\n\nWhenever a user clicks a displayed label (e.g., button) from a \"suggestion\" card, the EHR uses the\nsuggestion \nuuid\n to notify the CDS Service's analytics endpoint via a \nPOST\n\nwith an empty body:\n\n\n1\n`POST {baseUrl}/cds-services/{serviceId}/analytics/{uuid}`\n\n\n\n\n\n\nIf a suggestion has no \nuuid\n, the EHR does not send a notification.\n\n\nAction\n\n\nEach \nAction\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nREQUIRED\n\n\nstring\n. The type of action being performed. Allowed values are: \ncreate\n, \nupdate\n, \ndelete\n.\n\n\n\n\n\n\ndescription\n\n\nREQUIRED\n\n\nstring\n. human-readable description of the suggested action. May be presented to the end-user.\n\n\n\n\n\n\nresource\n\n\nOPTIONAL\n\n\nobject\n. depending upon the \ntype\n attribute, a new resource or the id of a resource. For a type of \ncreate\n, the \nresource\n attribute contains a new FHIR resource to apply within the current activity (e.g. for \nmedication-prescribe\n, this holds the updated prescription as proposed by the suggestion).  For \ndelete\n, this is the id of any resource to remove from the current activity (e.g. for the \norder-review\n activity, this would provide a way to remove an order from the pending list). In activities like \nmedication-prescribe\n where only one \"content\" resource is ever relevant, this field may be omitted. For \nupdate\n, this holds the updated resource to modify from the current activity (e.g. for the \norder-review\n activity, this would provide a way to annotate an order from the pending list with an assessment).\n\n\n\n\n\n\n\n\nLink\n\n\nEach \nLink\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlabel\n\n\nREQUIRED\n\n\nstring\n. human-readable label to display for this link (e.g. the EHR might render this as the underlined text of a clickable link).\n\n\n\n\n\n\nurl\n\n\nREQUIRED\n\n\nURL\n. URL to load (via \nGET\n, in a browser context) when a user clicks on this link. Note that this may be a \"deep link\" with context embedded in path segments, query parameters, or a hash.\n\n\n\n\n\n\ntype\n\n\nREQUIRED\n\n\nstring\n. The type of the given URL. There are two possible values for this field. A type of \nabsolute\n indicates that the URL is absolute and should be treated as-is. A type of \nsmart\n indicates that the URL is a SMART app launch URL and the EHR should ensure the SMART app launch URL is populated with the appropriate SMART launch parameters.\n\n\n\n\n\n\nappContext\n\n\nOPTIONAL\n\n\nstring\n.  An optional field that allows the CDS Service to pass context regarding the launch of this SMART app from the CDS card to the SMART app. The \nappContext\n field should only be valued if the link type is \nsmart\n and is not valid for \nabsolute\n links. The \nappContext\n field and value will be sent to the SMART app as part of the OAuth 2 access token response, alongside the other launch context when the SMART app is launched.\n\n\n\n\n\n\n\n\nExample\n\n\n\n\nExample response\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n{\n\n  \ncards\n:\n \n[\n\n    \n{\n\n      \nsummary\n:\n \nExample Card\n,\n\n      \nindicator\n:\n \ninfo\n,\n\n      \ndetail\n:\n \nThis is an example card.\n,\n\n      \nsource\n:\n \n{\n\n        \nlabel\n:\n \nStatic CDS Service Example\n,\n\n        \nurl\n:\n \nhttps://example.com\n,\n\n        \nicon\n:\n \nhttps://example.com/img/icon-100px.png\n\n      \n},\n\n      \nlinks\n:\n \n[\n\n        \n{\n\n          \nlabel\n:\n \nGoogle\n,\n\n          \nurl\n:\n \nhttps://google.com\n,\n\n          \ntype\n:\n \nabsolute\n\n        \n},\n\n        \n{\n\n          \nlabel\n:\n \nGithub\n,\n\n          \nurl\n:\n \nhttps://github.com\n,\n\n          \ntype\n:\n \nabsolute\n\n        \n},\n\n        \n{\n\n          \nlabel\n:\n \nSMART Example App\n,\n\n          \nurl\n:\n \nhttps://smart.example.com/launch\n,\n\n          \ntype\n:\n \nsmart\n,\n\n          \nappContext\n:\n \nmodule-123\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nsummary\n:\n \nAnother card\n,\n\n      \nindicator\n:\n \nwarning\n,\n\n      \nsource\n:\n \n{\n\n        \nlabel\n:\n \nStatic CDS Service Example\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\nSecurity and Safety\n\n\nSecurity and safety risks associated with the CDS Hooks API include:  \n\n\n\n\nThe risk that confidential information and privileged authorizations transmitted between an EHR and a CDS Service could be surreptitiously intercepted by an attacker;\n\n\nThe risk that an attacker masquerading as a legitimate CDS Service could receive confidential information or privileged authorizations from an EHR, or could provide to an EHR decision support recommendations that could be harmful to a patient;\n\n\nThe risk that an attacker masquerading as a legitimate service-subscribing EHR (i.e., man-in-the-middle) could intercept and possibly alter data exchanged between the two parties.  \n\n\nThe risk that a CDS Service could embed dangerous suggestions or links to dangerous apps in Cards returned to an EHR.  \n\n\nThe risk that a CDS Hooks browser-based deployment could be victimized by a Cross-Origin Resource Sharing (CORS) attack.\n\n\nThe risk that a CDS Service could return a decision based on outdated patient data, resulting in a safety risk to the patient.  \n\n\n\n\nCDS Hooks defines a security model that addresses these risks by assuring that the identities of both the CDS Service and the EHR are authenticated to each other; by protecting confidential information and privileged authorizations shared between an EHR and a CDS Service; by recommending means of assuring data freshness; and by incorporating business mechanisms through which trust is established and maintained between an EHR and a CDS Service. \n\n\nTrusting CDS Services\n\n\nPrior to enabling EHRs to request decision support from any CDS Service, the EHR vendor and/or provider organization is expected to perform due diligence on the CDS Service provider.  Each EHR vendor/provider is individually responsible for determining the suitability, safety and integrity of the CDS Services it uses, based on the organization's own risk-management strategy.  Each EHR vendor/provider SHOULD maintain a \"white list\" (and/or \"black list\") of the CDS Services it has vetted, and the Card links that have been deemed safe to display from within the EHR context. Each provider organization is expected to work with its EHR vendor to choose what CDS Services to allow and to negotiate the conditions under which the CDS Services may be called.  \n\n\nOnce a CDS Service provider is selected, the EHR vendor/provider negotiates the terms under which service will be provided.  This negotiation includes agreement on patient data elements that will be prefetched and provided to the CDS Service, data elements that will be made available through an access token passed by the EHR, and steps the CDS Service must take to protect patient data and access tokens.  To enable the EHR authorization server to authorize CDS Service access to FHIR resources, the CDS Service is registered as a client to the EHR authorization server.  These business arrangements are documented in the service agreement.  \n\n\nEvery interaction between an EHR and a CDS Service is initiated by the EHR sending a service request to a CDS Service endpoint protected using the \nTransport Layer Security protocol\n.   Through the TLS protocol the identity of the CDS Service is authenticated, and an encrypted transmission channel is established between the EHR and the CDS Service. Both the Discovery endpoint and individual CDS Service endpoints are TLS secured.\n\n\nThe EHR\u2019s authorization server is responsible for enforcing restrictions on the CDS Services that may be called and the scope of the FHIR resources that may be prefetched or retrieved from the FHIR server.  Therefore, all CDS Services to be called from within an EHR system MUST BE pre-registered with the authorization server of that EHR.  Pre-registration MUST include registering a CDS client identifier, and agreeing upon the scope of FHIR access that is minimally necessary to provide the clinical decision support required.\n\n\nTrusting EHRs\n\n\nThe service agreement negotiated between the EHR vendor/provider and the CDS Service provider will include obligations the EHR vendor/provider commits to the CDS Service provider. Some agreements may include the use of mutual TLS, in which both ends of the channel are authenticated.  \n\n\nHowever, mutual TLS is impractical for many organizations, and because the EHR initiates the TLS channel set-up, only the CDS Service endpoint will be authenticated.  To enable the CDS Service to authenticate the identity of the EHR, CDS Hooks uses digitally signed \nJSON web tokens (JWT)\n.  \n\n\nEach time an EHR transmits a request to a CDS Service, the request MUST include an \nAuthorization\n header presenting the JWT as a \u201cBearer\u201d token:\n\n\n1\nAuthorization:  Bearer {{JWT}}\n\n\n\n\n\n\nNote that this is for every single CDS Service call, whether that be a Discovery call, a single CDS Service invocation, or multiple exchanges relating to a single service. Also note that mutual TLS MAY be used alongside JSON web tokens to establish trust of the EHR by the CDS Service.\n\n\nThe EHR MUST use its private key to digitally sign the JWT, using the \nJSON Web Signatures (rfc7515)\n standard.\n\n\nThe JWT header contains the following fields (see \nrfc7515 section 4.1\n for further information on these standard headers):\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nalg\n\n\nREQUIRED\n\n\nstring\n The cryptographic algorithm used to sign this JWT.\n\n\n\n\n\n\nkid\n\n\nREQUIRED\n\n\nstring\n The identifier of the key-pair used to sign this JWT.\n\n\n\n\n\n\ntyp\n\n\nREQUIRED\n\n\nstring\n Fixed value: \nJWT\n.\n\n\n\n\n\n\n\n\nThe JWT payload contains the following fields:\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nValue\n\n\n\n\n\n\n\n\n\n\niss\n\n\nREQUIRED\n\n\nstring\n The URL of the issuer of this JWT.  Note that the JWT may be self-issued by the EHR, or may be issued by a third-party identity provider.\n\n\n\n\n\n\nsub\n\n\nREQUIRED\n\n\nstring\n Client_id of the EHR.\n\n\n\n\n\n\naud\n\n\nREQUIRED\n\n\nstring or array of strings\n The CDS Service endpoint that is being called by the EHR. (See more details below).\n\n\n\n\n\n\nexp\n\n\nREQUIRED\n\n\nnumber\n Expiration time integer for this authentication JWT, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).\n\n\n\n\n\n\niat\n\n\nREQUIRED\n\n\nnumber\n The time at which this JWT was issued, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).\n\n\n\n\n\n\njti\n\n\nREQUIRED\n\n\nstring\n A nonce string value that uniquely identifies this authentication JWT (used to protect against replay attacks)\n\n\n\n\n\n\n\n\nPer \nrfc7519\n, the \naud\n value is either a string or an array of strings. For CDS Hooks, this value MUST BE the URL of the CDS Service endpoint being invoked. For example, consider a CDS Service available at a base URL of \nhttps://cds.example.org\n. When the EHR invokes the CDS Service discovery endpoint, the aud value is either \n\"https://cds.example.org/cds-services\"\n or \n[\"https://cds.example.org/cds-services\"]\n. Similarly, when the EHR invokes a particular CDS Service (say, \nsome-service\n), the aud value is either \n\"https://cds.example.org/cds-services/some-service\"\n or \n[\"https://cds.example.org/cds-services/some-service\"]\n.\n\n\nThe EHR MUST make its public key, expressed as a JSON Web Key (JWK) in a JWK Set, as defined by \nrfc7517\n. The \nkid\n value from the JWT header allows a CDS Service to identify the correct JWK in the JWK Set that can be used to verify the signature.\n\n\nAn example JSON web token header and payload:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n{\n\n  \nalg\n:\n \nHS256\n,\n\n  \ntyp\n:\n \nJWT\n,\n\n  \nkid\n:\n \nexample-kid\n\n\n}\n\n\n\n{\n\n  \niss\n:\n \nhttps://fhir-ehr.example.com/\n,\n\n  \nsub\n:\n \nclient_id\n,\n\n  \naud\n:\n \nhttps://cds.example.org/cds-services/some-service\n,\n\n  \nexp\n:\n \n1422568860\n,\n\n  \niat\n:\n \n1311280970\n,\n\n  \njti\n:\n \nee22b021-e1b7-4611-ba5b-8eec6a33ac1e\n\n\n}\n\n\n\n\n\n\n\nUsing the above JWT payload, the complete JWT as passed in the Authorization HTTP header would be:\n\n\n1\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImV4YW1wbGUta2lkIn0.eyJpc3MiOiJodHRwczovL2ZoaXItZWhyLmV4YW1wbGUuY29tLyIsImF1ZCI6Imh0dHBzOi8vY2RzLmV4YW1wbGUub3JnL2Nkcy1zZXJ2aWNlcy9zb21lLXNlcnZpY2UiLCJleHAiOjE0MjI1Njg4NjAsImlhdCI6MTMxMTI4MDk3MCwianRpIjoiZWUyMmIwMjEtZTFiNy00NjExLWJhNWItOGVlYzZhMzNhYzFlIn0.ATQ_bdiMFrKQMz2U-rALxzakOrBSEMtzTtMcDeXiF74\n\n\n\n\n\n\nCross-Origin Resource Sharing\n\n\nCross-origin resource sharing (CORS)\n is a W3C standard mechanism that uses additional HTTP headers to enable a web browser to gain permission to access resources from an Internet domain different from that from which the browser is currently accessing.  CORS is a client-side security mechanism with well-documented security risks.\n\n\nCDS Services and browser-based EHRs will require CORS support. A secure implementation guide for CORS is outside of the scope of this CDS Hooks specification. Organizations planning to implement CDS Hooks with CORS support are referred to the Cross-Origin Resource Sharing section of the \nOWASP HTML5 Security Cheat Sheet\n.  \n\n\nExtensions\n\n\nThe specification is not prescriptive about support for extensions. However, to support extensions, the specification reserves the name \nextension\n and will never define an element with that name, allowing implementations to use it to provide custom behavior and information. The value of an extension element should be a pre-coordinated JSON object.\n\n\nFor example, an extension on a request could look like this:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n{\n\n   \nhookInstance\n \n:\n \nd1577c69-dfbe-44ad-ba6d-3e05e953b2ea\n,\n\n   \nfhirServer\n \n:\n \nhttp://fhir.example.org:9080\n,\n\n   \nhook\n \n:\n \npatient-view\n,\n\n   \nuser\n \n:\n \nPractitioner/example\n,\n\n   \nextension\n \n:\n \n{\n\n      \ncom.example.timestamp\n:\n \n2017-11-27T22:13:25Z\n,\n\n      \nmyextension-practitionerspecialty\n \n:\n \ngastroenterology\n\n   \n}\n\n\n}\n\n\n\n\n\n\n\nAs another example, an extension defined on the discovery response could look like this:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n{\n\n  \nservices\n:\n \n[\n\n    \n{\n\n      \ntitle\n:\n \nExample CDS Service Discovery\n,\n\n      \nhook\n:\n \npatient-view\n,\n\n      \nid\n:\n \npatientview\n,\n\n      \nprefetch\n:\n \n{\n\n        \npatient\n:\n \nPatient/{{Patient.id}}\n\n      \n},\n\n      \ndescription\n:\n \nclinical decision support for patient view\n,\n\n      \nextension\n:\n \n{\n\n          \nexample-client-conformance\n:\n \nhttp://hooks.example.org/fhir/102/Conformance/patientview\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}", 
            "title": "1.0"
        }, 
        {
            "location": "/specification/1.0/#cds-services", 
            "text": "1.0 Draft  This is the draft of the 1.0 release of the CDS Hooks specification. We are currently working towards a 1.0 release and would love your feedback and proposed changes. Look at our  current issue list  and get involved!", 
            "title": "CDS Services"
        }, 
        {
            "location": "/specification/1.0/#overview", 
            "text": "The CDS Hooks specification describes the RESTful APIs and interactions between EHRs and CDS Services. All data exchanged through the RESTful APIs MUST BE sent and received as JSON structures, and MUST be transmitted over channels secured using Transport Layer Security (TLS).", 
            "title": "Overview"
        }, 
        {
            "location": "/specification/1.0/#conformance-language", 
            "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this specification are to be interpreted as described in  RFC2119 .", 
            "title": "Conformance Language"
        }, 
        {
            "location": "/specification/1.0/#limitations", 
            "text": "This specification has the following limitations.   The specification provides options for providing a CDS Service access to the EHR's FHIR resources through use of either prefetch and/or a bearer access token to be presented to the FHIR Server.  Decisions regarding which approach to take, and details regarding how the choice is implemented, are left up to the EHR vendor/provider, as architectural considerations will come into play.  The specification requires that each CDS Service provider be registered (client_id, key-pair identifier) with the EHR Authorization Server, but does not dictate how registration is accomplished (e.g., dynamic vs. manual).  The specification acknowledges that each EHR vendor/provider will need to vet CDS Service providers and suggests that vendors/providers may want to create a \"white list\" of providers deemed \"safe\" and/or a \"black list\" of providers deemed \"unsafe.\"  Similarly, an EHR vendor/provider may choose to assess the safety of active links embedded in CDS Hooks Cards returned to the EHR.  The specification does not suggest how such vetting is accomplished nor suggest factors to consider, as these judgments are dependent upon each EHR vendor's or provider's existing vetting processes and risk-management policy.", 
            "title": "Limitations"
        }, 
        {
            "location": "/specification/1.0/#swagger-open-api-specification", 
            "text": "The CDS Hooks specification is available as an Open API Specification using Swagger. You can download the  API specification  and view it online via the  Swagger Editor .", 
            "title": "Swagger (Open API Specification)"
        }, 
        {
            "location": "/specification/1.0/#discovery", 
            "text": "Developers of CDS Services SHALL provide a stable endpoint for allowing EHRs to discover available CDS Services, including information such as the purpose of the CDS Service, when it should be invoked, and any data that is requested to be prefetched.  A CDS Service provider SHALL expose its Discovery endpoint at\"  1 { baseURL } /cds-services", 
            "title": "Discovery"
        }, 
        {
            "location": "/specification/1.0/#http-request", 
            "text": "The discovery endpoint is always available at  {baseUrl}/cds-services . For example, if the  baseUrl  is https://example.com, the EHR would invoke:  GET https://example.com/cds-services", 
            "title": "HTTP Request"
        }, 
        {
            "location": "/specification/1.0/#response", 
            "text": "The response to the discovery endpoint is an object containing a list of CDS Services.     Field  Description      services  array . An array of  CDS Services     Each CDS Service is described by the following attributes.     Field  Priority  Description      hook  REQUIRED  string  or  url . The hook this service should be invoked on. See  Hook Catalog    title  RECOMMENDED  string .  The human-friendly name of this service    description  REQUIRED  string . The description of this service    id  REQUIRED  string . The {id} portion of the URL to this service which is available at {baseUrl}/cds-services/{id}    prefetch  OPTIONAL  object . An object containing key/value pairs of FHIR queries that this service is requesting that the EHR prefetch and provide on each service call. The key is a  string  that describes the type of data being requested and the value is a  string  representing the FHIR query. See  Prefetch Template .", 
            "title": "Response"
        }, 
        {
            "location": "/specification/1.0/#http-status-codes", 
            "text": "Code  Description      200 OK  A successful response", 
            "title": "HTTP Status Codes"
        }, 
        {
            "location": "/specification/1.0/#discovery-example", 
            "text": "1 curl  https://example.com/cds-services     The above command returns JSON structured like this:    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 { \n   services :   [ \n     { \n       hook :   patient-view , \n       title :   Static CDS Service Example , \n       description :   An example of a CDS Service that returns a static set of cards , \n       id :   static-patient-greeter , \n       prefetch :   { \n         patientToGreet :   Patient/{{Patient.id}} \n       } \n     }, \n     { \n       hook :   medication-prescribe , \n       title :   Medication Echo CDS Service , \n       description :   An example of a CDS Service that simply echos the medication being prescribed , \n       id :   medication-echo , \n       prefetch :   { \n         patient :   Patient/{{Patient.id}} , \n         medications :   MedicationOrder?patient={{Patient.id}} \n       } \n     } \n   ]  }", 
            "title": "Discovery Example"
        }, 
        {
            "location": "/specification/1.0/#calling-a-cds-service", 
            "text": "", 
            "title": "Calling a CDS Service"
        }, 
        {
            "location": "/specification/1.0/#http-request_1", 
            "text": "An EHR calls a CDS service by  POST ing a JSON document to the service\nendpoint, which can be constructed from the CDS Service base URL and an\nindividual service id as  {baseUrl}/cds-services/{service.id} .  The CDS Hook\ncall includes a JSON POST body with the following input fields:     Field  Priority  Description      hook  REQUIRED  string  or  URL . The hook that triggered this CDS Service call (todo: link to hook documentation)    hookInstance  REQUIRED  string .  A UUID for this particular hook call (see more information below)    fhirServer  OPTIONAL  URL .  The base URL EHR's  FHIR  server. If fhirAuthorization is provided, this field is REQUIRED.  The scheme should be  https    fhirAuthorization  OPTIONAL  object . A structure holding an OAuth 2.0 bearer access token granting the CDS Service access to FHIR resources, along with supplemental information relating to the token. See the  FHIR Resource Access  section for more information.    user  REQUIRED  string .  The FHIR resource type + id representing the current user. The type is one of:  Practitioner ,  Patient , or  RelatedPerson . For example,  Practitioner/123    context  REQUIRED  object .  Hook-specific contextual data that the CDS service will need. For example, with the  medication-prescribe  hook this will include  MedicationOrder  being prescribed.  For details, see the  Hooks specification .    prefetch  OPTIONAL  object .  The FHIR data that was prefetched by the EHR (see more information below)", 
            "title": "HTTP Request"
        }, 
        {
            "location": "/specification/1.0/#hookinstance", 
            "text": "While working in the EHR, a user can perform multiple actions in series or in parallel. For example, a clinician might prescribe two drugs in a row; each prescription action would be assigned a unique  hookInstance . This allows a CDS Service to uniquely identify each hook invocation.  Note: the  hookInstance  is globally unique and should contain enough entropy to be un-guessable.", 
            "title": "hookInstance"
        }, 
        {
            "location": "/specification/1.0/#example", 
            "text": "1\n2\n3\n4\n5 curl\n  -X POST \\\n  -H  Content-type: application/json  \\\n  --data @hook-details-see-example-below\n   https://example.com/cds-services/static-patient-greeter     1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26 { \n    hookInstance   :   d1577c69-dfbe-44ad-ba6d-3e05e953b2ea , \n    fhirServer   :   http://hooks.smarthealthit.org:9080 , \n    hook   :   patient-view , \n    fhirAuthorization   :   { \n      access_token   :   some-opaque-fhir-access-token , \n      token_type   :   Bearer , \n      expires_in   :   300 , \n      scope   :   patient/Patient.read patient/Observation.read , \n      subject   :   cds-service4 \n    }, \n    user   :   Practitioner/example , \n    context   :   { \n        patientId   :   1288992 , \n        encounterId   :   89284 \n    }, \n    prefetch   :   { \n       patientToGreet   :   { \n          resourceType   :   Patient , \n          gender   :   male , \n          birthDate   :   1925-12-23 , \n          id   :   1288992 , \n          active   :   true \n       } \n    }  }", 
            "title": "Example"
        }, 
        {
            "location": "/specification/1.0/#providing-fhir-resources-to-a-cds-service", 
            "text": "Each CDS Service will require specific FHIR resources in order to compute the recommendations the EHR requests. If real-world performance were no issue, an EHR could launch a CDS Service passing only context data, and the CDS Service could then request authorization for  FHIR resources as they were needed, and then retrieve the resources from the EHR's FHIR server.  However, CDS Services must respond quickly (on the order of 500 ms.), and so we provide performance enhancements that allow a CDS Service to request and obtain FHIR resources more efficiently. Regardless of the method used to provide FHIR resources to a CDS Service, the EHR must assure that clinical data provided to the CDS Service are the most current data available to the EHR user.  Decisions based on stale clinical data pose a safety threat to the patient and must be avoided.  Two optional enhancements are provided.  First, FHIR resources may be obtained by passing \"prefetched\" data from the EHR to the CDS Service in the service call.  FHIR resources requested in the CDS Service desciption are passed as key-value pairs, with each key matching a key described in the CDS Service description, and each value being a FHIR resource. If data are to be prefetched, the CDS Service registers a set of \"prefetch templates\" with the EHR, as described in the  Prefetch Template  section below.  The second enhancement enables the CDS Service to retrieve FHIR resources for itself, but to do so more efficiently than if it were required to request and obtain its own authorization.  If the EHR decides to have the CDS Service fetch its own FHIR resources, the EHR obtains and passes directly to the CDS Service a bearer token issued for the CDS Service's use in executing FHIR API calls against the EHR FHIR server to obtain the required resources.  Some EHRs may choose to pass prefetched data, along with a bearer token for the CDS Service to use if additional resources are required.  Each EHR may decide which approach, or combination, is preferred, based on performance considerations and assessment of attendant security and safety risks. For more detail, see the  FHIR Resource Access  section below.  Similarly, each EHR will decide what FHIR resources to authorize and to prefetch, based on the CDS Service description's \"prefetch\" request and on the provider's assessment of the \"minimum necessary.\"  The EHR provider and the CDS Service provider will negotiate the set of FHIR resources to be provided, and how these data will be provided, as part of their service agreement.", 
            "title": "Providing FHIR Resources to a CDS Service"
        }, 
        {
            "location": "/specification/1.0/#prefetch-template", 
            "text": "The prefetch template is a dictionary of  read  and  search  requests to supply\nrelevant data, where the following variables are defined:     variable  meaning      {{Patient.id}}  The id of the patient in context for this activity (e.g.  123 )    {{User.id}}  The type and id of the user for this session (e.g.  Practitioner/123 )     An EHR MAY choose to honor some or all of the desired prefetch templates, and is free to choose the most appropriate source for these data. For example:   The EHR may have some of the desired prefetched data already in memory, thereby removing the need for any network call  The EHR may compute an efficient set of prefetch templates from multiple CDS Services, thereby reducing the number of network calls to a minimum  The EHR may satisfy some of the desired prefetched templates via some internal service or even its own FHIR server  The EHR may deny access because the requested resource is outside the user's authorized context.   Regardless of how the EHR satisfies the prefetch templates (if at all), the prefetched data given to the CDS Service MUST BE equivalent to the data the CDS Service would receive if it were making its own call to the EHR FHIR server using the parameterized prefetch template.  The resulting response, which MUST BE rendered in a single page \u2014 no \"next page\" links allowed \u2014 is passed along to the CDS Service using the  prefetch  parameter (see below for a complete example).   The CDS Service MUST NOT receive any prefetch template key that the EHR chooses not to satisfy; in which case the prefetch template key SHOULD NOT be sent. Similarly, if the EHR encounters an error while prefetching any data, the prefetch template key SHOULD NOT be sent to the CDS Service. If the EHR has no data to populate a template prefetch key, the prefetch template key MUST have a value of  null . It is the CDS Service's responsibility to check prefetched data against its template to determine what requests were satisfied (if any) and to manually retrieve any additional necessary data. If the CDS Service is unable to obtain required data because it cannot access the FHIR server and the request did not contain the necessary prefetch keys, the service SHALL respond with an HTTP 412 Precondition Failed status code.", 
            "title": "Prefetch Template"
        }, 
        {
            "location": "/specification/1.0/#example-of-prefetch-in-request", 
            "text": "1\n2\n3\n4\n5\n6\n7 { \n   prefetch :   { \n     p :   Patient/{{Patient.id}} , \n     a1c :   Observation?patient={{Patient.id}} code=4548-4 _count=1 sort:desc=date , \n     u :   Practitioner/{{User.id}} \n   }  }    Here is an example prefetch property from a CDS Service discovery endpoint. The\ngoal is to know, at call time:     Key  Description      p  Patient demographics    a1c  Most recent Hemoglobin A1c reading for this patient    u  Information on the current user (Practitioner)", 
            "title": "Example of prefetch in request"
        }, 
        {
            "location": "/specification/1.0/#example-prefetch-response", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27 { \n   prefetch :   { \n     p :{ \n       resourceType :   Patient , \n       gender :   male , \n       birthDate :   1974-12-25 , \n       ... :   snipped for brevity \n     }, \n     a1c :   { \n       resourceType :   Bundle , \n       type :   searchset , \n       entry :   [{ \n         resource :   { \n         resourceType :   Observation , \n         code :   { \n           coding :   [{ \n             system :   http://loinc.org , \n             code :   4548-4 , \n             display :   Hemoglobin A1c \n             }] \n           }, \n           ... :   snipped for brevity \n         } \n       }] \n     } \n   }  }    The response is augmented to include two prefetch values, where the dictionary\nkeys match the request keys ( p  and  a1c  in this case).  Note that the missing  u  key indicates that either the EHR has decided not to satisfy this particular prefetch template or it was not able to retrieve this prefetched data. The CDS Service is responsible for retrieving this Practitioner data from the FHIR server (if required).", 
            "title": "Example prefetch response"
        }, 
        {
            "location": "/specification/1.0/#prefetch-query-restrictions", 
            "text": "To reduce the implementation burden on EHRs that support CDS Services, CDS Hooks recommends that prefetch queries only use a subset of the full functionality available in the FHIR specification. Valid prefetch URLs should only contain:   instance  level  read  interactions (for resources with known ids such as  Patient  and  Practitioner )  type  level  search  interactions  Patient references (e.g.  patient={{Patient}} )  token  search parameters using equality (e.g.  code=4548-4 ) and optionally the  :in  modifier (no other modifiers for token parameters)  date  search parameters on  date ,  dateTime ,  instant , or  Period  types only, and using only the prefixes  eq ,  lt ,  gt ,  ge ,  le  the  _count  parameter to limit the number of results returned  the  _sort  parameter to allow for  most recent  and  first  queries", 
            "title": "Prefetch query restrictions"
        }, 
        {
            "location": "/specification/1.0/#fhir-resource-access", 
            "text": "The CDS Service is able to use the EHR's FHIR server to obtain any FHIR resources it requires beyond those provided by the EHR as prefetched data. This is similar to the approach used by SMART on FHIR wherein the SMART app requests and ultimately obtains an access token from the EHR's Authorization server using the SMART launch workflow, as described in  SMART App Authorization Guide .  Like SMART on FHIR, CDS Hooks requires that clients present a valid access token to the FHIR server with each API call. Thus, a CDS Service must be able to obtain an access token before communicating with the EHR's FHIR resource server. While CDS Hooks shares the underlying technical framework and standards as SMART on FHIR, the CDS Hooks workflow must accommodate the automated, low-latency delivery of an access token to the CDS service.  With CDS Hooks, if the EHR wants to provide the CDS Service direct access to FHIR resources, the EHR creates an access token prior to invoking the CDS Service, passing this token to the CDS Service as part of the service call. This approach remains compatible with OAuth 2.0's bearer token protocol while minimizing the number of HTTPS round-trips and the service invocation latency. The EHR remains in control of creating an access token that is associated with the specific CDS Service, user, and context of the invocation.  As the CDS Service executes on behalf of a user, the data to which the CDS Service is given access MUST BE limited to the same restrictions and authorizations afforded the current user. As such, the access token SHALL BE scoped to:   The CDS Service being invoked  The current user", 
            "title": "FHIR Resource Access"
        }, 
        {
            "location": "/specification/1.0/#passing-the-access-token-to-the-cds-service", 
            "text": "The access token is specified in the CDS Service request via the OPTIONAL  fhirAuthorization  request parameter. This parameter is an object that contains both the access token as well as other related information.  If the EHR chooses not to pass along an access token, the  fhirAuthorization  parameter is omitted.       Field  Priority  Description      access_token  REQUIRED  string . This is the OAuth 2 access token that provides access to the FHIR server.    token_type  REQUIRED  string . Fixed value:  Bearer .    expires_in  REQUIRED  integer . The lifetime in seconds of the access token.    scope  REQUIRED  string . The scopes the access token grants the CDS Service.    subject  REQUIRED  string .  The OAuth 2.0 client identifier of the CDS Service, as registered with the EHR's authorization server.     The  expires_in  value is established by the authorization server and SHOULD BE very short lived, as the access token must be treated as a transient value by the CDS Service.  Below is an example  fhirAuthorization  parameter:  1\n2\n3\n4\n5\n6\n7\n8\n9 { \n   fhirAuthorization   :   { \n     access_token   :   some-opaque-fhir-access-token , \n     token_type   :   Bearer , \n     expires_in   :   300 , \n     scope   :   patient/Patient.read patient/Observation.read , \n     subject   :   cds-service4 \n   }  }", 
            "title": "Passing the Access Token to the CDS Service"
        }, 
        {
            "location": "/specification/1.0/#cds-service-response", 
            "text": "", 
            "title": "CDS Service Response"
        }, 
        {
            "location": "/specification/1.0/#card-array", 
            "text": "Field  Priority  Description      cards  REQUIRED  array . An array of  Cards . Cards can provide a combination of information (for reading), suggested actions (to be applied if a user selects them), and links (to launch an app if the user selects them). The EHR decides how to display cards, but we recommend displaying suggestions using buttons, and links using underlined text.     If your CDS Service has no decision support for the user, your service should return a 200 HTTP response with an empty array of cards.   Response when no decision support is necessary for the user   1\n2\n3 { \n   cards :   []  }", 
            "title": "Card Array"
        }, 
        {
            "location": "/specification/1.0/#card-attributes", 
            "text": "Each  Card  is described by the following attributes.     Field  Priority  Description      summary  REQUIRED  string . one-sentence,  140-character summary message for display to the user inside of this card.    detail  OPTIONAL  string .  optional detailed information to display; if provided MUST BE represented in  (GitHub Flavored) Markdown  without HTML. (For non-urgent cards, the EHR MAY hide these details until the user clicks a link like \"view more details...\".)    indicator  REQUIRED  string .  urgency/importance of what this card conveys. Allowed values, in order of increasing urgency, are:  info ,  warning ,  hard-stop . The EHR MAY use this field to help make UI display decisions such as sort order or coloring. The value  hard-stop  indicates that the workflow should not be allowed to proceed.    source  REQUIRED  object . grouping structure for the  Source  of the information displayed on this card. The source should be the primary source of guidance for the decision support the card represents.    suggestions  OPTIONAL  array  of  Suggestions , which allow a service to suggest a set of changes in the context of the current activity (e.g.  changing the dose of the medication currently being prescribed, for the  medication-prescribe  activity). If used, the user MUST BE allowed to choose no more than one suggestion.    links  OPTIONAL  array  of  Links , which allow a service to suggest a link to an app that the user might want to run for additional information or to help guide a decision.", 
            "title": "Card Attributes"
        }, 
        {
            "location": "/specification/1.0/#source", 
            "text": "The  Source  is described by the following attributes.     Field  Priority  Description      label  REQUIRED  string . A short, human-readable label to display for the source of the information displayed on this card. If a  url  is also specified, this may be the text for the hyperlink.    url  OPTIONAL  URL . An optional absolute URL to load (via  GET , in a browser context) when a user clicks on this link to learn more about the organization or data set that provided the information on this card. Note that this URL should not be used to supply a context-specific \"drill-down\" view of the information on this card. For that, use  link.url  instead.    icon  OPTIONAL  URL . An optional absolute URL to an icon for the source of this card. The icon returned by this URL should be in PNG format, an image size of 100x100 pixels, and must not include any transparent regions.", 
            "title": "Source"
        }, 
        {
            "location": "/specification/1.0/#suggestion", 
            "text": "Each  Suggestion  is described by the following attributes.     Field  Priority  Description      label  REQUIRED  string . human-readable label to display for this suggestion (e.g. the EHR might render this as the text on a button tied to this suggestion).    uuid  OPTIONAL  string . unique identifier for this suggestion. For details see  Suggestion Tracking Analytics    actions  OPTIONAL  array . array of objects, each defining a suggested action. Within a suggestion, all actions are logically AND'd together, such that a user selecting a suggestion selects all of the actions within it.", 
            "title": "Suggestion"
        }, 
        {
            "location": "/specification/1.0/#suggestion-tracking-analytics", 
            "text": "Whenever a user clicks a displayed label (e.g., button) from a \"suggestion\" card, the EHR uses the\nsuggestion  uuid  to notify the CDS Service's analytics endpoint via a  POST \nwith an empty body:  1 `POST {baseUrl}/cds-services/{serviceId}/analytics/{uuid}`   If a suggestion has no  uuid , the EHR does not send a notification.", 
            "title": "Suggestion Tracking Analytics"
        }, 
        {
            "location": "/specification/1.0/#action", 
            "text": "Each  Action  is described by the following attributes.     Field  Priority  Description      type  REQUIRED  string . The type of action being performed. Allowed values are:  create ,  update ,  delete .    description  REQUIRED  string . human-readable description of the suggested action. May be presented to the end-user.    resource  OPTIONAL  object . depending upon the  type  attribute, a new resource or the id of a resource. For a type of  create , the  resource  attribute contains a new FHIR resource to apply within the current activity (e.g. for  medication-prescribe , this holds the updated prescription as proposed by the suggestion).  For  delete , this is the id of any resource to remove from the current activity (e.g. for the  order-review  activity, this would provide a way to remove an order from the pending list). In activities like  medication-prescribe  where only one \"content\" resource is ever relevant, this field may be omitted. For  update , this holds the updated resource to modify from the current activity (e.g. for the  order-review  activity, this would provide a way to annotate an order from the pending list with an assessment).", 
            "title": "Action"
        }, 
        {
            "location": "/specification/1.0/#link", 
            "text": "Each  Link  is described by the following attributes.     Field  Priority  Description      label  REQUIRED  string . human-readable label to display for this link (e.g. the EHR might render this as the underlined text of a clickable link).    url  REQUIRED  URL . URL to load (via  GET , in a browser context) when a user clicks on this link. Note that this may be a \"deep link\" with context embedded in path segments, query parameters, or a hash.    type  REQUIRED  string . The type of the given URL. There are two possible values for this field. A type of  absolute  indicates that the URL is absolute and should be treated as-is. A type of  smart  indicates that the URL is a SMART app launch URL and the EHR should ensure the SMART app launch URL is populated with the appropriate SMART launch parameters.    appContext  OPTIONAL  string .  An optional field that allows the CDS Service to pass context regarding the launch of this SMART app from the CDS card to the SMART app. The  appContext  field should only be valued if the link type is  smart  and is not valid for  absolute  links. The  appContext  field and value will be sent to the SMART app as part of the OAuth 2 access token response, alongside the other launch context when the SMART app is launched.", 
            "title": "Link"
        }, 
        {
            "location": "/specification/1.0/#example_1", 
            "text": "Example response    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39 { \n   cards :   [ \n     { \n       summary :   Example Card , \n       indicator :   info , \n       detail :   This is an example card. , \n       source :   { \n         label :   Static CDS Service Example , \n         url :   https://example.com , \n         icon :   https://example.com/img/icon-100px.png \n       }, \n       links :   [ \n         { \n           label :   Google , \n           url :   https://google.com , \n           type :   absolute \n         }, \n         { \n           label :   Github , \n           url :   https://github.com , \n           type :   absolute \n         }, \n         { \n           label :   SMART Example App , \n           url :   https://smart.example.com/launch , \n           type :   smart , \n           appContext :   module-123 \n         } \n       ] \n     }, \n     { \n       summary :   Another card , \n       indicator :   warning , \n       source :   { \n         label :   Static CDS Service Example \n       } \n     } \n   ]  }", 
            "title": "Example"
        }, 
        {
            "location": "/specification/1.0/#security-and-safety", 
            "text": "Security and safety risks associated with the CDS Hooks API include:     The risk that confidential information and privileged authorizations transmitted between an EHR and a CDS Service could be surreptitiously intercepted by an attacker;  The risk that an attacker masquerading as a legitimate CDS Service could receive confidential information or privileged authorizations from an EHR, or could provide to an EHR decision support recommendations that could be harmful to a patient;  The risk that an attacker masquerading as a legitimate service-subscribing EHR (i.e., man-in-the-middle) could intercept and possibly alter data exchanged between the two parties.    The risk that a CDS Service could embed dangerous suggestions or links to dangerous apps in Cards returned to an EHR.    The risk that a CDS Hooks browser-based deployment could be victimized by a Cross-Origin Resource Sharing (CORS) attack.  The risk that a CDS Service could return a decision based on outdated patient data, resulting in a safety risk to the patient.     CDS Hooks defines a security model that addresses these risks by assuring that the identities of both the CDS Service and the EHR are authenticated to each other; by protecting confidential information and privileged authorizations shared between an EHR and a CDS Service; by recommending means of assuring data freshness; and by incorporating business mechanisms through which trust is established and maintained between an EHR and a CDS Service.", 
            "title": "Security and Safety"
        }, 
        {
            "location": "/specification/1.0/#trusting-cds-services", 
            "text": "Prior to enabling EHRs to request decision support from any CDS Service, the EHR vendor and/or provider organization is expected to perform due diligence on the CDS Service provider.  Each EHR vendor/provider is individually responsible for determining the suitability, safety and integrity of the CDS Services it uses, based on the organization's own risk-management strategy.  Each EHR vendor/provider SHOULD maintain a \"white list\" (and/or \"black list\") of the CDS Services it has vetted, and the Card links that have been deemed safe to display from within the EHR context. Each provider organization is expected to work with its EHR vendor to choose what CDS Services to allow and to negotiate the conditions under which the CDS Services may be called.    Once a CDS Service provider is selected, the EHR vendor/provider negotiates the terms under which service will be provided.  This negotiation includes agreement on patient data elements that will be prefetched and provided to the CDS Service, data elements that will be made available through an access token passed by the EHR, and steps the CDS Service must take to protect patient data and access tokens.  To enable the EHR authorization server to authorize CDS Service access to FHIR resources, the CDS Service is registered as a client to the EHR authorization server.  These business arrangements are documented in the service agreement.    Every interaction between an EHR and a CDS Service is initiated by the EHR sending a service request to a CDS Service endpoint protected using the  Transport Layer Security protocol .   Through the TLS protocol the identity of the CDS Service is authenticated, and an encrypted transmission channel is established between the EHR and the CDS Service. Both the Discovery endpoint and individual CDS Service endpoints are TLS secured.  The EHR\u2019s authorization server is responsible for enforcing restrictions on the CDS Services that may be called and the scope of the FHIR resources that may be prefetched or retrieved from the FHIR server.  Therefore, all CDS Services to be called from within an EHR system MUST BE pre-registered with the authorization server of that EHR.  Pre-registration MUST include registering a CDS client identifier, and agreeing upon the scope of FHIR access that is minimally necessary to provide the clinical decision support required.", 
            "title": "Trusting CDS Services"
        }, 
        {
            "location": "/specification/1.0/#trusting-ehrs", 
            "text": "The service agreement negotiated between the EHR vendor/provider and the CDS Service provider will include obligations the EHR vendor/provider commits to the CDS Service provider. Some agreements may include the use of mutual TLS, in which both ends of the channel are authenticated.    However, mutual TLS is impractical for many organizations, and because the EHR initiates the TLS channel set-up, only the CDS Service endpoint will be authenticated.  To enable the CDS Service to authenticate the identity of the EHR, CDS Hooks uses digitally signed  JSON web tokens (JWT) .    Each time an EHR transmits a request to a CDS Service, the request MUST include an  Authorization  header presenting the JWT as a \u201cBearer\u201d token:  1 Authorization:  Bearer {{JWT}}   Note that this is for every single CDS Service call, whether that be a Discovery call, a single CDS Service invocation, or multiple exchanges relating to a single service. Also note that mutual TLS MAY be used alongside JSON web tokens to establish trust of the EHR by the CDS Service.  The EHR MUST use its private key to digitally sign the JWT, using the  JSON Web Signatures (rfc7515)  standard.  The JWT header contains the following fields (see  rfc7515 section 4.1  for further information on these standard headers):     Field  Priority  Value      alg  REQUIRED  string  The cryptographic algorithm used to sign this JWT.    kid  REQUIRED  string  The identifier of the key-pair used to sign this JWT.    typ  REQUIRED  string  Fixed value:  JWT .     The JWT payload contains the following fields:     Field  Priority  Value      iss  REQUIRED  string  The URL of the issuer of this JWT.  Note that the JWT may be self-issued by the EHR, or may be issued by a third-party identity provider.    sub  REQUIRED  string  Client_id of the EHR.    aud  REQUIRED  string or array of strings  The CDS Service endpoint that is being called by the EHR. (See more details below).    exp  REQUIRED  number  Expiration time integer for this authentication JWT, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).    iat  REQUIRED  number  The time at which this JWT was issued, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).    jti  REQUIRED  string  A nonce string value that uniquely identifies this authentication JWT (used to protect against replay attacks)     Per  rfc7519 , the  aud  value is either a string or an array of strings. For CDS Hooks, this value MUST BE the URL of the CDS Service endpoint being invoked. For example, consider a CDS Service available at a base URL of  https://cds.example.org . When the EHR invokes the CDS Service discovery endpoint, the aud value is either  \"https://cds.example.org/cds-services\"  or  [\"https://cds.example.org/cds-services\"] . Similarly, when the EHR invokes a particular CDS Service (say,  some-service ), the aud value is either  \"https://cds.example.org/cds-services/some-service\"  or  [\"https://cds.example.org/cds-services/some-service\"] .  The EHR MUST make its public key, expressed as a JSON Web Key (JWK) in a JWK Set, as defined by  rfc7517 . The  kid  value from the JWT header allows a CDS Service to identify the correct JWK in the JWK Set that can be used to verify the signature.  An example JSON web token header and payload:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 { \n   alg :   HS256 , \n   typ :   JWT , \n   kid :   example-kid  }  { \n   iss :   https://fhir-ehr.example.com/ , \n   sub :   client_id , \n   aud :   https://cds.example.org/cds-services/some-service , \n   exp :   1422568860 , \n   iat :   1311280970 , \n   jti :   ee22b021-e1b7-4611-ba5b-8eec6a33ac1e  }    Using the above JWT payload, the complete JWT as passed in the Authorization HTTP header would be:  1 Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImV4YW1wbGUta2lkIn0.eyJpc3MiOiJodHRwczovL2ZoaXItZWhyLmV4YW1wbGUuY29tLyIsImF1ZCI6Imh0dHBzOi8vY2RzLmV4YW1wbGUub3JnL2Nkcy1zZXJ2aWNlcy9zb21lLXNlcnZpY2UiLCJleHAiOjE0MjI1Njg4NjAsImlhdCI6MTMxMTI4MDk3MCwianRpIjoiZWUyMmIwMjEtZTFiNy00NjExLWJhNWItOGVlYzZhMzNhYzFlIn0.ATQ_bdiMFrKQMz2U-rALxzakOrBSEMtzTtMcDeXiF74", 
            "title": "Trusting EHRs"
        }, 
        {
            "location": "/specification/1.0/#cross-origin-resource-sharing", 
            "text": "Cross-origin resource sharing (CORS)  is a W3C standard mechanism that uses additional HTTP headers to enable a web browser to gain permission to access resources from an Internet domain different from that from which the browser is currently accessing.  CORS is a client-side security mechanism with well-documented security risks.  CDS Services and browser-based EHRs will require CORS support. A secure implementation guide for CORS is outside of the scope of this CDS Hooks specification. Organizations planning to implement CDS Hooks with CORS support are referred to the Cross-Origin Resource Sharing section of the  OWASP HTML5 Security Cheat Sheet .", 
            "title": "Cross-Origin Resource Sharing"
        }, 
        {
            "location": "/specification/1.0/#extensions", 
            "text": "The specification is not prescriptive about support for extensions. However, to support extensions, the specification reserves the name  extension  and will never define an element with that name, allowing implementations to use it to provide custom behavior and information. The value of an extension element should be a pre-coordinated JSON object.  For example, an extension on a request could look like this:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 { \n    hookInstance   :   d1577c69-dfbe-44ad-ba6d-3e05e953b2ea , \n    fhirServer   :   http://fhir.example.org:9080 , \n    hook   :   patient-view , \n    user   :   Practitioner/example , \n    extension   :   { \n       com.example.timestamp :   2017-11-27T22:13:25Z , \n       myextension-practitionerspecialty   :   gastroenterology \n    }  }    As another example, an extension defined on the discovery response could look like this:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 { \n   services :   [ \n     { \n       title :   Example CDS Service Discovery , \n       hook :   patient-view , \n       id :   patientview , \n       prefetch :   { \n         patient :   Patient/{{Patient.id}} \n       }, \n       description :   clinical decision support for patient view , \n       extension :   { \n           example-client-conformance :   http://hooks.example.org/fhir/102/Conformance/patientview \n       } \n     } \n   ]  }", 
            "title": "Extensions"
        }, 
        {
            "location": "/hooks/", 
            "text": "Hooks\n\n\nOverview\n\n\nAs a specification, CDS Hooks does not prescribe a default or required set of hooks for implementers. Rather, the set of hooks defined here are merely a set of common use cases that were used to aid in the creation of CDS Hooks. The set of hooks defined here are not a closed set; anyone is able to define new hooks to fit their use cases.\n\n\nNew hooks should be added to the CDS \nproposed hooks Wiki page\n according to the format described below.\n\n\nNote that each hook (e.g. \nmedication-prescribe\n) represents something the user is doing in the EHR and multiple CDS Services might respond to the same hook (e.g. a \"price check\" service and a \"prior authorization\" service might both respond to \nmedication-prescribe\n).\n\n\nHook context and prefetch\n\n\nWhat's the difference?\n\n\nA discrete user workflow or action within the EHR often naturally includes a set of contextual data. This context can contain both required and optional data and is specific to a hook. Additionally, the context data is relevant to most CDS Services subscribing to the hook.\n\n\nWhen the context data relates to a FHIR data type, it is important not to conflate context and prefetch. For instance, imagine a hook for opening a patient's chart. This hook should include the FHIR identifier of the patient whose chart is being opened, not the full patient FHIR resource. In this case, the FHIR identifier of the patient is appropriate as CDS Services may not be interested in details about the patient resource but instead other data related to this patient. Or, a CDS Service may only need the full patient resource in certain scenarios. Therefore, including the full patient resource in context would be unnecessary. For CDS Services that want the full patient resource, they can request it to be prefetched or fetch it as need from the FHIR server.\n\n\nConsider another hook for when a new patient is being registered. In this case, it would likely be appropriate for the context to contain the full FHIR resource for the patient being registered as the patient may not be yet recorded in the EHR (and thus not available from the FHIR server) and CDS Services using this hook would predominately be interested in the details of the patient being registered.\n\n\nAdditionally, consider a PGX CDS Service and a Zika screening CDS Service, each of which is subscribed to the same hook. The context data specified by their shared hook should contain data relevant to both CDS Services; however, each service will have other specific data needs that will necessitate disparate prefetch requests. For instance, the PGX CDS Service likely is interested in genomics data whereas the Zika screening CDS Service will want Observations.\n\n\nIn summary, context is data specific to a hook and universally relevant to all CDS Services subscribed to said hook. Prefetch data is unique to individual CDS Services and supplements the data from context.\n\n\nPrefetch tokens\n\n\nOften a prefetch template builds on the contextual data associated with the hook. For example, a particular CDS Service might recommend guidance based on a patient's conditions when the chart is opened. The FHIR query to retrieve these conditions might be \nCondition?patient=123\n. In order to express this as a prefetch template, the CDS Service must express the FHIR identifier of the patient as a token so that the EHR can replace the token with the appropriate value. When context fields are used as tokens, their token name MUST be \ncontext.name-of-the-field\n. For example, given a context like:\n\n\n1\n2\n3\ncontext\n \n:\n \n{\n\n  \npatientId\n:\n \n123\n\n\n}\n\n\n\n\n\n\n\nThe token name would be \n{{context.patientId}}\n. Again using our above conditions example, the complete prefetch template would be \nCondition?patient={{context.patientId}}\n.\n\n\nOnly the first level fields in context may be considered for tokens. Hook creators MUST document which fields in the context are supported as tokens. If a context field can be tokenized, the value of the context field MUST be a data type that can placed into a FHIR query (eg, string, number, etc).\n\n\nFor example, given the following context that contains amongst other things, a Patient FHIR resource:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\ncontext\n \n:\n \n{\n\n  \nencounterId\n:\n \n456\n,\n\n  \npatient\n:\n \n{\n\n    \nresourceType\n:\n \nPatient\n,\n\n    \nid\n:\n \n123\n,\n\n    \nactive\n:\n \ntrue\n,\n\n    \nname\n:\n \n[\n\n      \n{\n\n        \nuse\n:\n \nofficial\n,\n\n        \nfamily\n:\n \nWatts\n,\n\n        \ngiven\n:\n \n[\n\n          \nWade\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \ngender\n:\n \nmale\n,\n\n    \nbirthDate\n:\n \n2024-08-12\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nOnly the \nencounterId\n field in this example is eligible to be a prefetch token as it is a first level field and the datatype (string) can be placed into the FHIR query. The Patient.id value in the context is not eligible to be a prefetch token because it is not a first level field. If the hook creator intends for the Patient.id value to be available as a prefetch token, it must be made available as a first level field. Using the aforementioned example, we simply add a new \npatientId\n field:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\ncontext\n \n:\n \n{\n\n  \npatientId\n:\n \n123\n,\n\n  \nencounterId\n:\n \n456\n,\n\n  \npatient\n:\n \n{\n\n    \nresourceType\n:\n \nPatient\n,\n\n    \nid\n:\n \n123\n,\n\n    \nactive\n:\n \ntrue\n,\n\n    \nname\n:\n \n[\n\n      \n{\n\n        \nuse\n:\n \nofficial\n,\n\n        \nfamily\n:\n \nWatts\n,\n\n        \ngiven\n:\n \n[\n\n          \nWade\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \ngender\n:\n \nmale\n,\n\n    \nbirthDate\n:\n \n2024-08-12\n\n  \n}\n\n\n\n\n\n\n\nHook Definition Format\n\n\nHooks are defined in the following format:\n\n\n\n\nhook-name-expressed-as-noun-verb\n\n\nThe name of the hook SHOULD succinctly and clearly describes the activity or event. Hook names are unique so hook creators SHOULD take care to ensure newly proposed hooks do not conflict with an existing hook name. Hook creators MAY choose to name their hook with a URI (e.g. \nhttps://example.org/hooks/patient-transmogrify\n) if the hook is specific to an organization.\n\n\nWhen naming hooks, the name should start with the subject (noun) of the hook and be followed by the activity (verb). For example, \npatient-view\n (not \nview-patient\n) or \nmedication-prescribe\n (not \nprescribe-medication\n).\n\n\nWorkflow\n\n\nDescribe when this hook occurs in a workflow. Hook creators SHOULD include as much detail and clarity as possible to minimize any ambiguity or confusion amongst implementors.\n\n\nContext\n\n\nDescribe the set of contextual data used by this hook. Only data logically and necessarily associated with the purpose of this hook should be represented in context.\n\n\nAll fields defined by the hook's context MUST be defined in a table where each field is described by three attributes:\n\n\n\n\nField: The name of the property in the context JSON object.\n\n\nPriority: A fixed value of either \nREQUIRED\n or \nOPTIONAL\n\n\nPrefetch Token: A fixed value of either \nYes\n or \nNo\n, indicating whether this field can be tokenized in a prefetch template.\n\n\nDescription: The value of the property in the context JSON object, expressed both as the JSON data type as well as a functional description of the value. If this value can change according to the FHIR version in use, the description SHOULD describe the value for each supported FHIR version.\n\n\n\n\nWhile a context with FHIR data SHOULD document any differences in the data between FHIR versions, when a context object is valued, all FHIR resources in context MUST be based on the same FHIR version.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nPrefetch Token\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsomeProperty\n\n\nREQUIRED\n\n\nYes\n\n\nstring\n A clear description of the value of this field.\n\n\n\n\n\n\nanotherProperty\n\n\nOPTIONAL\n\n\nNo\n\n\nnumber\n A clear description of the value of this field.\n\n\n\n\n\n\nsomeObject\n\n\nREQUIRED\n\n\nNo\n\n\nobject\n A clear description of the value of this field.\n\n\n\n\n\n\nmoreObjects\n\n\nOPTIONAL\n\n\nNo\n\n\narray\n A clear description of the items in this array.\n\n\n\n\n\n\n\n\nExamples\n\n\nHook creators SHOULD include examples of the context.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\ncontext\n:\n{\n\n  \nsomeProperty\n:\nfoo\n,\n\n  \nanotherProperty\n:\n123\n,\n\n  \nsomeObject\n:\n \n{\n\n    \ncolor\n:\n \nred\n,\n\n    \nversion\n:\n \n1\n\n  \n},\n\n  \nmoreObjects\n:[]\n\n\n}\n\n\n\n\n\n\n\nIf the context contains FHIR data, hook creators SHOULD include examples across multiple versions of FHIR if differences across FHIR versions are possible.", 
            "title": "Hooks"
        }, 
        {
            "location": "/hooks/#hooks", 
            "text": "", 
            "title": "Hooks"
        }, 
        {
            "location": "/hooks/#overview", 
            "text": "As a specification, CDS Hooks does not prescribe a default or required set of hooks for implementers. Rather, the set of hooks defined here are merely a set of common use cases that were used to aid in the creation of CDS Hooks. The set of hooks defined here are not a closed set; anyone is able to define new hooks to fit their use cases.  New hooks should be added to the CDS  proposed hooks Wiki page  according to the format described below.  Note that each hook (e.g.  medication-prescribe ) represents something the user is doing in the EHR and multiple CDS Services might respond to the same hook (e.g. a \"price check\" service and a \"prior authorization\" service might both respond to  medication-prescribe ).", 
            "title": "Overview"
        }, 
        {
            "location": "/hooks/#hook-context-and-prefetch", 
            "text": "", 
            "title": "Hook context and prefetch"
        }, 
        {
            "location": "/hooks/#whats-the-difference", 
            "text": "A discrete user workflow or action within the EHR often naturally includes a set of contextual data. This context can contain both required and optional data and is specific to a hook. Additionally, the context data is relevant to most CDS Services subscribing to the hook.  When the context data relates to a FHIR data type, it is important not to conflate context and prefetch. For instance, imagine a hook for opening a patient's chart. This hook should include the FHIR identifier of the patient whose chart is being opened, not the full patient FHIR resource. In this case, the FHIR identifier of the patient is appropriate as CDS Services may not be interested in details about the patient resource but instead other data related to this patient. Or, a CDS Service may only need the full patient resource in certain scenarios. Therefore, including the full patient resource in context would be unnecessary. For CDS Services that want the full patient resource, they can request it to be prefetched or fetch it as need from the FHIR server.  Consider another hook for when a new patient is being registered. In this case, it would likely be appropriate for the context to contain the full FHIR resource for the patient being registered as the patient may not be yet recorded in the EHR (and thus not available from the FHIR server) and CDS Services using this hook would predominately be interested in the details of the patient being registered.  Additionally, consider a PGX CDS Service and a Zika screening CDS Service, each of which is subscribed to the same hook. The context data specified by their shared hook should contain data relevant to both CDS Services; however, each service will have other specific data needs that will necessitate disparate prefetch requests. For instance, the PGX CDS Service likely is interested in genomics data whereas the Zika screening CDS Service will want Observations.  In summary, context is data specific to a hook and universally relevant to all CDS Services subscribed to said hook. Prefetch data is unique to individual CDS Services and supplements the data from context.", 
            "title": "What's the difference?"
        }, 
        {
            "location": "/hooks/#prefetch-tokens", 
            "text": "Often a prefetch template builds on the contextual data associated with the hook. For example, a particular CDS Service might recommend guidance based on a patient's conditions when the chart is opened. The FHIR query to retrieve these conditions might be  Condition?patient=123 . In order to express this as a prefetch template, the CDS Service must express the FHIR identifier of the patient as a token so that the EHR can replace the token with the appropriate value. When context fields are used as tokens, their token name MUST be  context.name-of-the-field . For example, given a context like:  1\n2\n3 context   :   { \n   patientId :   123  }    The token name would be  {{context.patientId}} . Again using our above conditions example, the complete prefetch template would be  Condition?patient={{context.patientId}} .  Only the first level fields in context may be considered for tokens. Hook creators MUST document which fields in the context are supported as tokens. If a context field can be tokenized, the value of the context field MUST be a data type that can placed into a FHIR query (eg, string, number, etc).  For example, given the following context that contains amongst other things, a Patient FHIR resource:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19 context   :   { \n   encounterId :   456 , \n   patient :   { \n     resourceType :   Patient , \n     id :   123 , \n     active :   true , \n     name :   [ \n       { \n         use :   official , \n         family :   Watts , \n         given :   [ \n           Wade \n         ] \n       } \n     ], \n     gender :   male , \n     birthDate :   2024-08-12 \n   }  }    Only the  encounterId  field in this example is eligible to be a prefetch token as it is a first level field and the datatype (string) can be placed into the FHIR query. The Patient.id value in the context is not eligible to be a prefetch token because it is not a first level field. If the hook creator intends for the Patient.id value to be available as a prefetch token, it must be made available as a first level field. Using the aforementioned example, we simply add a new  patientId  field:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19 context   :   { \n   patientId :   123 , \n   encounterId :   456 , \n   patient :   { \n     resourceType :   Patient , \n     id :   123 , \n     active :   true , \n     name :   [ \n       { \n         use :   official , \n         family :   Watts , \n         given :   [ \n           Wade \n         ] \n       } \n     ], \n     gender :   male , \n     birthDate :   2024-08-12 \n   }", 
            "title": "Prefetch tokens"
        }, 
        {
            "location": "/hooks/#hook-definition-format", 
            "text": "Hooks are defined in the following format:", 
            "title": "Hook Definition Format"
        }, 
        {
            "location": "/hooks/#hook-name-expressed-as-noun-verb", 
            "text": "The name of the hook SHOULD succinctly and clearly describes the activity or event. Hook names are unique so hook creators SHOULD take care to ensure newly proposed hooks do not conflict with an existing hook name. Hook creators MAY choose to name their hook with a URI (e.g.  https://example.org/hooks/patient-transmogrify ) if the hook is specific to an organization.  When naming hooks, the name should start with the subject (noun) of the hook and be followed by the activity (verb). For example,  patient-view  (not  view-patient ) or  medication-prescribe  (not  prescribe-medication ).", 
            "title": "hook-name-expressed-as-noun-verb"
        }, 
        {
            "location": "/hooks/#workflow", 
            "text": "Describe when this hook occurs in a workflow. Hook creators SHOULD include as much detail and clarity as possible to minimize any ambiguity or confusion amongst implementors.", 
            "title": "Workflow"
        }, 
        {
            "location": "/hooks/#context", 
            "text": "Describe the set of contextual data used by this hook. Only data logically and necessarily associated with the purpose of this hook should be represented in context.  All fields defined by the hook's context MUST be defined in a table where each field is described by three attributes:   Field: The name of the property in the context JSON object.  Priority: A fixed value of either  REQUIRED  or  OPTIONAL  Prefetch Token: A fixed value of either  Yes  or  No , indicating whether this field can be tokenized in a prefetch template.  Description: The value of the property in the context JSON object, expressed both as the JSON data type as well as a functional description of the value. If this value can change according to the FHIR version in use, the description SHOULD describe the value for each supported FHIR version.   While a context with FHIR data SHOULD document any differences in the data between FHIR versions, when a context object is valued, all FHIR resources in context MUST be based on the same FHIR version.     Field  Priority  Prefetch Token  Description      someProperty  REQUIRED  Yes  string  A clear description of the value of this field.    anotherProperty  OPTIONAL  No  number  A clear description of the value of this field.    someObject  REQUIRED  No  object  A clear description of the value of this field.    moreObjects  OPTIONAL  No  array  A clear description of the items in this array.", 
            "title": "Context"
        }, 
        {
            "location": "/hooks/#examples", 
            "text": "Hook creators SHOULD include examples of the context.  1\n2\n3\n4\n5\n6\n7\n8\n9 context : { \n   someProperty : foo , \n   anotherProperty : 123 , \n   someObject :   { \n     color :   red , \n     version :   1 \n   }, \n   moreObjects :[]  }    If the context contains FHIR data, hook creators SHOULD include examples across multiple versions of FHIR if differences across FHIR versions are possible.", 
            "title": "Examples"
        }, 
        {
            "location": "/hooks/patient-view/", 
            "text": "patient-view\n\n\nWorkflow description\n\n\nThe user has just opened a patient's record.\n\n\nContext\n\n\nThe patient whose record was opened, including their encounter, if applicable.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nPrefetch Token\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npatientId\n\n\nREQUIRED\n\n\nYes\n\n\nstring\n. The FHIR \nPatient.id\n of the current patient in context\n\n\n\n\n\n\nencounterId\n\n\nOPTIONAL\n\n\nYes\n\n\nstring\n. The FHIR \nEncounter.id\n of the current encounter in context\n\n\n\n\n\n\n\n\nExamples\n\n\n1\n2\n3\ncontext\n:\n{\n\n  \npatientId\n \n:\n \n1288992\n\n\n}\n\n\n\n\n\n\n\n1\n2\n3\n4\ncontext\n:\n{\n\n  \npatientId\n \n:\n \n1288992\n,\n\n  \nencounterId\n \n:\n \n456\n\n\n}", 
            "title": "patient-view"
        }, 
        {
            "location": "/hooks/patient-view/#patient-view", 
            "text": "", 
            "title": "patient-view"
        }, 
        {
            "location": "/hooks/patient-view/#workflow-description", 
            "text": "The user has just opened a patient's record.", 
            "title": "Workflow description"
        }, 
        {
            "location": "/hooks/patient-view/#context", 
            "text": "The patient whose record was opened, including their encounter, if applicable.     Field  Priority  Prefetch Token  Description      patientId  REQUIRED  Yes  string . The FHIR  Patient.id  of the current patient in context    encounterId  OPTIONAL  Yes  string . The FHIR  Encounter.id  of the current encounter in context", 
            "title": "Context"
        }, 
        {
            "location": "/hooks/patient-view/#examples", 
            "text": "1\n2\n3 context : { \n   patientId   :   1288992  }    1\n2\n3\n4 context : { \n   patientId   :   1288992 , \n   encounterId   :   456  }", 
            "title": "Examples"
        }, 
        {
            "location": "/hooks/medication-prescribe/", 
            "text": "medication-prescribe\n\n\nWorkflow\n\n\nThe user is in the process of prescribing one or more new medications.\n\n\nContext\n\n\nThe set of medications proposed or in progress of being prescribed. All FHIR resources in this context MUST be based on the same FHIR version.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nPrefetch Token\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npatientId\n\n\nREQUIRED\n\n\nYes\n\n\nstring\n.  The FHIR \nPatient.id\n of the current patient in context\n\n\n\n\n\n\nencounterId\n\n\nOPTIONAL\n\n\nYes\n\n\nstring\n.  The FHIR \nEncounter.id\n of the current encounter in context\n\n\n\n\n\n\nmedications\n\n\nREQUIRED\n\n\nNo\n\n\narray\n DSTU2 - An array of MedicationOrder resources \n \narray\n STU3 - An array of MedicationRequest resources\n\n\n\n\n\n\n\n\nExample (DSTU2)\n\n\n  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\ncontext\n:\n{\n\n  \npatientId\n \n:\n \n1288992\n,\n\n  \nencounterId\n \n:\n \n89284\n,\n\n  \nmedications\n:[\n  \n    \n{\n  \n      \nresourceType\n:\nMedicationOrder\n,\n\n      \nid\n:\nsmart-MedicationOrder-103\n,\n\n      \nstatus\n:\ndraft\n,\n\n      \npatient\n:{\n  \n        \nreference\n:\nPatient/smart-1081332\n\n      \n},\n\n      \nmedicationCodeableConcept\n:{\n  \n        \ncoding\n:[\n  \n          \n{\n  \n            \nsystem\n:\nhttp://www.nlm.nih.gov/research/umls/rxnorm\n,\n\n            \ncode\n:\n617993\n,\n\n            \ndisplay\n:\nAmoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension\n\n          \n}\n\n        \n],\n\n        \ntext\n:\nAmoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension\n\n      \n},\n\n      \ndosageInstruction\n:[\n  \n        \n{\n  \n          \ntext\n:\n5 mL bid x 10 days\n,\n\n          \ntiming\n:{\n  \n            \nrepeat\n:{\n  \n              \nboundsPeriod\n:{\n  \n                \nstart\n:\n2005-01-04\n\n              \n},\n\n              \nfrequency\n:\n2\n,\n\n              \nperiod\n:\n1\n,\n\n              \nperiodUnits\n:\nd\n\n            \n}\n\n          \n},\n\n          \ndoseQuantity\n:{\n  \n            \nvalue\n:\n5\n,\n\n            \nunit\n:\nmL\n,\n\n            \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n            \ncode\n:\nmL\n\n          \n}\n\n        \n}\n\n      \n],\n\n      \ndispenseRequest\n:{\n  \n        \nnumberOfRepeatsAllowed\n:\n1\n,\n\n        \nquantity\n:{\n  \n          \nvalue\n:\n1\n,\n\n          \nunit\n:\nmL\n,\n\n          \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n          \ncode\n:\nmL\n\n        \n},\n\n        \nexpectedSupplyDuration\n:{\n  \n          \nvalue\n:\n10\n,\n\n          \nunit\n:\ndays\n,\n\n          \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n          \ncode\n:\nd\n\n        \n}\n\n      \n}\n\n    \n},\n\n    \n{\n  \n      \nresourceType\n:\nMedicationOrder\n,\n\n      \nid\n:\nsmart-MedicationOrder-104\n,\n\n      \nstatus\n:\ndraft\n,\n\n      \npatient\n:{\n  \n        \nreference\n:\nPatient/smart-1081332\n\n      \n},\n\n      \nmedicationCodeableConcept\n:{\n  \n        \ncoding\n:[\n  \n          \n{\n  \n            \nsystem\n:\nhttp://www.nlm.nih.gov/research/umls/rxnorm\n,\n\n            \ncode\n:\n211307\n,\n\n            \ndisplay\n:\nAzithromycin 20 MG/ML Oral Suspension [Zithromax]\n\n          \n}\n\n        \n],\n\n        \ntext\n:\nAzithromycin 20 MG/ML Oral Suspension [Zithromax]\n\n      \n},\n\n      \ndosageInstruction\n:[\n  \n        \n{\n  \n          \ntext\n:\n15 mL daily x 3 days\n,\n\n          \ntiming\n:{\n  \n            \nrepeat\n:{\n  \n              \nboundsPeriod\n:{\n  \n                \nstart\n:\n2005-01-18\n\n              \n},\n\n              \nfrequency\n:\n1\n,\n\n              \nperiod\n:\n1\n,\n\n              \nperiodUnits\n:\nd\n\n            \n}\n\n          \n},\n\n          \ndoseQuantity\n:{\n  \n            \nvalue\n:\n15\n,\n\n            \nunit\n:\nmL\n,\n\n            \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n            \ncode\n:\nmL\n\n          \n}\n\n        \n}\n\n      \n],\n\n      \ndispenseRequest\n:{\n  \n        \nnumberOfRepeatsAllowed\n:\n1\n,\n\n        \nquantity\n:{\n  \n          \nvalue\n:\n1\n,\n\n          \nunit\n:\nmL\n,\n\n          \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n          \ncode\n:\nmL\n\n        \n},\n\n        \nexpectedSupplyDuration\n:{\n  \n          \nvalue\n:\n3\n,\n\n          \nunit\n:\ndays\n,\n\n          \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n          \ncode\n:\nd\n\n        \n}\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}", 
            "title": "medication-prescribe"
        }, 
        {
            "location": "/hooks/medication-prescribe/#medication-prescribe", 
            "text": "", 
            "title": "medication-prescribe"
        }, 
        {
            "location": "/hooks/medication-prescribe/#workflow", 
            "text": "The user is in the process of prescribing one or more new medications.", 
            "title": "Workflow"
        }, 
        {
            "location": "/hooks/medication-prescribe/#context", 
            "text": "The set of medications proposed or in progress of being prescribed. All FHIR resources in this context MUST be based on the same FHIR version.     Field  Priority  Prefetch Token  Description      patientId  REQUIRED  Yes  string .  The FHIR  Patient.id  of the current patient in context    encounterId  OPTIONAL  Yes  string .  The FHIR  Encounter.id  of the current encounter in context    medications  REQUIRED  No  array  DSTU2 - An array of MedicationOrder resources    array  STU3 - An array of MedicationRequest resources", 
            "title": "Context"
        }, 
        {
            "location": "/hooks/medication-prescribe/#example-dstu2", 
            "text": "1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114 context : { \n   patientId   :   1288992 , \n   encounterId   :   89284 , \n   medications :[   \n     {   \n       resourceType : MedicationOrder , \n       id : smart-MedicationOrder-103 , \n       status : draft , \n       patient :{   \n         reference : Patient/smart-1081332 \n       }, \n       medicationCodeableConcept :{   \n         coding :[   \n           {   \n             system : http://www.nlm.nih.gov/research/umls/rxnorm , \n             code : 617993 , \n             display : Amoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension \n           } \n         ], \n         text : Amoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension \n       }, \n       dosageInstruction :[   \n         {   \n           text : 5 mL bid x 10 days , \n           timing :{   \n             repeat :{   \n               boundsPeriod :{   \n                 start : 2005-01-04 \n               }, \n               frequency : 2 , \n               period : 1 , \n               periodUnits : d \n             } \n           }, \n           doseQuantity :{   \n             value : 5 , \n             unit : mL , \n             system : http://unitsofmeasure.org , \n             code : mL \n           } \n         } \n       ], \n       dispenseRequest :{   \n         numberOfRepeatsAllowed : 1 , \n         quantity :{   \n           value : 1 , \n           unit : mL , \n           system : http://unitsofmeasure.org , \n           code : mL \n         }, \n         expectedSupplyDuration :{   \n           value : 10 , \n           unit : days , \n           system : http://unitsofmeasure.org , \n           code : d \n         } \n       } \n     }, \n     {   \n       resourceType : MedicationOrder , \n       id : smart-MedicationOrder-104 , \n       status : draft , \n       patient :{   \n         reference : Patient/smart-1081332 \n       }, \n       medicationCodeableConcept :{   \n         coding :[   \n           {   \n             system : http://www.nlm.nih.gov/research/umls/rxnorm , \n             code : 211307 , \n             display : Azithromycin 20 MG/ML Oral Suspension [Zithromax] \n           } \n         ], \n         text : Azithromycin 20 MG/ML Oral Suspension [Zithromax] \n       }, \n       dosageInstruction :[   \n         {   \n           text : 15 mL daily x 3 days , \n           timing :{   \n             repeat :{   \n               boundsPeriod :{   \n                 start : 2005-01-18 \n               }, \n               frequency : 1 , \n               period : 1 , \n               periodUnits : d \n             } \n           }, \n           doseQuantity :{   \n             value : 15 , \n             unit : mL , \n             system : http://unitsofmeasure.org , \n             code : mL \n           } \n         } \n       ], \n       dispenseRequest :{   \n         numberOfRepeatsAllowed : 1 , \n         quantity :{   \n           value : 1 , \n           unit : mL , \n           system : http://unitsofmeasure.org , \n           code : mL \n         }, \n         expectedSupplyDuration :{   \n           value : 3 , \n           unit : days , \n           system : http://unitsofmeasure.org , \n           code : d \n         } \n       } \n     } \n   ]  }", 
            "title": "Example (DSTU2)"
        }, 
        {
            "location": "/hooks/order-review/", 
            "text": "order-review\n\n\nWorkflow description\n\n\nThe user is in the process of reviewing a set of orders to sign.\n\n\nContext\n\n\nThe set of orders being reviewed for signature on-screen. All FHIR resources in this context MUST be based on the same FHIR version.\n\n\n\n\n\n\n\n\nField\n\n\nPriority\n\n\nPrefetch Token\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npatientId\n\n\nREQUIRED\n\n\nYes\n\n\nstring\n.  The FHIR \nPatient.id\n of the current patient in context\n\n\n\n\n\n\nencounterId\n\n\nOPTIONAL\n\n\nYes\n\n\nstring\n.  The FHIR \nEncounter.id\n of the current encounter in context\n\n\n\n\n\n\norders\n\n\nREQUIRED\n\n\nNo\n\n\narray\n DSTU2 - Array of MedicationOrder, DiagnosticOrder, DeviceUseRequest, ReferralRequest, ProcedureRequest, NutritionOrder, VisionPrescription \n \narray\n STU3 - Array of MedicationRequest, ReferralRequest, ProcedureRequest, NutritionOrder, VisionPrescription\n\n\n\n\n\n\n\n\nExample (DSTU2)\n\n\n  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\ncontext\n:\n{\n\n  \npatientId\n \n:\n \n1288992\n,\n\n  \nencounterId\n \n:\n \n89284\n,\n\n  \norders\n:[\n  \n    \n{\n  \n      \nresourceType\n:\nNutritionOrder\n,\n\n      \nid\n:\nnest-patient-1-NUTR1\n,\n\n      \npatient\n:{\n  \n        \nreference\n:\nPatient/nest-patient-1\n,\n\n        \ndisplay\n:\nTomy Francis\n\n      \n},\n\n      \norderer\n:{\n  \n        \ndisplay\n:\nDr Adam Careful\n\n      \n},\n\n      \nidentifier\n:[\n  \n        \n{\n  \n          \nsystem\n:\nhttp://goodhealthhospital.org/nutrition-orders\n,\n\n          \nvalue\n:\n123\n\n        \n}\n\n      \n],\n\n      \ndateTime\n:\n2014-09-17\n,\n\n      \nstatus\n:\nproposed\n,\n\n      \noralDiet\n:{\n  \n        \ntype\n:[\n  \n          \n{\n  \n            \ncoding\n:[\n  \n              \n{\n  \n                \nsystem\n:\nhttp://snomed.info/sct\n,\n\n                \ncode\n:\n435801000124108\n,\n\n                \ndisplay\n:\nTexture modified diet\n\n              \n},\n\n              \n{\n  \n                \nsystem\n:\nhttp://goodhealthhospital.org/diet-type-codes\n,\n\n                \ncode\n:\n1010\n,\n\n                \ndisplay\n:\nTexture modified diet\n\n              \n}\n\n            \n],\n\n            \ntext\n:\nTexture modified diet\n\n          \n}\n\n        \n],\n\n        \nschedule\n:[\n  \n          \n{\n  \n            \nrepeat\n:{\n  \n              \nboundsPeriod\n:{\n  \n                \nstart\n:\n2015-02-10\n\n              \n},\n\n              \nfrequency\n:\n3\n,\n\n              \nperiod\n:\n1\n,\n\n              \nperiodUnits\n:\nd\n\n            \n}\n\n          \n}\n\n        \n],\n\n        \ntexture\n:[\n  \n          \n{\n  \n            \nmodifier\n:{\n  \n              \ncoding\n:[\n  \n                \n{\n  \n                  \nsystem\n:\nhttp://snomed.info/sct\n,\n\n                  \ncode\n:\n228049004\n,\n\n                  \ndisplay\n:\nChopped food\n\n                \n}\n\n              \n],\n\n              \ntext\n:\nRegular, Chopped Meat\n\n            \n},\n\n            \nfoodType\n:{\n  \n              \ncoding\n:[\n  \n                \n{\n  \n                  \nsystem\n:\nhttp://snomed.info/sct\n,\n\n                  \ncode\n:\n22836000\n,\n\n                  \ndisplay\n:\nVegetable\n\n                \n}\n\n              \n],\n\n              \ntext\n:\nRegular, Chopped Meat\n\n            \n}\n\n          \n}\n\n        \n]\n\n      \n}\n\n    \n},\n\n    \n{\n  \n      \nresourceType\n:\nMedicationOrder\n,\n\n      \nid\n:\nsmart-MedicationOrder-103\n,\n\n      \nstatus\n:\ndraft\n,\n\n      \npatient\n:{\n  \n        \nreference\n:\nPatient/nest-patient-1\n,\n\n        \ndisplay\n:\nTomy Francis\n\n      \n},\n\n      \nmedicationCodeableConcept\n:{\n  \n        \ncoding\n:[\n  \n          \n{\n  \n            \nsystem\n:\nhttp://www.nlm.nih.gov/research/umls/rxnorm\n,\n\n            \ncode\n:\n617993\n,\n\n            \ndisplay\n:\nAmoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension\n\n          \n}\n\n        \n],\n\n        \ntext\n:\nAmoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension\n\n      \n},\n\n      \ndosageInstruction\n:[\n  \n        \n{\n  \n          \ntext\n:\n5 mL bid x 10 days\n,\n\n          \ntiming\n:{\n  \n            \nrepeat\n:{\n  \n              \nboundsPeriod\n:{\n  \n                \nstart\n:\n2005-01-04\n\n              \n},\n\n              \nfrequency\n:\n2\n,\n\n              \nperiod\n:\n1\n,\n\n              \nperiodUnits\n:\nd\n\n            \n}\n\n          \n},\n\n          \ndoseQuantity\n:{\n  \n            \nvalue\n:\n5\n,\n\n            \nunit\n:\nmL\n,\n\n            \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n            \ncode\n:\nmL\n\n          \n}\n\n        \n}\n\n      \n],\n\n      \ndispenseRequest\n:{\n  \n        \nnumberOfRepeatsAllowed\n:\n1\n,\n\n        \nquantity\n:{\n  \n          \nvalue\n:\n1\n,\n\n          \nunit\n:\nmL\n,\n\n          \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n          \ncode\n:\nmL\n\n        \n},\n\n        \nexpectedSupplyDuration\n:{\n  \n          \nvalue\n:\n10\n,\n\n          \nunit\n:\ndays\n,\n\n          \nsystem\n:\nhttp://unitsofmeasure.org\n,\n\n          \ncode\n:\nd\n\n        \n}\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}", 
            "title": "order-review"
        }, 
        {
            "location": "/hooks/order-review/#order-review", 
            "text": "", 
            "title": "order-review"
        }, 
        {
            "location": "/hooks/order-review/#workflow-description", 
            "text": "The user is in the process of reviewing a set of orders to sign.", 
            "title": "Workflow description"
        }, 
        {
            "location": "/hooks/order-review/#context", 
            "text": "The set of orders being reviewed for signature on-screen. All FHIR resources in this context MUST be based on the same FHIR version.     Field  Priority  Prefetch Token  Description      patientId  REQUIRED  Yes  string .  The FHIR  Patient.id  of the current patient in context    encounterId  OPTIONAL  Yes  string .  The FHIR  Encounter.id  of the current encounter in context    orders  REQUIRED  No  array  DSTU2 - Array of MedicationOrder, DiagnosticOrder, DeviceUseRequest, ReferralRequest, ProcedureRequest, NutritionOrder, VisionPrescription    array  STU3 - Array of MedicationRequest, ReferralRequest, ProcedureRequest, NutritionOrder, VisionPrescription", 
            "title": "Context"
        }, 
        {
            "location": "/hooks/order-review/#example-dstu2", 
            "text": "1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135 context : { \n   patientId   :   1288992 , \n   encounterId   :   89284 , \n   orders :[   \n     {   \n       resourceType : NutritionOrder , \n       id : nest-patient-1-NUTR1 , \n       patient :{   \n         reference : Patient/nest-patient-1 , \n         display : Tomy Francis \n       }, \n       orderer :{   \n         display : Dr Adam Careful \n       }, \n       identifier :[   \n         {   \n           system : http://goodhealthhospital.org/nutrition-orders , \n           value : 123 \n         } \n       ], \n       dateTime : 2014-09-17 , \n       status : proposed , \n       oralDiet :{   \n         type :[   \n           {   \n             coding :[   \n               {   \n                 system : http://snomed.info/sct , \n                 code : 435801000124108 , \n                 display : Texture modified diet \n               }, \n               {   \n                 system : http://goodhealthhospital.org/diet-type-codes , \n                 code : 1010 , \n                 display : Texture modified diet \n               } \n             ], \n             text : Texture modified diet \n           } \n         ], \n         schedule :[   \n           {   \n             repeat :{   \n               boundsPeriod :{   \n                 start : 2015-02-10 \n               }, \n               frequency : 3 , \n               period : 1 , \n               periodUnits : d \n             } \n           } \n         ], \n         texture :[   \n           {   \n             modifier :{   \n               coding :[   \n                 {   \n                   system : http://snomed.info/sct , \n                   code : 228049004 , \n                   display : Chopped food \n                 } \n               ], \n               text : Regular, Chopped Meat \n             }, \n             foodType :{   \n               coding :[   \n                 {   \n                   system : http://snomed.info/sct , \n                   code : 22836000 , \n                   display : Vegetable \n                 } \n               ], \n               text : Regular, Chopped Meat \n             } \n           } \n         ] \n       } \n     }, \n     {   \n       resourceType : MedicationOrder , \n       id : smart-MedicationOrder-103 , \n       status : draft , \n       patient :{   \n         reference : Patient/nest-patient-1 , \n         display : Tomy Francis \n       }, \n       medicationCodeableConcept :{   \n         coding :[   \n           {   \n             system : http://www.nlm.nih.gov/research/umls/rxnorm , \n             code : 617993 , \n             display : Amoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension \n           } \n         ], \n         text : Amoxicillin 120 MG/ML / clavulanate potassium 8.58 MG/ML Oral Suspension \n       }, \n       dosageInstruction :[   \n         {   \n           text : 5 mL bid x 10 days , \n           timing :{   \n             repeat :{   \n               boundsPeriod :{   \n                 start : 2005-01-04 \n               }, \n               frequency : 2 , \n               period : 1 , \n               periodUnits : d \n             } \n           }, \n           doseQuantity :{   \n             value : 5 , \n             unit : mL , \n             system : http://unitsofmeasure.org , \n             code : mL \n           } \n         } \n       ], \n       dispenseRequest :{   \n         numberOfRepeatsAllowed : 1 , \n         quantity :{   \n           value : 1 , \n           unit : mL , \n           system : http://unitsofmeasure.org , \n           code : mL \n         }, \n         expectedSupplyDuration :{   \n           value : 10 , \n           unit : days , \n           system : http://unitsofmeasure.org , \n           code : d \n         } \n       } \n     } \n   ]  }", 
            "title": "Example (DSTU2)"
        }, 
        {
            "location": "/quickstart/", 
            "text": "Quick Start\n\n\nThis quick start tutorial defines each of the actors and provides details for implementing the \npatient-view\n hook. \n\n\nA CDS Hooks scenario typically includes two main actors: an EHR and a CDS Service. Below is an example interaction for the \npatient-view\n hook.\n\n\n\n\nBuilding a CDS Service\n\n\nA CDS Service is an external service that responds to EHR requests through cards. There are several steps to setting up a CDS Service: \n\n\n\n\nCreate an endpoint for discovery\n\n\nDevelop a service\n\n\nTest the service with the \nsandbox\n\n\nCreate a SMART app (or \nborrow one\n)\n\n\nTest the service and SMART app with an EHR\n\n\n\n\nThis tutorial recommends implementing the CDS Hooks \nsecurity model\n after successful open access testing.\n\n\nEndpoint for discovery\n\n\nThe CDS Service must provide a stable endpoint for the EHR to discover the available services. A system must expose their services at \n{baseUrl}/cds-services\n. A service endpoint that supports the \npatient-view\n hook may return:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n{\n\n  \nservices\n:\n \n[\n\n    \n{\n\n      \nhook\n:\n \npatient-view\n,\n\n      \nname\n:\n \nStatic CDS Service Example\n,\n\n      \ndescription\n:\n \nAn example of a CDS Service that returns a card with SMART app recommendations.\n,\n\n      \nid\n:\n \nstatic-patient-view\n,\n\n      \nprefetch\n:\n \n{\n\n        \npatientToGreet\n:\n \nPatient/{{Patient.id}}\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\nThe attributes available to describe a CDS Services is documented in the \nCDS Hooks specification\n.\n\n\nDevelop a service\n\n\nWith a stable open end point available it's time to complete development of a service. A CDS Service could provide \ninformation\n, a \nsuggestion\n, or a \nSMART app\n link. The focus of the Argonaut CDS Hooks effort is a \npatient-view\n hook launching a SMART app so this guide will focus on the SMART app link.\n\n\nA CDS \npatient-view\n hook could return the following card:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n{\n\n  \ncards\n:\n \n[\n\n    \n{\n\n      \nsummary\n:\n \nSMART App Success Card\n,\n\n      \nindicator\n:\n \nsuccess\n,\n\n      \ndetail\n:\n \nThis is an example SMART App success card.\n,\n\n      \nsource\n:\n \n{\n\n        \nlabel\n:\n \nStatic CDS Service Example\n,\n\n        \nurl\n:\n \nhttps://example.com\n\n      \n},\n\n      \nlinks\n:\n \n[\n\n        \n{\n\n          \nlabel\n:\n \nSMART Example App\n,\n\n          \nurl\n:\n \nhttps://smart.example.com/launch\n,\n\n          \ntype\n:\n \nsmart\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n]\n\n \n}\n\n\n\n\n\n\n\nCreate a SMART App\n\n\nYou may already have created a SMART app prior to this step, but just in case this is a reminder. The SMART app is launched from the link returned in your service. If you want to borrow a SMART app, check out the \napp gallery\n.\n\n\nTest service with a sandbox\n\n\nThe CDS Hooks community provides a publicly available \nsandbox\n to test your service. \n\n\nSelect the configure hooks:\n\n\n\n\nDelete the existing hooks, and then do a quick add with a reference to your CDS Service:\n\n\n\n\nAfter testing with the sandbox, you are ready to connect with an EHR service.\n\n\nBuilding an EHR Service\n\n\nBuild out following sections:\n\n\n\n\nCalls discovery endpoint \n\n\nInvoke service on patient-view \n\n\nSupport for FHIR resources on request (context or pre-fetch)\n\n\nExposed non-secured FHIR server\n\n\nRender card\n\n\nLaunch SMART app \n\n\nTested with external CDS Service\n\n\n\n\nThis tutorial recommends implementing the CDS Hooks \nsecurity model\n after successful open access testing.\n\n\nCalls discovery endpoint\n\n\nThe CDS discovery endpoint provides the list of services a CDS provider supports, and the hooks a service should be invoked on. An EHR may configure their system to support a set of hooks at a certain location in their users work flow, or build a dynamic capability to interact with a CDS Service provider within a work flow. For the best end-user experience, this guide recommends a business analyst configure which hooks an EHR will support. \n\n\nBelow is an example work flow where a business analyst accesses this list of available services by calling \n\n\nGET https://example.com/cds-services\n \n\n\nand then configures them in the system. \n\n\n\n\nThis image captures a business analyst reviewing services from one CDS provider. A business analyst may review services from multiple providers and configure appropriate services per user profiles.\n\n\nInvoke service on patient-view hook\n\n\nThe \npatient-view\n hook is invoked when a patient chart is opened. It's one of the most basic since the logic doesn't have any prior workflow dependencies. The service called on the \npatient-view\n hook could be dependent on patient characteristics, for example: sex, problems in problems list, active medications, etc. The current version of the CDS Hooks specification allows the EHR to decide which characteristics to consider. \n\n\nSupport for FHIR resources on request or prefetch\n\n\nOften a CDS Service will require additional information from the EHR to perform the decision support logic, or determine the appropriate SMART app to return. Prefetch provides the EHR the capability to pass a resource when invoking a service. For example, with a patient resource included a service could do a geography search for potential environmental risk factors. Below is an example request invoked on patient-view with a patient included: \n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n{\n\n   \nhookInstance\n \n:\n \n23f1a303-991f-4118-86c5-11d99a39222e\n,\n\n   \nfhirServer\n \n:\n \nhttps://fhir.example.org\n,\n\n   \nhook\n \n:\n \npatient-view\n,\n\n   \nuser\n \n:\n \nPractitioner/example\n,\n\n   \ncontext\n \n:\n \n{\n\n     \npatientId\n \n:\n \n1288992\n,\n\n    \n},\n\n   \nprefetch\n \n:\n \n{\n\n      \npatientToGreet\n \n:\n \n{\n\n        \nresourceType\n \n:\n \nPatient\n,\n\n        \ngender\n \n:\n \nmale\n,\n\n        \nbirthDate\n \n:\n \n1925-12-23\n,\n\n        \nid\n \n:\n \n1288992\n,\n\n        \nactive\n \n:\n \ntrue\n\n      \n}\n\n   \n}\n\n\n}\n\n\n\n\n\n\n\nIn some cases, additional information beyond what is included in the prefetch may be required. The CDS Service can request additional information using the FHIR REST APIs:\n\n\nGET [base]/AllergyIntolerance?patient=[id]\n\n\nIt is recommended FHIR servers implement, and CDS Services follow, locale specific implementation guides. In the US, the recommended implementation guides to follow are the \nArgonaut Data Query Guide (DSTU2)\n or \nHL7 US Core (STU3)\n. Each profile page within these implementation guides includes queries FHIR servers are required to support. \n\n\nExposed non-secured FHIR server\n\n\nA non secured FHIR server is important to support testing with a CDS Service. When the EHR moves a hook to production the system is expected to follow the guidelines in the \nsecurity\n requirements.\n\n\nRender card\n\n\nThe CDS Service will provide a response in the form a of a 'card'. Your EHR needs to be able to display the card.\n\n\nExample card JSON: \n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n{\n\n  \nsummary\n:\n \nBilirubin: Based on the age of this patient consider overlaying bilirubin [Mass/volume] results over a time-based risk chart\n,\n\n  \nindicator\n:\n \ninfo\n,\n\n  \ndetail\n:\n \nThe focus of this app is to reduce the incidence of severe hyperbilirubinemia and bilirubin encephalopathy while minimizing the risks of unintended harm such as maternal anxiety, decreased breastfeeding, and unnecessary costs or treatment.\n,\n\n  \nsource\n:\n \n{\n\n    \nname\n:\n \nIntermountain\n,\n\n    \nurl\n:\n \nnull\n\n  \n},\n\n  \nlinks\n:\n \n[\n\n    \n{\n\n      \nlabel\n:\n \nBilirubin SMART app\n,\n\n      \nurl\n:\n \nhttps://example.com/launch\n,\n\n      \ntype\n:\n \nsmart\n\n   \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\nExample card rendered: \n\n\nLaunch SMART app\n\n\nFor some CDS Services the end step will just display the card. For the patient-view hook discussed here, we are focused on launching a SMART app. The CDS Hooks guide places no additional constraints for launching a SMART app beyond those from \nSMART on FHIR\n. \n\n\nTest with an external CDS Service\n\n\nNo development is complete without testing with a CDS Service provider. Find a member in the \ncommunity\n and test away.", 
            "title": "Quick Start"
        }, 
        {
            "location": "/quickstart/#quick-start", 
            "text": "This quick start tutorial defines each of the actors and provides details for implementing the  patient-view  hook.   A CDS Hooks scenario typically includes two main actors: an EHR and a CDS Service. Below is an example interaction for the  patient-view  hook.", 
            "title": "Quick Start"
        }, 
        {
            "location": "/quickstart/#building-a-cds-service", 
            "text": "A CDS Service is an external service that responds to EHR requests through cards. There are several steps to setting up a CDS Service:    Create an endpoint for discovery  Develop a service  Test the service with the  sandbox  Create a SMART app (or  borrow one )  Test the service and SMART app with an EHR   This tutorial recommends implementing the CDS Hooks  security model  after successful open access testing.", 
            "title": "Building a CDS Service"
        }, 
        {
            "location": "/quickstart/#endpoint-for-discovery", 
            "text": "The CDS Service must provide a stable endpoint for the EHR to discover the available services. A system must expose their services at  {baseUrl}/cds-services . A service endpoint that supports the  patient-view  hook may return:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13 { \n   services :   [ \n     { \n       hook :   patient-view , \n       name :   Static CDS Service Example , \n       description :   An example of a CDS Service that returns a card with SMART app recommendations. , \n       id :   static-patient-view , \n       prefetch :   { \n         patientToGreet :   Patient/{{Patient.id}} \n       } \n     } \n   ]  }    The attributes available to describe a CDS Services is documented in the  CDS Hooks specification .", 
            "title": "Endpoint for discovery"
        }, 
        {
            "location": "/quickstart/#develop-a-service", 
            "text": "With a stable open end point available it's time to complete development of a service. A CDS Service could provide  information , a  suggestion , or a  SMART app  link. The focus of the Argonaut CDS Hooks effort is a  patient-view  hook launching a SMART app so this guide will focus on the SMART app link.  A CDS  patient-view  hook could return the following card:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20 { \n   cards :   [ \n     { \n       summary :   SMART App Success Card , \n       indicator :   success , \n       detail :   This is an example SMART App success card. , \n       source :   { \n         label :   Static CDS Service Example , \n         url :   https://example.com \n       }, \n       links :   [ \n         { \n           label :   SMART Example App , \n           url :   https://smart.example.com/launch , \n           type :   smart \n         } \n       ] \n     } \n   ] \n  }", 
            "title": "Develop a service"
        }, 
        {
            "location": "/quickstart/#create-a-smart-app", 
            "text": "You may already have created a SMART app prior to this step, but just in case this is a reminder. The SMART app is launched from the link returned in your service. If you want to borrow a SMART app, check out the  app gallery .", 
            "title": "Create a SMART App"
        }, 
        {
            "location": "/quickstart/#test-service-with-a-sandbox", 
            "text": "The CDS Hooks community provides a publicly available  sandbox  to test your service.   Select the configure hooks:   Delete the existing hooks, and then do a quick add with a reference to your CDS Service:   After testing with the sandbox, you are ready to connect with an EHR service.", 
            "title": "Test service with a sandbox"
        }, 
        {
            "location": "/quickstart/#building-an-ehr-service", 
            "text": "Build out following sections:   Calls discovery endpoint   Invoke service on patient-view   Support for FHIR resources on request (context or pre-fetch)  Exposed non-secured FHIR server  Render card  Launch SMART app   Tested with external CDS Service   This tutorial recommends implementing the CDS Hooks  security model  after successful open access testing.", 
            "title": "Building an EHR Service"
        }, 
        {
            "location": "/quickstart/#calls-discovery-endpoint", 
            "text": "The CDS discovery endpoint provides the list of services a CDS provider supports, and the hooks a service should be invoked on. An EHR may configure their system to support a set of hooks at a certain location in their users work flow, or build a dynamic capability to interact with a CDS Service provider within a work flow. For the best end-user experience, this guide recommends a business analyst configure which hooks an EHR will support.   Below is an example work flow where a business analyst accesses this list of available services by calling   GET https://example.com/cds-services    and then configures them in the system.    This image captures a business analyst reviewing services from one CDS provider. A business analyst may review services from multiple providers and configure appropriate services per user profiles.", 
            "title": "Calls discovery endpoint"
        }, 
        {
            "location": "/quickstart/#invoke-service-on-patient-view-hook", 
            "text": "The  patient-view  hook is invoked when a patient chart is opened. It's one of the most basic since the logic doesn't have any prior workflow dependencies. The service called on the  patient-view  hook could be dependent on patient characteristics, for example: sex, problems in problems list, active medications, etc. The current version of the CDS Hooks specification allows the EHR to decide which characteristics to consider.", 
            "title": "Invoke service on patient-view hook"
        }, 
        {
            "location": "/quickstart/#support-for-fhir-resources-on-request-or-prefetch", 
            "text": "Often a CDS Service will require additional information from the EHR to perform the decision support logic, or determine the appropriate SMART app to return. Prefetch provides the EHR the capability to pass a resource when invoking a service. For example, with a patient resource included a service could do a geography search for potential environmental risk factors. Below is an example request invoked on patient-view with a patient included:    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 { \n    hookInstance   :   23f1a303-991f-4118-86c5-11d99a39222e , \n    fhirServer   :   https://fhir.example.org , \n    hook   :   patient-view , \n    user   :   Practitioner/example , \n    context   :   { \n      patientId   :   1288992 , \n     }, \n    prefetch   :   { \n       patientToGreet   :   { \n         resourceType   :   Patient , \n         gender   :   male , \n         birthDate   :   1925-12-23 , \n         id   :   1288992 , \n         active   :   true \n       } \n    }  }    In some cases, additional information beyond what is included in the prefetch may be required. The CDS Service can request additional information using the FHIR REST APIs:  GET [base]/AllergyIntolerance?patient=[id]  It is recommended FHIR servers implement, and CDS Services follow, locale specific implementation guides. In the US, the recommended implementation guides to follow are the  Argonaut Data Query Guide (DSTU2)  or  HL7 US Core (STU3) . Each profile page within these implementation guides includes queries FHIR servers are required to support.", 
            "title": "Support for FHIR resources on request or prefetch"
        }, 
        {
            "location": "/quickstart/#exposed-non-secured-fhir-server", 
            "text": "A non secured FHIR server is important to support testing with a CDS Service. When the EHR moves a hook to production the system is expected to follow the guidelines in the  security  requirements.", 
            "title": "Exposed non-secured FHIR server"
        }, 
        {
            "location": "/quickstart/#render-card", 
            "text": "The CDS Service will provide a response in the form a of a 'card'. Your EHR needs to be able to display the card.  Example card JSON:    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 { \n   summary :   Bilirubin: Based on the age of this patient consider overlaying bilirubin [Mass/volume] results over a time-based risk chart , \n   indicator :   info , \n   detail :   The focus of this app is to reduce the incidence of severe hyperbilirubinemia and bilirubin encephalopathy while minimizing the risks of unintended harm such as maternal anxiety, decreased breastfeeding, and unnecessary costs or treatment. , \n   source :   { \n     name :   Intermountain , \n     url :   null \n   }, \n   links :   [ \n     { \n       label :   Bilirubin SMART app , \n       url :   https://example.com/launch , \n       type :   smart \n    } \n   ]  }    Example card rendered:", 
            "title": "Render card"
        }, 
        {
            "location": "/quickstart/#launch-smart-app", 
            "text": "For some CDS Services the end step will just display the card. For the patient-view hook discussed here, we are focused on launching a SMART app. The CDS Hooks guide places no additional constraints for launching a SMART app beyond those from  SMART on FHIR .", 
            "title": "Launch SMART app"
        }, 
        {
            "location": "/quickstart/#test-with-an-external-cds-service", 
            "text": "No development is complete without testing with a CDS Service provider. Find a member in the  community  and test away.", 
            "title": "Test with an external CDS Service"
        }, 
        {
            "location": "/examples/", 
            "text": "Examples\n\n\nCDC Guideline for Prescribing Opioids for Chronic Pain\n\n\n\n\nCDS Service Request\n\n\nThe example illustrates a prescription for Acetaminophen/Hydrocodone Bitartrate for a patient that already has a prescription for Oxycodone Hydrochloride:\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n{\n\n  \nhookInstance\n:\n \nd1577c69-dfbe-44ad-ba6d-3e05e953b2ea\n,\n\n  \nfhirServer\n:\n \nhttp://fhir.example.com\n,\n\n  \nhook\n:\n \nmedication-prescribe\n,\n\n  \nuser\n:\n \nPractitioner/example\n,\n\n  \ncontext\n:\n \n{\n\n    \nmedications\n:\n \n[\n\n      \n{\n\n        \nresourceType\n:\n \nMedicationOrder\n,\n\n        \nid\n:\n \nmedrx001\n,\n\n        \ndateWritten\n:\n \n2017-05-05\n,\n\n        \nstatus\n:\n \ndraft\n,\n\n        \npatient\n:\n \n{\n\n          \nreference\n:\n \nPatient/example\n\n        \n},\n\n        \nmedicationCodeableConcept\n:\n \n{\n\n          \ncoding\n:\n \n[\n\n            \n{\n\n              \nsystem\n:\n \nhttp://www.nlm.nih.gov/research/umls/rxnorm\n,\n\n              \ncode\n:\n \n857001\n,\n\n              \ndisplay\n:\n \nAcetaminophen 325 MG / Hydrocodone Bitartrate 10 MG Oral Tablet\n\n            \n}\n\n          \n]\n\n        \n},\n\n        \ndosageInstruction\n:\n \n[\n\n          \n{\n\n            \ntext\n:\n \nTake 1 tablet Oral every 4 hours as needed\n,\n\n            \ntiming\n:\n \n{\n\n              \nrepeat\n:\n \n{\n\n                \nfrequency\n:\n \n6\n,\n\n                \nfrequencyMax\n:\n \n6\n,\n\n                \nperiod\n:\n \n1\n,\n\n                \nunit\n:\n \nd\n\n              \n}\n\n            \n},\n\n            \nasNeededBoolean\n:\n \ntrue\n,\n\n            \ndoseQuantity\n:\n \n{\n\n              \nvalue\n:\n \n10\n,\n\n              \nunit\n:\n \nmg\n,\n\n              \nsystem\n:\n \nhttp://unitsofmeasure.org\n,\n\n              \ncode\n:\n \nmg\n\n            \n}\n\n          \n}\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \npatientId\n:\n \n1288992\n\n  \n},\n\n  \nprefetch\n:\n \n{\n\n    \nmedication\n:\n \n{\n\n      \nresponse\n:\n \n{\n\n        \nstatus\n:\n \n200 OK\n\n      \n},\n\n      \nresource\n:\n \n{\n\n        \nresourceType\n:\n \nMedicationOrder\n,\n\n        \nid\n:\n \nmedrx002\n,\n\n        \ndateWritten\n:\n \n2017-04-25\n,\n\n        \nstatus\n:\n \nactive\n,\n\n        \npatient\n:\n \n{\n\n          \nreference\n:\n \nPatient/example\n\n        \n},\n\n        \nmedicationCodeableConcept\n:\n \n{\n\n          \ncoding\n:\n \n[\n\n            \n{\n\n              \nsystem\n:\n \nhttp://www.nlm.nih.gov/research/umls/rxnorm\n,\n\n              \ncode\n:\n \n1049621\n,\n\n              \ndisplay\n:\n \nOxycodone Hydrochloride 5 MG Oral Tablet\n\n            \n}\n\n          \n]\n\n        \n},\n\n        \ndosageInstruction\n:\n \n[\n\n          \n{\n\n            \ntext\n:\n \nTake 1 tablet by mouth every 4 hours as needed for pain.\n,\n\n            \ntiming\n:\n \n{\n\n              \nrepeat\n:\n \n{\n\n                \nfrequency\n:\n \n6\n,\n\n                \nperiod\n:\n \n1\n,\n\n                \nperiodUnits\n:\n \nd\n\n              \n}\n\n            \n},\n\n            \nasNeededBoolean\n:\n \ntrue\n,\n\n            \ndoseQuantity\n:\n \n{\n\n              \nvalue\n:\n \n5\n,\n\n              \nunit\n:\n \nmg\n,\n\n              \nsystem\n:\n \nhttp://unitsofmeasure.org\n,\n\n              \ncode\n:\n \nmg\n\n            \n}\n\n          \n}\n\n        \n]\n\n      \n}\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nThis example illustrates the use of the CDS Hooks \nmedication-prescribe\n hook to implement Recommendation #5 from the \nCDC guideline for prescribing opioids for chronic pain\n.\n\n\nThis example is taken from the \nOpioid Prescribing Support Implementation Guide\n, developed in partnership with the Centers for Disease Control and Prevention \n(CDC)\n.\n\n\n\n\nCDS Service Response\n\n\nThe opioid guideline request results in the following response that indicates the patient is at high risk for opioid overdose according to the CDC guidelines, and the dosage should be tapered to less than 50 MME. Links are provided to the guideline, as well as to the MME conversion tables provided by CDC.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n{\n\n  \nsummary\n:\n \nHigh risk for opioid overdose - taper now\n,\n\n  \nindicator\n:\n \nwarning\n,\n\n  \nlinks\n:\n \n[\n\n    \n{\n\n      \nlabel\n:\n \nCDC guideline for prescribing opioids for chronic pain\n,\n\n      \ntype\n:\n \nabsolute\n,\n\n      \nurl\n:\n \nhttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\n\n    \n},\n\n    \n{\n\n      \nlabel\n:\n \nMME Conversion Tables\n,\n\n      \ntype\n:\n \nabsolute\n,\n\n      \nurl\n:\n \nhttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\n\n    \n}\n\n  \n],\n\n  \ndetail\n:\n \nTotal morphine milligram equivalent (MME) is 125mg. Taper to less than 50.\n\n\n}\n\n\n\n\n\n\n\nRadiology Appropriateness\n\n\n\n\nCDS Service Request\n\n\nThis example illustrates the use of the CDS Hooks \norder-review\n hook to implement Radiology Appropriateness scoring.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n{\n\n  \nhookInstance\n:\n \nd1577c69-dfbe-44ad-ba6d-3e05e953b2ea\n,\n\n  \nfhirServer\n:\n \nhttp://fhir.example.com\n,\n\n  \nhook\n:\n \norder-review\n,\n\n  \nuser\n:\n \nPractitioner/example\n,\n\n  \ncontext\n:\n \n{\n\n    \norders\n:\n \n[\n\n      \n{\n\n        \nresourceType\n:\n \nProcedureRequest\n,\n\n        \nid\n:\n \nprocedure-request-1\n,\n\n        \nstatus\n:\n \ndraft\n,\n\n        \nintent\n:\n \nproposal\n,\n\n        \npriority\n:\n \nroutine\n,\n\n        \ncode\n:\n \n{\n\n          \ncoding\n:\n \n[{\n\n            \nsystem\n:\n \nhttp://www.ama-assn.org/go/cpt\n,\n\n            \ncode\n:\n \n70450\n,\n\n            \ndisplay\n:\n \nCT, head, wo iv contrast\n\n          \n}]\n\n        \n},\n\n        \nsubject\n:\n \n{\n\n          \nreference\n:\n \nPatient/example\n\n        \n},\n\n        \nrequester\n:\n \n{\n\n          \nagent\n:\n \n{\n\n            \nreference\n:\n \nPractitioner/exampmle\n\n          \n}\n\n        \n}\n\n      \n}\n\n    \n],\n\n    \npatientId\n:\n \n1288992\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\n\n\nCDS Service Response\n\n\nThe appropriateness score is communicated via an update of the procedure request that adds an extension element to indicate the appropriateness rating.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n{\n\n  \ncards\n:\n \n[\n\n    \n{\n\n      \nsummary\n:\n \nUsually appropriate\n,\n\n      \nindicator\n:\n \ninfo\n,\n\n      \ndetail\n:\n \nThe requested procedure is usually appropriate for the given indications.\n,\n\n      \nsuggestions\n:\n \n[\n\n        \n{\n\n          \nlabel\n:\n \nThe appropriateness score for this procedure given these indications is 9, usually appropriate.\n,\n\n          \nactions\n:\n \n[{\n\n            \ntype\n:\n \nupdate\n,\n\n            \ndescription\n:\n \nUpdate the order to record the appropriateness score.\n,\n\n            \nresource\n:\n \n{\n\n              \nresourceType\n:\n \nProcedureRequest\n,\n\n              \nid\n:\n \nprocedure-request-1\n,\n\n              \nextension\n:\n \n[\n\n                \n{\n\n                  \nurl\n:\n \nhttp://hl7.org/fhir/us/qicore/StructureDefinition/procedurerequest-appropriatenessScore\n,\n\n                  \nvalueDecimal\n:\n \n9\n\n                \n}\n\n              \n],\n\n              \nstatus\n:\n \ndraft\n,\n\n              \nintent\n:\n \nproposal\n,\n\n              \npriority\n:\n \nroutine\n,\n\n              \ncode\n:\n \n{\n\n                \ncoding\n:\n \n[{\n\n                  \nsystem\n:\n \nhttp://www.ama-assn.org/go/cpt\n,\n\n                  \ncode\n:\n \n70450\n,\n\n                  \ndisplay\n:\n \nCT, head, wo iv contrast\n\n                \n}]\n\n              \n},\n\n              \nsubject\n:\n \n{\n\n                \nreference\n:\n \nPatient/example\n\n              \n},\n\n              \nrequester\n:\n \n{\n\n                \nagent\n:\n \n{\n\n                  \nreference\n:\n \nPractitioner/exampmle\n\n                \n}\n\n              \n}\n\n            \n}\n\n          \n}]\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}", 
            "title": "Examples"
        }, 
        {
            "location": "/examples/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/examples/#cdc-guideline-for-prescribing-opioids-for-chronic-pain", 
            "text": "CDS Service Request  The example illustrates a prescription for Acetaminophen/Hydrocodone Bitartrate for a patient that already has a prescription for Oxycodone Hydrochloride:    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93 { \n   hookInstance :   d1577c69-dfbe-44ad-ba6d-3e05e953b2ea , \n   fhirServer :   http://fhir.example.com , \n   hook :   medication-prescribe , \n   user :   Practitioner/example , \n   context :   { \n     medications :   [ \n       { \n         resourceType :   MedicationOrder , \n         id :   medrx001 , \n         dateWritten :   2017-05-05 , \n         status :   draft , \n         patient :   { \n           reference :   Patient/example \n         }, \n         medicationCodeableConcept :   { \n           coding :   [ \n             { \n               system :   http://www.nlm.nih.gov/research/umls/rxnorm , \n               code :   857001 , \n               display :   Acetaminophen 325 MG / Hydrocodone Bitartrate 10 MG Oral Tablet \n             } \n           ] \n         }, \n         dosageInstruction :   [ \n           { \n             text :   Take 1 tablet Oral every 4 hours as needed , \n             timing :   { \n               repeat :   { \n                 frequency :   6 , \n                 frequencyMax :   6 , \n                 period :   1 , \n                 unit :   d \n               } \n             }, \n             asNeededBoolean :   true , \n             doseQuantity :   { \n               value :   10 , \n               unit :   mg , \n               system :   http://unitsofmeasure.org , \n               code :   mg \n             } \n           } \n         ] \n       } \n     ], \n     patientId :   1288992 \n   }, \n   prefetch :   { \n     medication :   { \n       response :   { \n         status :   200 OK \n       }, \n       resource :   { \n         resourceType :   MedicationOrder , \n         id :   medrx002 , \n         dateWritten :   2017-04-25 , \n         status :   active , \n         patient :   { \n           reference :   Patient/example \n         }, \n         medicationCodeableConcept :   { \n           coding :   [ \n             { \n               system :   http://www.nlm.nih.gov/research/umls/rxnorm , \n               code :   1049621 , \n               display :   Oxycodone Hydrochloride 5 MG Oral Tablet \n             } \n           ] \n         }, \n         dosageInstruction :   [ \n           { \n             text :   Take 1 tablet by mouth every 4 hours as needed for pain. , \n             timing :   { \n               repeat :   { \n                 frequency :   6 , \n                 period :   1 , \n                 periodUnits :   d \n               } \n             }, \n             asNeededBoolean :   true , \n             doseQuantity :   { \n               value :   5 , \n               unit :   mg , \n               system :   http://unitsofmeasure.org , \n               code :   mg \n             } \n           } \n         ] \n       } \n     } \n   }  }    This example illustrates the use of the CDS Hooks  medication-prescribe  hook to implement Recommendation #5 from the  CDC guideline for prescribing opioids for chronic pain .  This example is taken from the  Opioid Prescribing Support Implementation Guide , developed in partnership with the Centers for Disease Control and Prevention  (CDC) .   CDS Service Response  The opioid guideline request results in the following response that indicates the patient is at high risk for opioid overdose according to the CDC guidelines, and the dosage should be tapered to less than 50 MME. Links are provided to the guideline, as well as to the MME conversion tables provided by CDC.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17 { \n   summary :   High risk for opioid overdose - taper now , \n   indicator :   warning , \n   links :   [ \n     { \n       label :   CDC guideline for prescribing opioids for chronic pain , \n       type :   absolute , \n       url :   https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420 \n     }, \n     { \n       label :   MME Conversion Tables , \n       type :   absolute , \n       url :   https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf \n     } \n   ], \n   detail :   Total morphine milligram equivalent (MME) is 125mg. Taper to less than 50.  }", 
            "title": "CDC Guideline for Prescribing Opioids for Chronic Pain"
        }, 
        {
            "location": "/examples/#radiology-appropriateness", 
            "text": "CDS Service Request  This example illustrates the use of the CDS Hooks  order-review  hook to implement Radiology Appropriateness scoring.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33 { \n   hookInstance :   d1577c69-dfbe-44ad-ba6d-3e05e953b2ea , \n   fhirServer :   http://fhir.example.com , \n   hook :   order-review , \n   user :   Practitioner/example , \n   context :   { \n     orders :   [ \n       { \n         resourceType :   ProcedureRequest , \n         id :   procedure-request-1 , \n         status :   draft , \n         intent :   proposal , \n         priority :   routine , \n         code :   { \n           coding :   [{ \n             system :   http://www.ama-assn.org/go/cpt , \n             code :   70450 , \n             display :   CT, head, wo iv contrast \n           }] \n         }, \n         subject :   { \n           reference :   Patient/example \n         }, \n         requester :   { \n           agent :   { \n             reference :   Practitioner/exampmle \n           } \n         } \n       } \n     ], \n     patientId :   1288992 \n   }  }     CDS Service Response  The appropriateness score is communicated via an update of the procedure request that adds an extension element to indicate the appropriateness rating.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46 { \n   cards :   [ \n     { \n       summary :   Usually appropriate , \n       indicator :   info , \n       detail :   The requested procedure is usually appropriate for the given indications. , \n       suggestions :   [ \n         { \n           label :   The appropriateness score for this procedure given these indications is 9, usually appropriate. , \n           actions :   [{ \n             type :   update , \n             description :   Update the order to record the appropriateness score. , \n             resource :   { \n               resourceType :   ProcedureRequest , \n               id :   procedure-request-1 , \n               extension :   [ \n                 { \n                   url :   http://hl7.org/fhir/us/qicore/StructureDefinition/procedurerequest-appropriatenessScore , \n                   valueDecimal :   9 \n                 } \n               ], \n               status :   draft , \n               intent :   proposal , \n               priority :   routine , \n               code :   { \n                 coding :   [{ \n                   system :   http://www.ama-assn.org/go/cpt , \n                   code :   70450 , \n                   display :   CT, head, wo iv contrast \n                 }] \n               }, \n               subject :   { \n                 reference :   Patient/example \n               }, \n               requester :   { \n                 agent :   { \n                   reference :   Practitioner/exampmle \n                 } \n               } \n             } \n           }] \n         } \n       ] \n     } \n   ]  }", 
            "title": "Radiology Appropriateness"
        }, 
        {
            "location": "/community/", 
            "text": "Community\n\n\nGet Involved\n\n\nThere are several ways in which you can get involved with the CDS Hooks community.\n\n\n\n\nAsk a question and participate in discussions via the \nCDS Hooks Google Group\n\n\nChat via \nZulip\n at \nhttps://chat.fhir.org\n in the \ncds-hooks\n stream\n\n\nContribute to the \ncode and documentation on Github\n\n\nCheck out the \nCDS services available for testing\n and contribute your own.\n\n\n\n\nCDS Hooks Sprint Program\n\n\nObjectives\n\n\n\n\nPromote creation of clinical-grade service integrations (EHRs + CDS Services)\n\n\nGain implementation experience with real-world systems\n\n\nRefine the spec, balancing ease of use, flexibility, and stability\n\n\nDrive toward pilot deployments with the ability to measure results\n\n\n\n\nWant to help build our test infrastructure?\n\n\n\n\nhelp-wanted issues\n\n\nProposed Milestones", 
            "title": "Community"
        }, 
        {
            "location": "/community/#community", 
            "text": "", 
            "title": "Community"
        }, 
        {
            "location": "/community/#get-involved", 
            "text": "There are several ways in which you can get involved with the CDS Hooks community.   Ask a question and participate in discussions via the  CDS Hooks Google Group  Chat via  Zulip  at  https://chat.fhir.org  in the  cds-hooks  stream  Contribute to the  code and documentation on Github  Check out the  CDS services available for testing  and contribute your own.", 
            "title": "Get Involved"
        }, 
        {
            "location": "/community/#cds-hooks-sprint-program", 
            "text": "", 
            "title": "CDS Hooks Sprint Program"
        }, 
        {
            "location": "/community/#objectives", 
            "text": "Promote creation of clinical-grade service integrations (EHRs + CDS Services)  Gain implementation experience with real-world systems  Refine the spec, balancing ease of use, flexibility, and stability  Drive toward pilot deployments with the ability to measure results", 
            "title": "Objectives"
        }, 
        {
            "location": "/community/#want-to-help-build-our-test-infrastructure", 
            "text": "help-wanted issues  Proposed Milestones", 
            "title": "Want to help build our test infrastructure?"
        }
    ]
}