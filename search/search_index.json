{
    "docs": [
        {
            "location": "/", 
            "text": "Overview\n\n\nThis specification describes a\n\n\"hook\"\n-based pattern for invoking\ndecision support from within a clinician's EHR workflow. The API supports:\n\n\n\n\nSynchronous, workflow-triggered CDS calls returning information and suggestions\n\n\nLaunching a user-facing SMART app when CDS requires additional interaction\n\n\n\n\nThe CDS Hooks API is still in active development and thus subject to change. We're currently working towards a 1.0 release and would love your feedback and proposed changes. Look at our \ncurrent issue list\n and get involved!\n\n\nHow it works\n\n\nUser activity inside the EHR triggers \nCDS hooks\n in real-time.  For example:\n\n\n\n\npatient-view\n when opening a new patient record\n\n\nmedication-prescribe\n on authoring a new prescription\n\n\norder-review\n on viewing pending orders for approval\n\n\n\n\nWhen a triggering activity occurs, the EHR notifies each CDS service registered for the activity. These services must then provide near-real-time feedback about the triggering event. Each service gets basic details about the EHR\ncontext (via the \ncontext\n parameter of the hook) plus whatever\nservice-specific data are required (via the \npre-fetch-template\n parameter).\n\n\n\n\nCDS Cards\n\n\nEach CDS service can return any number of \ncards\n in response to the hook.\nCards convey some combination of text (\ninformation card\n), alternative\nsuggestions (\nsuggestion card\n), and links to apps or reference\nmaterials (\napp link card\n). A user sees these cards \u2014 one or more of each type\n\u2014 embedded in the EHR, and can interact with them as follows:\n\n\n\n\n\n\ninformation card\n: provides text for the user to read.\n\n\n\n\n\n\nsuggestion card\n: provides a specific suggestion for which the EHR renders a button that the user can click to accept. Clicking automatically populates the suggested change into the EHR's UI.\n\n\n\n\n\n\napp link card\n: provides a link to an app (often a SMART app) where the user can supply details, step through a flowchart, or do anything else required to help reach an informed decision. When the user has finished, flow returns to the EHR. At that point, the \nEHR re-triggers the initial CDS hook\n. The re-triggering may result in different cards, and may also include \ndecisions\n (see below).\n\n\n\n\n\n\nCDS Decisions\n\n\nIn addition to cards, a CDS service may also return \ndecisions\n \u2014 but only\nafter a user has interacted with the service via an \napp link card\n.\nReturning a decision allows the the CDS service to communicate the user's choices  to the EHR without displaying an additional card.  For\nexample, a user might launch a hypertension management app, and upon\nreturning to the EHR's prescription page she expects her new blood pressure\nprescription to \"just be there\". By returning a decision \ninstead of a card\n,\nthe CDS service achieves this expected behavior. (\nNote:\n To return a\ndecision after a user interaction, the CDS service must maintain state\nassociated with the request's \nhookInstance\n;\nwhen the EHR invokes the hook for a second time with the same\n\nhookInstance\n, the service can respond with decisions on as well as cards.)\n\n\nTry it!\n\n\nYou can try CDS Hooks in our test harness at \nhttp://sandbox.cds-hooks.org", 
            "title": "Overview"
        }, 
        {
            "location": "/#overview", 
            "text": "This specification describes a \"hook\" -based pattern for invoking\ndecision support from within a clinician's EHR workflow. The API supports:   Synchronous, workflow-triggered CDS calls returning information and suggestions  Launching a user-facing SMART app when CDS requires additional interaction   The CDS Hooks API is still in active development and thus subject to change. We're currently working towards a 1.0 release and would love your feedback and proposed changes. Look at our  current issue list  and get involved!", 
            "title": "Overview"
        }, 
        {
            "location": "/#how-it-works", 
            "text": "User activity inside the EHR triggers  CDS hooks  in real-time.  For example:   patient-view  when opening a new patient record  medication-prescribe  on authoring a new prescription  order-review  on viewing pending orders for approval   When a triggering activity occurs, the EHR notifies each CDS service registered for the activity. These services must then provide near-real-time feedback about the triggering event. Each service gets basic details about the EHR\ncontext (via the  context  parameter of the hook) plus whatever\nservice-specific data are required (via the  pre-fetch-template  parameter).", 
            "title": "How it works"
        }, 
        {
            "location": "/#cds-cards", 
            "text": "Each CDS service can return any number of  cards  in response to the hook.\nCards convey some combination of text ( information card ), alternative\nsuggestions ( suggestion card ), and links to apps or reference\nmaterials ( app link card ). A user sees these cards \u2014 one or more of each type\n\u2014 embedded in the EHR, and can interact with them as follows:    information card : provides text for the user to read.    suggestion card : provides a specific suggestion for which the EHR renders a button that the user can click to accept. Clicking automatically populates the suggested change into the EHR's UI.    app link card : provides a link to an app (often a SMART app) where the user can supply details, step through a flowchart, or do anything else required to help reach an informed decision. When the user has finished, flow returns to the EHR. At that point, the  EHR re-triggers the initial CDS hook . The re-triggering may result in different cards, and may also include  decisions  (see below).", 
            "title": "CDS Cards"
        }, 
        {
            "location": "/#cds-decisions", 
            "text": "In addition to cards, a CDS service may also return  decisions  \u2014 but only\nafter a user has interacted with the service via an  app link card .\nReturning a decision allows the the CDS service to communicate the user's choices  to the EHR without displaying an additional card.  For\nexample, a user might launch a hypertension management app, and upon\nreturning to the EHR's prescription page she expects her new blood pressure\nprescription to \"just be there\". By returning a decision  instead of a card ,\nthe CDS service achieves this expected behavior. ( Note:  To return a\ndecision after a user interaction, the CDS service must maintain state\nassociated with the request's  hookInstance ;\nwhen the EHR invokes the hook for a second time with the same hookInstance , the service can respond with decisions on as well as cards.)", 
            "title": "CDS Decisions"
        }, 
        {
            "location": "/#try-it", 
            "text": "You can try CDS Hooks in our test harness at  http://sandbox.cds-hooks.org", 
            "title": "Try it!"
        }, 
        {
            "location": "/specification/", 
            "text": "CDS Services\n\n\nDiscovery\n\n\n1\ncurl \nhttps://example.com/cds-services\n\n\n\n\n\n\n\n\n\nThe above command returns JSON structured like this:\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n{\n\n  \nservices\n:\n \n[\n\n    \n{\n\n      \nhook\n:\n \npatient-view\n,\n\n      \ntitle\n:\n \nStatic CDS Service Example\n,\n\n      \ndescription\n:\n \nAn example of a CDS service that returns a static set of cards\n,\n\n      \nid\n:\n \nstatic-patient-greeter\n,\n\n      \nprefetch\n:\n \n{\n\n        \npatientToGreet\n:\n \nPatient/{{Patient.id}}\n\n      \n}\n\n    \n},\n\n    \n{\n\n      \nhook\n:\n \nmedication-prescribe\n,\n\n      \ntitle\n:\n \nMedication Echo CDS Service\n,\n\n      \ndescription\n:\n \nAn example of a CDS service that simply echos the medication being prescribed\n,\n\n      \nid\n:\n \nmedication-echo\n,\n\n      \nprefetch\n:\n \n{\n\n        \npatient\n:\n \nPatient/{{Patient.id}}\n,\n\n        \nmedications\n:\n \nMedicationOrder?patient={{Patient.id}}\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\nDevelopers of CDS Services must provide a well-known endpoint allowing the EHR to discover all available CDS Services, including information such as the purpose of the CDS Service, when it should be invoked, and any data that is requested to be prefetched.\n\n\nHTTP Request\n\n\nThe discovery endpoint is always available at \n{baseUrl}/cds-services\n. For example, if the \nbaseUrl\n is https://example.com, the EHR would invoke:\n\n\nGET https://example.com/cds-services\n\n\nResponse\n\n\nThe response to the discovery endpoint is an object containing a list of CDS Services.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nservices\n\n\narray\n. An array of \nCDS Services\n\n\n\n\n\n\n\n\nEach CDS Service is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nhook\n\n\nstring\n or \nurl\n. The hook this service should be invoked on. See \nHook Catalog\n\n\n\n\n\n\ntitle\n\n\nstring\n.  The human-friendly name of this service\n\n\n\n\n\n\ndescription\n\n\nstring\n. The description of this service\n\n\n\n\n\n\nid\n\n\nstring\n. The {id} portion of the URL to this service which is available at\n{baseUrl}/cds-services/{id}\n\n\n\n\n\n\nprefetch\n\n\nobject\n. An object containing key/value pairs of FHIR queries to data that this service would like the EHR prefetch and provide on\neach service call. The key is a \nstring\n that describes the type\nof data being requested and the value is a \nstring\n representing\nthe FHIR query.\n(todo: link to prefetching documentation)\n\n\n\n\n\n\n\n\nHTTP Status Codes\n\n\n\n\n\n\n\n\nCode\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200 OK\n\n\nA successful response\n\n\n\n\n\n\n\n\nCalling a CDS Service\n\n\n1\n2\n3\n4\n5\ncurl\n  -X POST \\\n  -H \nContent-type: application/json\n \\\n  --data @hook-details-see-example-below\n  \nhttps://example.com/cds-services/static-patient-greeter\n\n\n\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n{\n\n   \nhookInstance\n \n:\n \nd1577c69-dfbe-44ad-ba6d-3e05e953b2ea\n,\n\n   \nfhirServer\n \n:\n \nhttp://hooks.smarthealthit.org:9080\n,\n\n   \nhook\n \n:\n \npatient-view\n,\n\n   \nredirect\n \n:\n \nhttp://hooks2.smarthealthit.org/service-done.html\n,\n\n   \nuser\n \n:\n \nPractitioner/example\n,\n\n   \ncontext\n \n:\n \n[],\n\n   \npatient\n \n:\n \n1288992\n,\n\n   \nprefetch\n \n:\n \n{\n\n      \npatientToGreet\n \n:\n \n{\n\n         \nresponse\n \n:\n \n{\n\n            \nstatus\n \n:\n \n200 OK\n\n         \n},\n\n         \nresource\n \n:\n \n{\n\n            \nresourceType\n \n:\n \nPatient\n,\n\n            \ngender\n \n:\n \nmale\n,\n\n            \nbirthDate\n \n:\n \n1925-12-23\n,\n\n            \nid\n \n:\n \n1288992\n,\n\n            \nactive\n \n:\n \ntrue\n\n         \n}\n\n      \n}\n\n   \n}\n\n\n}\n\n\n\n\n\n\n\nHTTP Request\n\n\nAn EHR calls a CDS service by \nPOST\ning a JSON document to the service\nendpoint, which can be constructed from the CDS Service base URL and an\nindividual service id as \n{baseUrl}/cds-services/{service.id}\n.  The CDS Hook\ncall includes a JSON POST body with the following input fields:\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nhook\n\n\nstring\n or \nURL\n. The hook that triggered this CDS Service call\n(todo: link to hook documentation)\n\n\n\n\n\n\nhookInstance\n\n\nstring\n.  A UUID for this particular hook call (see more information below)\n\n\n\n\n\n\nfhirServer\n\n\nURL\n.  The base URL EHR's \nFHIR\n server. The scheme should be \nhttps\n\n\n\n\n\n\nfhirAuthorization\n\n\nobject\n. The OAuth 2 authorization providing access to the EHR's FHIR server. See the \nFHIR Resource Access\n heading of the security section for more information.\n\n\n\n\n\n\nredirect\n\n\nURL\n.  The URL an app link card should redirect to (see more information below)\n\n\n\n\n\n\nuser\n\n\nstring\n.  The FHIR resource type + id representing the current user.\nThe type is one of: \nPractitioner\n, \nPatient\n, or \nRelatedPerson\n.\nFor example, \nPractitioner/123\n\n\n\n\n\n\npatient\n\n\nstring\n.  The FHIR \nPatient.id\n of the current patient in context\n\n\n\n\n\n\nencounter\n\n\nstring\n.  The FHIR \nEncounter.id\n of the current encounter in context\n\n\n\n\n\n\ncontext\n\n\nobject\n.  Hook-specific contextual data that the CDS service will need.\nFor example, with the \nmedication-prescribe\n hook this will include \nMedicationOrder\n being prescribed.\n\n\n\n\n\n\nprefetch\n\n\nobject\n.  The FHIR data that was prefetched by the EHR (see more information below)\n\n\n\n\n\n\n\n\nhookInstance\n\n\nWhile working in the EHR, a user can perform\nmultiple activities in series or in parallel. For example, a clinician might prescribe\ntwo drugs in a row; each prescription activity would be assigned a\nunique \nhookInstance\n. The [[activity catalog|Activity]]\nprovides a description of what events should initiate and terminate\na given hook. This allows an external\nservice to associate requests with activity state, which is necessary to\nsupport the following app-centric decision sequence, where\nthe steps are tied together by a common \nhookInstance\n:\n\n\n\n\nEHR invokes CDS hook\n\n\nCDS service returns \napp link card\n\n\nUser clicks app link and interacts with app\n\n\nFlow returns to EHR, which re-invokes CDS hook\n\n\nCDS service returns \ndecision\n with user's choice\n\n\n\n\nNote: the \nhookInstance\n is globally unique and should contain enough entropy\nto be un-guessable.\n\n\nredirect\n\n\nThis field is only used by services that will return an \napp\nlink card\n: when a user clicks the card's link to launch an app, it becomes\nthe app's job to send the user to \nthis \nredirect\n URL\n upon completion of\nuser interaction. (\nDesign note\n: this field is supplied up-front, as part of\nthe initial request, to avoid requiring the EHR to append any content to app\nlaunch links. This helps support an important \"degenerate\" use case for app\nlink cards: pointing to static content. See below for details.)\n\n\nprefetch\n\n\nAs a performance tweak, the EHR may pass along data according\nto the service's [[Prefetch-Template]]. This helps provide the service with all\nthe data it needs to efficiently compute a set of recommendations. Each key matches a key described in the CDS Service Discovery document; and each value is a FHIR Bundle.entry indicating a response status and returned resource.\n\n\nNote that in the absence of \nprefetch\n, an external service can always execute\nFHIR REST API calls against the EHR server to obtain additional data ad-hoc.)\n\n\n\nYou can see the \ncomplete data model in Swagger\n.\n\n\n\n\nCDS Service Response\n\n\n\n\nExample response\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n{\n\n  \ncards\n:\n \n[\n\n    \n{\n\n      \nsummary\n:\n \nExample Card\n,\n\n      \nindicator\n:\n \ninfo\n,\n\n      \ndetail\n:\n \nThis is an example card.\n,\n\n      \nsource\n:\n \n{\n\n        \nlabel\n:\n \nStatic CDS Service Example\n,\n\n        \nurl\n:\n \nhttps://example.com\n,\n\n        \nicon\n:\n \nhttps://example.com/img/icon-100px.png\n\n      \n},\n\n      \nlinks\n:\n \n[\n\n        \n{\n\n          \nlabel\n:\n \nGoogle\n,\n\n          \nurl\n:\n \nhttps://google.com\n,\n\n          \ntype\n:\n \nabsolute\n\n        \n},\n\n        \n{\n\n          \nlabel\n:\n \nGithub\n,\n\n          \nurl\n:\n \nhttps://github.com\n,\n\n          \ntype\n:\n \nabsolute\n\n        \n},\n\n        \n{\n\n          \nlabel\n:\n \nSMART Example App\n,\n\n          \nurl\n:\n \nhttps://smart.example.com/launch\n,\n\n          \ntype\n:\n \nsmart\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nsummary\n:\n \nAnother card\n,\n\n      \nindicator\n:\n \nwarning\n,\n\n      \nsource\n:\n \n{\n\n        \nlabel\n:\n \nStatic CDS Service Example\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncards\n\n\narray\n. An array of \nCards\n. Cards can provide a combination of information (for reading), suggested actions (to be applied if a user selects them), and links (to launch an app if the user selects them). The EHR decides how to display cards, but we recommend displaying suggestions using buttons, and links using underlined text.\n\n\n\n\n\n\ndecisions\n\n\narray\n. An array of \nDecisions\n. A decision should only be generated after interacting with the user through an app link. Decisions are designed to convey any choices the user made in an app session.\n\n\n\n\n\n\n\n\nrepresents a user's choice made while interacting with the CDS Provider's external app. The first call to a service should never include any \ndecisions\n, since no user interaction has occurred yet.\n\n\nEach \nCard\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsummary\n\n\nstring\n. one-sentence, \n140-character summary message for display to the user inside of this card.\n\n\n\n\n\n\ndetail\n\n\nstring\n.  optional detailed information to display, represented in \n(GitHub Flavored) Markdown\n. (For non-urgent cards, the EHR may hide these details until the user clicks a link like \"view more details...\".)\n\n\n\n\n\n\nindicator\n\n\nstring\n.  urgency/importance of what this card conveys. Allowed values, in order of increasing urgency, are: \ninfo\n, \nwarning\n, \nhard-stop\n. The EHR can use this field to help make UI display decisions such as sort order or coloring. The value \nhard-stop\n indicates that the workflow should not be allowed to proceed.\n\n\n\n\n\n\nsource\n\n\nobject\n. grouping structure for the \nSource\n of the information displayed on this card. The source should be the primary source of guidance for the decision support the card represents.\n\n\n\n\n\n\nsuggestions\n\n\narray\n of \nSuggestions\n, which allow a service to suggest a set of changes in the context of the current activity (e.g.  changing the dose of the medication currently being prescribed, for the \nmedication-prescribe\n activity). The user must be allowed to choose at most one suggestion.\n\n\n\n\n\n\nlinks\n\n\narray\n of \nLinks\n, which allow a service to suggest a link to an app that the user might want to run for additional information or to help guide a decision.\n\n\n\n\n\n\n\n\nThe \nSource\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlabel\n\n\nstring\n. A short, human-readable label to display for the source of the information displayed on this card. If a \nurl\n is also specified, this may be the text for the hyperlink.\n\n\n\n\n\n\nurl\n\n\nURL\n. An optional absolute URL to load (via \nGET\n, in a browser context) when a user clicks on this link to learn more about the organization or data set that provided the information on this card. Note that this URL should not be used to supply a context-specific \"drill-down\" view of the information on this card. For that, use \nlink.url\n instead.\n\n\n\n\n\n\nicon\n\n\nURL\n. An optional absolute URL to an icon for the source of this card. The icon returned by this URL should be in PNG format, an image size of 100x100 pixels, and must not include any transparent regions.\n\n\n\n\n\n\n\n\nEach \nSuggestion\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlabel\n\n\nstring\n. human-readable label to display for this suggestion (e.g. the EHR might render this as the text on a button tied to this suggestion).\n\n\n\n\n\n\nuuid\n\n\nstring\n. unique identifier for this suggestion. For details see \nSuggestion Tracking Analytics\n\n\n\n\n\n\nactions\n\n\narray\n. array of objects, each defining a suggested action. Within a suggestion, all actions are logically AND'd together, such that a user selecting a suggestion selects all of the actions within it.\n\n\n\n\n\n\n\n\nEach \nAction\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n. The type of action being performed. Allowed values are: \ncreate\n, \nupdate\n, \ndelete\n.\n\n\n\n\n\n\ndescription\n\n\nstring\n. human-readable description of the suggested action. May be presented to the end-user.\n\n\n\n\n\n\nresource\n\n\nobject\n. depending upon the \ntype\n attribute, a new resource or the id of a resource. For a type of \ncreate\n, the \nresource\n attribute contains a new FHIR resource to apply within the current activity (e.g. for \nmedication-prescribe\n, this holds the updated prescription as proposed by the suggestion).  For \ndelete\n, this is the id of any resource to remove from the current activity (e.g. for the \norder-review\n activity, this would provide a way to remove an order from the pending list). In activities like \nmedication-prescribe\n where only one \"content\" resource is ever relevant, this field may be omitted. For \nupdate\n, this holds the updated resource to modify from the current activity (e.g. for the \norder-review\n activity, this would provide a way to annotate an order from the pending list with an assessment). This field may be omitted.\n\n\n\n\n\n\n\n\nEach \nLink\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlabel\n\n\nstring\n. human-readable label to display for this link (e.g. the EHR might render this as the underlined text of a clickable link).\n\n\n\n\n\n\nurl\n\n\nURL\n. URL to load (via \nGET\n, in a browser context) when a user clicks on this link. Note that this may be a \"deep link\" with context embedded in path segments, query parameters, or a hash. In general this URL should embed enough context for the app to determine the \nhookInstance\n, and \nredirect\n url upon downstream launch, because the EHR will simply use this url as-is, without appending any parameters at launch time.\n\n\n\n\n\n\ntype\n\n\nstring\n. The type of the given URL. There are two possible values for this field. A type of \nabsolute\n indicates that the URL is absolute and should be treated as-is. A type of \nsmart\n indicates that the URL is a SMART app launch URL and the EHR should ensure the SMART app launch URL is populated with the appropriate SMART launch parameters.\n\n\n\n\n\n\n\n\nEach \nDecision\n is described by the following attributes.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncreate\n\n\narray\n of \nstrings\n. id(s) of new resource(s) that the EHR should create within the current activity (e.g. for \nmedication-prescribe\n, this would be the updated prescription that a user had authored in an app session).\n\n\n\n\n\n\ndelete\n\n\narray\n of \nstrings\n. id(s) of any resources to remove from the current activity (e.g. for the \norder-review\n activity, this would provide a way to remove orders from the pending list). In activities like \nmedication-prescribe\n where only one \"content\" resource is ever relevant, this field may be omitted.\n\n\n\n\n\n\n\n\nNo Decision Support\n\n\n\n\nResponse when no decision support is necessary for the user\n\n\n\n\n1\n2\n3\n{\n\n  \ncards\n:\n \n[]\n\n\n}\n\n\n\n\n\n\n\nIf your CDS Service has no decision support for the user, your service should return a 200 HTTP response with an empty array of cards.\n\n\nAnalytics\n\n\nWhenever a user clicks a button from a \"suggestion\" card, the EHR uses the\nsuggestion \nuuid\n to notify the CDS Service's analytics endpoint via a \nPOST\n\nwith an empty body:\n\n\n1\n`POST {baseUrl}/cds-services/{serviceId}/analytics/{uuid}`\n\n\n\n\n\n\nIf a suggestion has no \nuuid\n, the EHR does not send a notification.\n\n\nPrefetch\n\n\nA performance tweak\n\n\nIf real-world performance were no issue, an EHR could launch a CDS Service\npassing only \ncontext\n data, and \nwithout passing any additional clinical data\n\nup-front. The CDS Service could then request any data it needed via the EHR's\nFHIR REST API.\n\n\nBut CDS services must respond quickly (on the order of 500 ms), and so we\nprovide a performance tweak that allows a CDS Service to register a set of \"prefetch\ntemplates\" with the EHR ahead of time.\n\n\nThe prefetch templates are a dictionary of \nread\n and \nsearch\n requests to supply\nrelevant data, where the following variables are defined:\n\n\n\n\n\n\n\n\nvariable\n\n\nmeaning\n\n\n\n\n\n\n\n\n\n\n{{Patient.id}}\n\n\nThe id of the patient in context for this activity (e.g. \n123\n)\n\n\n\n\n\n\n{{User.id}}\n\n\nThe type and id of the user for this session (e.g. \nPractitioner/123\n)\n\n\n\n\n\n\n\n\nAn EHR \nmay\n choose to honor some or all of the desired prefetch templates from an appropriate source. For example:\n\n\n\n\nThe EHR may have some of the desired prefetched data already in memory, thereby removing the need for any network call\n\n\nThe EHR may compute an efficient set of prefetch templates from multiple CDS Services, thereby reducing the number of network calls to a minimum\n\n\nThe EHR may satisfy some of the desired prefetched templates via some internal service or even its own FHIR server\n\n\nThe user may not be authorized to share the desired prefetch data.\n\n\n\n\nRegardless of how the EHR satisfies the prefetched templates (if at all), it is important that the prefetched data given to the CDS Service is equivalent to the CDS Service making its own call to the EHR FHIR server, where \n{{Patient.id}}\n is replaced with the id of the current patient (e.g. \n123\n) inside of any URL strings and using \nread\n and \nsearch\n operations to the server's \"transaction\" endpoint as a FHIR batch-type bundle.\n\n\nThe resulting response, which must be rendered in a single page \u2014 no \"next\npage\" links allowed \u2014 is passed along to the CDS Service using the\n\nprefetch\n parameter (see below for a complete example). \n\n\nThe CDS Service must not receive any prefetch template key that the EHR chooses not to satisfy. Additionally, if the EHR encounters an error while retrieving any prefetched data, the prefetch template key should not be sent to the CDS Service. It is the CDS Service's responsibility to check to see what prefetched data was satisfied (if any) and manually retrieve any necessary data. If the CDS Service is unable to obtain required data because it cannot access the FHIR server and the request did not contain the necessary pre-fetch keys; the service shall respond with an HTTP 412 Precondition Failed status code.\n\n\nExample prefetch request\n\n\n1\n2\n3\n4\n5\n6\n7\n{\n\n  \nprefetch\n:\n \n{\n\n    \np\n:\n \nPatient/{{Patient.id}}\n,\n\n    \na1c\n:\n \nObservation?patient={{Patient.id}}\ncode=4548-4\n_count=1\nsort:desc=date\n,\n\n    \nu\n:\n \nPractitioner/{{User.id}}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nHere is an example prefetch property from a CDS service discovery endpoint. The\ngoal is to know, at call time:\n\n\n\n\n\n\n\n\nKey\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\np\n\n\nPatient demographics\n\n\n\n\n\n\na1c\n\n\nMost recent Hemoglobin A1c reading for this patient\n\n\n\n\n\n\nu\n\n\nInformation on the current user (Practitioner)\n\n\n\n\n\n\n\n\nExample prefetch response\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n{\n\n  \nprefetch\n:\n \n{\n\n    \np\n:{\n\n      \nresponse\n:\n \n{\n\n        \nstatus\n:\n \n200 OK\n\n      \n},\n\n      \nresource\n:\n \n{\n\n        \nresourceType\n:\n \nPatient\n,\n\n        \ngender\n:\n \nmale\n,\n\n        \nbirthDate\n:\n \n1974-12-25\n,\n\n        \n...\n:\n \nsnipped for brevity\n\n      \n}\n\n    \n},\n\n    \na1c\n:\n \n{\n\n      \nresponse\n:\n \n{\n\n        \nstatus\n:\n \n200 OK\n\n      \n},\n\n      \nresource\n:{\n\n        \nresourceType\n:\n \nBundle\n,\n\n        \ntype\n:\n \nsearchset\n,\n\n        \nentry\n:\n \n[{\n\n          \nresource\n:\n \n{\n\n            \nresourceType\n:\n \nObservation\n,\n\n            \ncode\n:\n \n{\n\n              \ncoding\n:\n \n[{\n\n                \nsystem\n:\n \nhttp://loinc.org\n,\n\n                \ncode\n:\n \n4548-4\n,\n\n                \ndisplay\n:\n \nHemoglobin A1c\n\n              \n}]\n\n            \n},\n\n            \n...\n:\n \nsnipped for brevity\n\n          \n}\n\n        \n}]\n\n      \n}\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nThe response is augmented to include two prefetch values, where the dictionary\nkeys match the request keys (\np\n and \na1c\n in this case).\n\n\nNote that the missing \nu\n key indicates that either the EHR has decided not to satisfy this particular prefetch template or it was not able to retrieve this prefetched data. The CDS Service is responsible for retrieving this Practitioner data from the FHIR server (if required).\n\n\nPrefetch query restrictions\n\n\nTo reduce the implementation burden on EHRs that support CDS services, CDS Hooks recommends that prefetch queries only use a subset of the full functionality available in the FHIR specification. Valid prefetch URLs should only contain:\n\n\n\n\ninstance\n level \nread\n interactions (for resources with known ids such as \nPatient\n and \nPractitioner\n)\n\n\ntype\n level \nsearch\n interactions\n\n\nPatient references (e.g. \npatient={{Patient}}\n)\n\n\ntoken\n search parameters using equality (e.g. \ncode=4548-4\n) and optionally the \n:in\n modifier (no other modifiers for token parameters)\n\n\ndate\n search parameters on \ndate\n, \ndateTime\n, \ninstant\n, or \nPeriod\n types only, and using only the prefixes \neq\n, \nlt\n, \ngt\n, \nge\n, \nle\n\n\nthe \n_count\n parameter to limit the number of results returned\n\n\nthe \n_sort\n parameter to allow for \nmost recent\n and \nfirst\n queries\n\n\n\n\nSecurity\n\n\n\nThe CDS Hooks security model is undergoing a rigorous security assessment and as such, may be subject to change.\n\n\n\n\nCDS Hooks defines the agreed upon security model between an EHR and the CDS Service. Like SMART on FHIR, the security model of CDS Hooks leverages the same open and well supported standards like OAuth 2 and JSON web tokens. However, as CDS Hooks differs from SMART, the manner in which these standards are used is specific to CDS Hooks.\n\n\nTrusting CDS Services\n\n\nAs the EHR initiates every interaction with the CDS Service, it is responsible for establishing trust with the CDS Services it intends to call. This trust is established via a TLS connection to the CDS Service. Thus, all CDS Service endpoints must be deployed to a TLS protected URL (https). This includes both the Discovery and individual CDS Service endpoints.\n\n\nEHRs should use accepted best practices for verifying the authenticity and trust of these TLS connections. For instance, \nrfc5280\n and \nrfc6125\n. Additionally, it is assumed that EHRs configure the CDS Services they connect to via some offline process according to the business rules and practices of both the EHR and CDS Service organizations.\n\n\nTrusting EHRs\n\n\nSince the CDS Service is invoked by the EHR, the CDS Service does not have the same mechanism as EHRs to establish trust of the EHR invoking it. Signed \nJSON web tokens (JWT)\n are produced by the EHR and provided to the CDS Service, allowing the CDS Service to establish trust of the calling EHR.\n\n\nEach time the EHR makes a request to the CDS Service, it must send an \nAuthorization\n header where the value is \nBearer \ntoken\n, replacing \ntoken\n with the actual JWT. Note that this is for every single CDS Service call, whether that be Discovery calls, CDS Service invocations, etc.\n\n\n\n\nExample JSON web token payload\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n{\n\n  \niss\n:\n \nhttps://fhir-ehr.example.com/\n,\n\n  \naud\n:\n \nhttps://cds.example.org/cds-services/some-service\n,\n\n  \nexp\n:\n \n1422568860\n,\n\n  \niat\n:\n \n1311280970\n,\n\n  \njti\n:\n \nee22b021-e1b7-4611-ba5b-8eec6a33ac1e\n\n\n}\n\n\n\n\n\n\n\n\n\nUsing the above JWT payload, the complete JWT as passed in the Authorization HTTP header would be:\n\n\n\n\n1\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2ZoaXItZWhyLmV4YW1wbGUuY29tLyIsImF1ZCI6Imh0dHBzOi8vY2RzLmV4YW1wbGUub3JnL2Nkcy1zZXJ2aWNlcy9zb21lLXNlcnZpY2UiLCJleHAiOjE0MjI1Njg4NjAsImlhdCI6MTMxMTI4MDk3MCwianRpIjoiZWUyMmIwMjEtZTFiNy00NjExLWJhNWItOGVlYzZhMzNhYzFlIn0.Gwl3s301OMWpdEVAVj_T3JZV8bs7N5-V7QNNG7TQ33o\n\n\n\n\n\n\nThe JWT from the EHR is signed with the EHR's private key and contains the following fields:\n\n\n\n\n\n\n\n\nField\n\n\nValue\n\n\n\n\n\n\n\n\n\n\niss\n\n\nstring\n The URL of the issuer of this JWT.\n\n\n\n\n\n\naud\n\n\nstring or array of strings\n The CDS Service endpoint that is being called by the EHR. (See more details below).\n\n\n\n\n\n\nexp\n\n\nnumber\n Expiration time integer for this authentication JWT, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).\n\n\n\n\n\n\niat\n\n\nnumber\n The time at which this JWT was issued, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).\n\n\n\n\n\n\njti\n\n\nstring\n A nonce string value that uniquely identifies this authentication JWT (used to protect against replay attacks)\n\n\n\n\n\n\n\n\nPer \nrfc7519\n, the \naud\n value is either a string or an array of strings. For CDS Hooks, this is the URL of the CDS Service endpoint being invoked. For example, consider a CDS Service available at a base URL of \nhttps://cds.example.org\n. When the EHR invokes the CDS Service discovery endpoint, the aud value is either \n\"https://cds.example.org/cds-services\"\n or \n[\"https://cds.example.org/cds-services\"]\n. Similarly, when the EHR invokes a particular CDS Service (say, \nsome-service\n), the aud value is either \n\"https://cds.example.org/cds-services/some-service\"\n or \n[\"https://cds.example.org/cds-services/some-service\"]\n.\n\n\nhttps://jwt.io/\n is a great resource not only for learning about JSON web tokens, but also for parsing a JWT value into its distinct parts to see how it is constructed. Try taking the example JWT here and pasting it into the form at \nhttps://jwt.io/\n to see how the token is constructed.\n\n\n\nAt this time, CDS Hooks does not prescribe how the EHR shares its public key or the format of said key used in the JWT signature.\n\n\n\n\nMutual TLS\n\n\nMutual TLS\n (mTLS) may be used alongside JSON web tokens to establish trust of the EHR by the CDS Service.\n\n\nFHIR Resource Access\n\n\nThe CDS Service is able to use the FHIR server of the EHR to obtain any additional data it needs in order to perform its decision support. This is similar to SMART on FHIR where the SMART app can obtain additional data via the provided FHIR server.\n\n\nLike SMART on FHIR, CDS Hooks requires that access to the FHIR server be controlled by an Authorization server utilizing the OAuth 2 framework. Thus, the CDS Service is able to consume the given FHIR server via an access (bearer) token just like a SMART app. While CDS Hooks shares the underlying technical framework and standards as SMART on FHIR, there are very important differences between SMART and CDS Hooks.\n\n\nObtaining an Access Token\n\n\nIn SMART on FHIR, the SMART app requests and ultimately obtains an access token from the Authorization server using the SMART launch workflow. This process utilizes the authorization code grant model as defined by the OAuth 2.0 Authorization Framework in \nrfc6749\n.\n\n\nWith CDS Hooks, the EHR provides the access token directly in the request to the CDS Service. Thus, the CDS Service does not need to request the token from the authorization server as a SMART app would. This is done purely for performance reasons as the authorization code grant model in OAuth 2 involves several HTTPS calls and redirects. In contrast to a SMART app, a CDS Service may be invoked many times during a workflow. Going through the authorization code grant model on every hook invocation would likely result in a poorly performing CDS Service due to the authorization overhead.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n{\n\n  \nfhirAuthorization\n \n:\n \n{\n\n    \naccess_token\n \n:\n \nsome-opaque-fhir-access-token\n,\n\n    \ntoken_type\n \n:\n \nBearer\n,\n\n    \nexpires_in\n \n:\n \n300\n,\n\n    \nscope\n \n:\n \npatient/Patient.read patient/Observation.read\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nAccess Token\n\n\nThe access token is specified in the CDS Service request via the \nfhirAuthorization\n request parameter. This parameter is an object that contains both the access token as well as other related information.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nstring\n. This is the OAuth 2 access token that provides access to the FHIR server.\n\n\n\n\n\n\ntoken_type\n\n\nstring\n. Fixed value: \nBearer\n\n\n\n\n\n\nexpires_in\n\n\ninteger\n. The lifetime in seconds of the access token.\n\n\n\n\n\n\nscope\n\n\nstring\n. The scopes the access token grants the CDS Service.\n\n\n\n\n\n\n\n\nIt is recommended that the \nexpires_in\n value be very short lived as the access token must be treated as a transient value by the CDS Service.\n\n\nIt is recommended that the \nscope\n value contain just the scopes that the CDS Service needs for its logic and no more.\n\n\nAs the CDS Service is executing on behalf of a user, it is important that the data the CDS Service has access to is under the same restrictions/authorization as the current user. As such, the access token shall be scoped to:\n\n\n\n\nThe CDS Service being invoked\n\n\nThe current user\n\n\n\n\nCross-Origin Resource Sharing\n\n\nCross-origin resource sharing (CORS)\n is web security mechanism that is built into browsers. In short, CORS allows servers to control how browsers access resources on the server, including the accessible HTTP response headers. CORS is only honored by web browsers and as such, is a client-side security mechanism.\n\n\nFor CDS Services, implementing CORS is required if your CDS Service is to be called from a web browser. As the \nCDS Hooks Sandbox\n is a browser application, you must implement CORS to test your CDS Service in the CDS Hooks Sandbox.\n\n\nYou should carefully consider if and how you support CORS in your CDS Service. A secure implementation guide for CORS is outside of the CDS Hooks specification, as it involves implementation decisions that are made based upon your organization's tolerance for risk and deployment environment.\n\n\nAn insecure, extremely permissive, non-production CORS configuration that allows you to test your CDS Service against our Sandbox returns the following HTTP headers:\n\n\n\n\n\n\n\n\nHeader\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nAccess-Control-Allow-Credentials\n\n\ntrue\n\n\n\n\n\n\nAccess-Control-Allow-Headers\n\n\nAuthorization, Content-Type\n\n\n\n\n\n\nAccess-Control-Allow-Methods\n\n\nGET, POST, OPTIONS\n\n\n\n\n\n\nAccess-Control-Allow-Origin\n\n\n*\n\n\n\n\n\n\nAccess-Control-Expose-Headers\n\n\nOrigin, Accept, Content-Location, Location, X-Requested-With", 
            "title": "Specification"
        }, 
        {
            "location": "/specification/#cds-services", 
            "text": "", 
            "title": "CDS Services"
        }, 
        {
            "location": "/specification/#discovery", 
            "text": "1 curl  https://example.com/cds-services     The above command returns JSON structured like this:    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 { \n   services :   [ \n     { \n       hook :   patient-view , \n       title :   Static CDS Service Example , \n       description :   An example of a CDS service that returns a static set of cards , \n       id :   static-patient-greeter , \n       prefetch :   { \n         patientToGreet :   Patient/{{Patient.id}} \n       } \n     }, \n     { \n       hook :   medication-prescribe , \n       title :   Medication Echo CDS Service , \n       description :   An example of a CDS service that simply echos the medication being prescribed , \n       id :   medication-echo , \n       prefetch :   { \n         patient :   Patient/{{Patient.id}} , \n         medications :   MedicationOrder?patient={{Patient.id}} \n       } \n     } \n   ]  }    Developers of CDS Services must provide a well-known endpoint allowing the EHR to discover all available CDS Services, including information such as the purpose of the CDS Service, when it should be invoked, and any data that is requested to be prefetched.", 
            "title": "Discovery"
        }, 
        {
            "location": "/specification/#http-request", 
            "text": "The discovery endpoint is always available at  {baseUrl}/cds-services . For example, if the  baseUrl  is https://example.com, the EHR would invoke:  GET https://example.com/cds-services", 
            "title": "HTTP Request"
        }, 
        {
            "location": "/specification/#response", 
            "text": "The response to the discovery endpoint is an object containing a list of CDS Services.     Field  Description      services  array . An array of  CDS Services     Each CDS Service is described by the following attributes.     Field  Description      hook  string  or  url . The hook this service should be invoked on. See  Hook Catalog    title  string .  The human-friendly name of this service    description  string . The description of this service    id  string . The {id} portion of the URL to this service which is available at {baseUrl}/cds-services/{id}    prefetch  object . An object containing key/value pairs of FHIR queries to data that this service would like the EHR prefetch and provide on each service call. The key is a  string  that describes the type of data being requested and the value is a  string  representing the FHIR query. (todo: link to prefetching documentation)", 
            "title": "Response"
        }, 
        {
            "location": "/specification/#http-status-codes", 
            "text": "Code  Description      200 OK  A successful response", 
            "title": "HTTP Status Codes"
        }, 
        {
            "location": "/specification/#calling-a-cds-service", 
            "text": "1\n2\n3\n4\n5 curl\n  -X POST \\\n  -H  Content-type: application/json  \\\n  --data @hook-details-see-example-below\n   https://example.com/cds-services/static-patient-greeter     1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 { \n    hookInstance   :   d1577c69-dfbe-44ad-ba6d-3e05e953b2ea , \n    fhirServer   :   http://hooks.smarthealthit.org:9080 , \n    hook   :   patient-view , \n    redirect   :   http://hooks2.smarthealthit.org/service-done.html , \n    user   :   Practitioner/example , \n    context   :   [], \n    patient   :   1288992 , \n    prefetch   :   { \n       patientToGreet   :   { \n          response   :   { \n             status   :   200 OK \n          }, \n          resource   :   { \n             resourceType   :   Patient , \n             gender   :   male , \n             birthDate   :   1925-12-23 , \n             id   :   1288992 , \n             active   :   true \n          } \n       } \n    }  }", 
            "title": "Calling a CDS Service"
        }, 
        {
            "location": "/specification/#http-request_1", 
            "text": "An EHR calls a CDS service by  POST ing a JSON document to the service\nendpoint, which can be constructed from the CDS Service base URL and an\nindividual service id as  {baseUrl}/cds-services/{service.id} .  The CDS Hook\ncall includes a JSON POST body with the following input fields:     Field  Description      hook  string  or  URL . The hook that triggered this CDS Service call (todo: link to hook documentation)    hookInstance  string .  A UUID for this particular hook call (see more information below)    fhirServer  URL .  The base URL EHR's  FHIR  server. The scheme should be  https    fhirAuthorization  object . The OAuth 2 authorization providing access to the EHR's FHIR server. See the  FHIR Resource Access  heading of the security section for more information.    redirect  URL .  The URL an app link card should redirect to (see more information below)    user  string .  The FHIR resource type + id representing the current user. The type is one of:  Practitioner ,  Patient , or  RelatedPerson . For example,  Practitioner/123    patient  string .  The FHIR  Patient.id  of the current patient in context    encounter  string .  The FHIR  Encounter.id  of the current encounter in context    context  object .  Hook-specific contextual data that the CDS service will need. For example, with the  medication-prescribe  hook this will include  MedicationOrder  being prescribed.    prefetch  object .  The FHIR data that was prefetched by the EHR (see more information below)", 
            "title": "HTTP Request"
        }, 
        {
            "location": "/specification/#hookinstance", 
            "text": "While working in the EHR, a user can perform\nmultiple activities in series or in parallel. For example, a clinician might prescribe\ntwo drugs in a row; each prescription activity would be assigned a\nunique  hookInstance . The [[activity catalog|Activity]]\nprovides a description of what events should initiate and terminate\na given hook. This allows an external\nservice to associate requests with activity state, which is necessary to\nsupport the following app-centric decision sequence, where\nthe steps are tied together by a common  hookInstance :   EHR invokes CDS hook  CDS service returns  app link card  User clicks app link and interacts with app  Flow returns to EHR, which re-invokes CDS hook  CDS service returns  decision  with user's choice   Note: the  hookInstance  is globally unique and should contain enough entropy\nto be un-guessable.", 
            "title": "hookInstance"
        }, 
        {
            "location": "/specification/#redirect", 
            "text": "This field is only used by services that will return an  app\nlink card : when a user clicks the card's link to launch an app, it becomes\nthe app's job to send the user to  this  redirect  URL  upon completion of\nuser interaction. ( Design note : this field is supplied up-front, as part of\nthe initial request, to avoid requiring the EHR to append any content to app\nlaunch links. This helps support an important \"degenerate\" use case for app\nlink cards: pointing to static content. See below for details.)", 
            "title": "redirect"
        }, 
        {
            "location": "/specification/#prefetch", 
            "text": "As a performance tweak, the EHR may pass along data according\nto the service's [[Prefetch-Template]]. This helps provide the service with all\nthe data it needs to efficiently compute a set of recommendations. Each key matches a key described in the CDS Service Discovery document; and each value is a FHIR Bundle.entry indicating a response status and returned resource.  Note that in the absence of  prefetch , an external service can always execute\nFHIR REST API calls against the EHR server to obtain additional data ad-hoc.)  \nYou can see the  complete data model in Swagger .", 
            "title": "prefetch"
        }, 
        {
            "location": "/specification/#cds-service-response", 
            "text": "Example response    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38 { \n   cards :   [ \n     { \n       summary :   Example Card , \n       indicator :   info , \n       detail :   This is an example card. , \n       source :   { \n         label :   Static CDS Service Example , \n         url :   https://example.com , \n         icon :   https://example.com/img/icon-100px.png \n       }, \n       links :   [ \n         { \n           label :   Google , \n           url :   https://google.com , \n           type :   absolute \n         }, \n         { \n           label :   Github , \n           url :   https://github.com , \n           type :   absolute \n         }, \n         { \n           label :   SMART Example App , \n           url :   https://smart.example.com/launch , \n           type :   smart \n         } \n       ] \n     }, \n     { \n       summary :   Another card , \n       indicator :   warning , \n       source :   { \n         label :   Static CDS Service Example \n       } \n     } \n   ]  }       Field  Description      cards  array . An array of  Cards . Cards can provide a combination of information (for reading), suggested actions (to be applied if a user selects them), and links (to launch an app if the user selects them). The EHR decides how to display cards, but we recommend displaying suggestions using buttons, and links using underlined text.    decisions  array . An array of  Decisions . A decision should only be generated after interacting with the user through an app link. Decisions are designed to convey any choices the user made in an app session.     represents a user's choice made while interacting with the CDS Provider's external app. The first call to a service should never include any  decisions , since no user interaction has occurred yet.  Each  Card  is described by the following attributes.     Field  Description      summary  string . one-sentence,  140-character summary message for display to the user inside of this card.    detail  string .  optional detailed information to display, represented in  (GitHub Flavored) Markdown . (For non-urgent cards, the EHR may hide these details until the user clicks a link like \"view more details...\".)    indicator  string .  urgency/importance of what this card conveys. Allowed values, in order of increasing urgency, are:  info ,  warning ,  hard-stop . The EHR can use this field to help make UI display decisions such as sort order or coloring. The value  hard-stop  indicates that the workflow should not be allowed to proceed.    source  object . grouping structure for the  Source  of the information displayed on this card. The source should be the primary source of guidance for the decision support the card represents.    suggestions  array  of  Suggestions , which allow a service to suggest a set of changes in the context of the current activity (e.g.  changing the dose of the medication currently being prescribed, for the  medication-prescribe  activity). The user must be allowed to choose at most one suggestion.    links  array  of  Links , which allow a service to suggest a link to an app that the user might want to run for additional information or to help guide a decision.     The  Source  is described by the following attributes.     Field  Description      label  string . A short, human-readable label to display for the source of the information displayed on this card. If a  url  is also specified, this may be the text for the hyperlink.    url  URL . An optional absolute URL to load (via  GET , in a browser context) when a user clicks on this link to learn more about the organization or data set that provided the information on this card. Note that this URL should not be used to supply a context-specific \"drill-down\" view of the information on this card. For that, use  link.url  instead.    icon  URL . An optional absolute URL to an icon for the source of this card. The icon returned by this URL should be in PNG format, an image size of 100x100 pixels, and must not include any transparent regions.     Each  Suggestion  is described by the following attributes.     Field  Description      label  string . human-readable label to display for this suggestion (e.g. the EHR might render this as the text on a button tied to this suggestion).    uuid  string . unique identifier for this suggestion. For details see  Suggestion Tracking Analytics    actions  array . array of objects, each defining a suggested action. Within a suggestion, all actions are logically AND'd together, such that a user selecting a suggestion selects all of the actions within it.     Each  Action  is described by the following attributes.     Field  Description      type  string . The type of action being performed. Allowed values are:  create ,  update ,  delete .    description  string . human-readable description of the suggested action. May be presented to the end-user.    resource  object . depending upon the  type  attribute, a new resource or the id of a resource. For a type of  create , the  resource  attribute contains a new FHIR resource to apply within the current activity (e.g. for  medication-prescribe , this holds the updated prescription as proposed by the suggestion).  For  delete , this is the id of any resource to remove from the current activity (e.g. for the  order-review  activity, this would provide a way to remove an order from the pending list). In activities like  medication-prescribe  where only one \"content\" resource is ever relevant, this field may be omitted. For  update , this holds the updated resource to modify from the current activity (e.g. for the  order-review  activity, this would provide a way to annotate an order from the pending list with an assessment). This field may be omitted.     Each  Link  is described by the following attributes.     Field  Description      label  string . human-readable label to display for this link (e.g. the EHR might render this as the underlined text of a clickable link).    url  URL . URL to load (via  GET , in a browser context) when a user clicks on this link. Note that this may be a \"deep link\" with context embedded in path segments, query parameters, or a hash. In general this URL should embed enough context for the app to determine the  hookInstance , and  redirect  url upon downstream launch, because the EHR will simply use this url as-is, without appending any parameters at launch time.    type  string . The type of the given URL. There are two possible values for this field. A type of  absolute  indicates that the URL is absolute and should be treated as-is. A type of  smart  indicates that the URL is a SMART app launch URL and the EHR should ensure the SMART app launch URL is populated with the appropriate SMART launch parameters.     Each  Decision  is described by the following attributes.     Field  Description      create  array  of  strings . id(s) of new resource(s) that the EHR should create within the current activity (e.g. for  medication-prescribe , this would be the updated prescription that a user had authored in an app session).    delete  array  of  strings . id(s) of any resources to remove from the current activity (e.g. for the  order-review  activity, this would provide a way to remove orders from the pending list). In activities like  medication-prescribe  where only one \"content\" resource is ever relevant, this field may be omitted.", 
            "title": "CDS Service Response"
        }, 
        {
            "location": "/specification/#no-decision-support", 
            "text": "Response when no decision support is necessary for the user   1\n2\n3 { \n   cards :   []  }    If your CDS Service has no decision support for the user, your service should return a 200 HTTP response with an empty array of cards.", 
            "title": "No Decision Support"
        }, 
        {
            "location": "/specification/#analytics", 
            "text": "Whenever a user clicks a button from a \"suggestion\" card, the EHR uses the\nsuggestion  uuid  to notify the CDS Service's analytics endpoint via a  POST \nwith an empty body:  1 `POST {baseUrl}/cds-services/{serviceId}/analytics/{uuid}`   If a suggestion has no  uuid , the EHR does not send a notification.", 
            "title": "Analytics"
        }, 
        {
            "location": "/specification/#prefetch_1", 
            "text": "", 
            "title": "Prefetch"
        }, 
        {
            "location": "/specification/#a-performance-tweak", 
            "text": "If real-world performance were no issue, an EHR could launch a CDS Service\npassing only  context  data, and  without passing any additional clinical data \nup-front. The CDS Service could then request any data it needed via the EHR's\nFHIR REST API.  But CDS services must respond quickly (on the order of 500 ms), and so we\nprovide a performance tweak that allows a CDS Service to register a set of \"prefetch\ntemplates\" with the EHR ahead of time.  The prefetch templates are a dictionary of  read  and  search  requests to supply\nrelevant data, where the following variables are defined:     variable  meaning      {{Patient.id}}  The id of the patient in context for this activity (e.g.  123 )    {{User.id}}  The type and id of the user for this session (e.g.  Practitioner/123 )     An EHR  may  choose to honor some or all of the desired prefetch templates from an appropriate source. For example:   The EHR may have some of the desired prefetched data already in memory, thereby removing the need for any network call  The EHR may compute an efficient set of prefetch templates from multiple CDS Services, thereby reducing the number of network calls to a minimum  The EHR may satisfy some of the desired prefetched templates via some internal service or even its own FHIR server  The user may not be authorized to share the desired prefetch data.   Regardless of how the EHR satisfies the prefetched templates (if at all), it is important that the prefetched data given to the CDS Service is equivalent to the CDS Service making its own call to the EHR FHIR server, where  {{Patient.id}}  is replaced with the id of the current patient (e.g.  123 ) inside of any URL strings and using  read  and  search  operations to the server's \"transaction\" endpoint as a FHIR batch-type bundle.  The resulting response, which must be rendered in a single page \u2014 no \"next\npage\" links allowed \u2014 is passed along to the CDS Service using the prefetch  parameter (see below for a complete example).   The CDS Service must not receive any prefetch template key that the EHR chooses not to satisfy. Additionally, if the EHR encounters an error while retrieving any prefetched data, the prefetch template key should not be sent to the CDS Service. It is the CDS Service's responsibility to check to see what prefetched data was satisfied (if any) and manually retrieve any necessary data. If the CDS Service is unable to obtain required data because it cannot access the FHIR server and the request did not contain the necessary pre-fetch keys; the service shall respond with an HTTP 412 Precondition Failed status code.", 
            "title": "A performance tweak"
        }, 
        {
            "location": "/specification/#example-prefetch-request", 
            "text": "1\n2\n3\n4\n5\n6\n7 { \n   prefetch :   { \n     p :   Patient/{{Patient.id}} , \n     a1c :   Observation?patient={{Patient.id}} code=4548-4 _count=1 sort:desc=date , \n     u :   Practitioner/{{User.id}} \n   }  }    Here is an example prefetch property from a CDS service discovery endpoint. The\ngoal is to know, at call time:     Key  Description      p  Patient demographics    a1c  Most recent Hemoglobin A1c reading for this patient    u  Information on the current user (Practitioner)", 
            "title": "Example prefetch request"
        }, 
        {
            "location": "/specification/#example-prefetch-response", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37 { \n   prefetch :   { \n     p :{ \n       response :   { \n         status :   200 OK \n       }, \n       resource :   { \n         resourceType :   Patient , \n         gender :   male , \n         birthDate :   1974-12-25 , \n         ... :   snipped for brevity \n       } \n     }, \n     a1c :   { \n       response :   { \n         status :   200 OK \n       }, \n       resource :{ \n         resourceType :   Bundle , \n         type :   searchset , \n         entry :   [{ \n           resource :   { \n             resourceType :   Observation , \n             code :   { \n               coding :   [{ \n                 system :   http://loinc.org , \n                 code :   4548-4 , \n                 display :   Hemoglobin A1c \n               }] \n             }, \n             ... :   snipped for brevity \n           } \n         }] \n       } \n     } \n   }  }    The response is augmented to include two prefetch values, where the dictionary\nkeys match the request keys ( p  and  a1c  in this case).  Note that the missing  u  key indicates that either the EHR has decided not to satisfy this particular prefetch template or it was not able to retrieve this prefetched data. The CDS Service is responsible for retrieving this Practitioner data from the FHIR server (if required).", 
            "title": "Example prefetch response"
        }, 
        {
            "location": "/specification/#prefetch-query-restrictions", 
            "text": "To reduce the implementation burden on EHRs that support CDS services, CDS Hooks recommends that prefetch queries only use a subset of the full functionality available in the FHIR specification. Valid prefetch URLs should only contain:   instance  level  read  interactions (for resources with known ids such as  Patient  and  Practitioner )  type  level  search  interactions  Patient references (e.g.  patient={{Patient}} )  token  search parameters using equality (e.g.  code=4548-4 ) and optionally the  :in  modifier (no other modifiers for token parameters)  date  search parameters on  date ,  dateTime ,  instant , or  Period  types only, and using only the prefixes  eq ,  lt ,  gt ,  ge ,  le  the  _count  parameter to limit the number of results returned  the  _sort  parameter to allow for  most recent  and  first  queries", 
            "title": "Prefetch query restrictions"
        }, 
        {
            "location": "/specification/#security", 
            "text": "The CDS Hooks security model is undergoing a rigorous security assessment and as such, may be subject to change.  CDS Hooks defines the agreed upon security model between an EHR and the CDS Service. Like SMART on FHIR, the security model of CDS Hooks leverages the same open and well supported standards like OAuth 2 and JSON web tokens. However, as CDS Hooks differs from SMART, the manner in which these standards are used is specific to CDS Hooks.", 
            "title": "Security"
        }, 
        {
            "location": "/specification/#trusting-cds-services", 
            "text": "As the EHR initiates every interaction with the CDS Service, it is responsible for establishing trust with the CDS Services it intends to call. This trust is established via a TLS connection to the CDS Service. Thus, all CDS Service endpoints must be deployed to a TLS protected URL (https). This includes both the Discovery and individual CDS Service endpoints.  EHRs should use accepted best practices for verifying the authenticity and trust of these TLS connections. For instance,  rfc5280  and  rfc6125 . Additionally, it is assumed that EHRs configure the CDS Services they connect to via some offline process according to the business rules and practices of both the EHR and CDS Service organizations.", 
            "title": "Trusting CDS Services"
        }, 
        {
            "location": "/specification/#trusting-ehrs", 
            "text": "Since the CDS Service is invoked by the EHR, the CDS Service does not have the same mechanism as EHRs to establish trust of the EHR invoking it. Signed  JSON web tokens (JWT)  are produced by the EHR and provided to the CDS Service, allowing the CDS Service to establish trust of the calling EHR.  Each time the EHR makes a request to the CDS Service, it must send an  Authorization  header where the value is  Bearer  token , replacing  token  with the actual JWT. Note that this is for every single CDS Service call, whether that be Discovery calls, CDS Service invocations, etc.   Example JSON web token payload   1\n2\n3\n4\n5\n6\n7 { \n   iss :   https://fhir-ehr.example.com/ , \n   aud :   https://cds.example.org/cds-services/some-service , \n   exp :   1422568860 , \n   iat :   1311280970 , \n   jti :   ee22b021-e1b7-4611-ba5b-8eec6a33ac1e  }     Using the above JWT payload, the complete JWT as passed in the Authorization HTTP header would be:   1 Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2ZoaXItZWhyLmV4YW1wbGUuY29tLyIsImF1ZCI6Imh0dHBzOi8vY2RzLmV4YW1wbGUub3JnL2Nkcy1zZXJ2aWNlcy9zb21lLXNlcnZpY2UiLCJleHAiOjE0MjI1Njg4NjAsImlhdCI6MTMxMTI4MDk3MCwianRpIjoiZWUyMmIwMjEtZTFiNy00NjExLWJhNWItOGVlYzZhMzNhYzFlIn0.Gwl3s301OMWpdEVAVj_T3JZV8bs7N5-V7QNNG7TQ33o   The JWT from the EHR is signed with the EHR's private key and contains the following fields:     Field  Value      iss  string  The URL of the issuer of this JWT.    aud  string or array of strings  The CDS Service endpoint that is being called by the EHR. (See more details below).    exp  number  Expiration time integer for this authentication JWT, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).    iat  number  The time at which this JWT was issued, expressed in seconds since the \"Epoch\" (1970-01-01T00:00:00Z UTC).    jti  string  A nonce string value that uniquely identifies this authentication JWT (used to protect against replay attacks)     Per  rfc7519 , the  aud  value is either a string or an array of strings. For CDS Hooks, this is the URL of the CDS Service endpoint being invoked. For example, consider a CDS Service available at a base URL of  https://cds.example.org . When the EHR invokes the CDS Service discovery endpoint, the aud value is either  \"https://cds.example.org/cds-services\"  or  [\"https://cds.example.org/cds-services\"] . Similarly, when the EHR invokes a particular CDS Service (say,  some-service ), the aud value is either  \"https://cds.example.org/cds-services/some-service\"  or  [\"https://cds.example.org/cds-services/some-service\"] .  https://jwt.io/  is a great resource not only for learning about JSON web tokens, but also for parsing a JWT value into its distinct parts to see how it is constructed. Try taking the example JWT here and pasting it into the form at  https://jwt.io/  to see how the token is constructed.  \nAt this time, CDS Hooks does not prescribe how the EHR shares its public key or the format of said key used in the JWT signature.", 
            "title": "Trusting EHRs"
        }, 
        {
            "location": "/specification/#mutual-tls", 
            "text": "Mutual TLS  (mTLS) may be used alongside JSON web tokens to establish trust of the EHR by the CDS Service.", 
            "title": "Mutual TLS"
        }, 
        {
            "location": "/specification/#fhir-resource-access", 
            "text": "The CDS Service is able to use the FHIR server of the EHR to obtain any additional data it needs in order to perform its decision support. This is similar to SMART on FHIR where the SMART app can obtain additional data via the provided FHIR server.  Like SMART on FHIR, CDS Hooks requires that access to the FHIR server be controlled by an Authorization server utilizing the OAuth 2 framework. Thus, the CDS Service is able to consume the given FHIR server via an access (bearer) token just like a SMART app. While CDS Hooks shares the underlying technical framework and standards as SMART on FHIR, there are very important differences between SMART and CDS Hooks.", 
            "title": "FHIR Resource Access"
        }, 
        {
            "location": "/specification/#obtaining-an-access-token", 
            "text": "In SMART on FHIR, the SMART app requests and ultimately obtains an access token from the Authorization server using the SMART launch workflow. This process utilizes the authorization code grant model as defined by the OAuth 2.0 Authorization Framework in  rfc6749 .  With CDS Hooks, the EHR provides the access token directly in the request to the CDS Service. Thus, the CDS Service does not need to request the token from the authorization server as a SMART app would. This is done purely for performance reasons as the authorization code grant model in OAuth 2 involves several HTTPS calls and redirects. In contrast to a SMART app, a CDS Service may be invoked many times during a workflow. Going through the authorization code grant model on every hook invocation would likely result in a poorly performing CDS Service due to the authorization overhead.  1\n2\n3\n4\n5\n6\n7\n8 { \n   fhirAuthorization   :   { \n     access_token   :   some-opaque-fhir-access-token , \n     token_type   :   Bearer , \n     expires_in   :   300 , \n     scope   :   patient/Patient.read patient/Observation.read \n   }  }", 
            "title": "Obtaining an Access Token"
        }, 
        {
            "location": "/specification/#access-token", 
            "text": "The access token is specified in the CDS Service request via the  fhirAuthorization  request parameter. This parameter is an object that contains both the access token as well as other related information.     Field  Description      access_token  string . This is the OAuth 2 access token that provides access to the FHIR server.    token_type  string . Fixed value:  Bearer    expires_in  integer . The lifetime in seconds of the access token.    scope  string . The scopes the access token grants the CDS Service.     It is recommended that the  expires_in  value be very short lived as the access token must be treated as a transient value by the CDS Service.  It is recommended that the  scope  value contain just the scopes that the CDS Service needs for its logic and no more.  As the CDS Service is executing on behalf of a user, it is important that the data the CDS Service has access to is under the same restrictions/authorization as the current user. As such, the access token shall be scoped to:   The CDS Service being invoked  The current user", 
            "title": "Access Token"
        }, 
        {
            "location": "/specification/#cross-origin-resource-sharing", 
            "text": "Cross-origin resource sharing (CORS)  is web security mechanism that is built into browsers. In short, CORS allows servers to control how browsers access resources on the server, including the accessible HTTP response headers. CORS is only honored by web browsers and as such, is a client-side security mechanism.  For CDS Services, implementing CORS is required if your CDS Service is to be called from a web browser. As the  CDS Hooks Sandbox  is a browser application, you must implement CORS to test your CDS Service in the CDS Hooks Sandbox.  You should carefully consider if and how you support CORS in your CDS Service. A secure implementation guide for CORS is outside of the CDS Hooks specification, as it involves implementation decisions that are made based upon your organization's tolerance for risk and deployment environment.  An insecure, extremely permissive, non-production CORS configuration that allows you to test your CDS Service against our Sandbox returns the following HTTP headers:     Header  Value      Access-Control-Allow-Credentials  true    Access-Control-Allow-Headers  Authorization, Content-Type    Access-Control-Allow-Methods  GET, POST, OPTIONS    Access-Control-Allow-Origin  *    Access-Control-Expose-Headers  Origin, Accept, Content-Location, Location, X-Requested-With", 
            "title": "Cross-Origin Resource Sharing"
        }, 
        {
            "location": "/hooks/", 
            "text": "Hook Catalog\n\n\nPre-defined CDS hooks\n\n\nWe describe a set of hooks to support common use cases out of the box.\nBut \nthis is not a closed set\n; anyone can define new hooks to address new use\ncases. To propose a new hooks please add it to the \nproposed hooks\n page of our wiki.\n\n\nNote that each hook (e.g. \nmedication-prescribe\n) represents something the user is doing in the EHR; various hooks might respond to the same hook (e.g. a \"price check\" service and a \"prior authorization\" service might both respond to \nmedication-prescribe\n).\n\n\nNote also that each hook name in our official catalog is a simple string. If\nyou want to define custom hooks without submitting them to the catalog, then\nyou should use a URI (e.g.\n\nhttp://my-organization/custom-hooks/patient-transmogrify\n).\n\n\nmedication-prescribe\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n{\n\n  \ncontext\n:\n \n{\n\n    \nresourceType\n:\n \nMedicationOrder\n,\n\n    \nmedicationCodeableConcept\n:\n \n{\n\n      \n...\n:\n \nsnipped for brevity\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nPurpose\n: Inform an external CDS service that the user is in the process of\nprescribing a new medication, and solicit feedback about the\nprescription-in-progress.\n\n\nContextual data\n: The set of proposed medication prescriptions. using the\nFHIR \nMedicationOrder\n resource. See example in the sidebar.\n\n\norder-review\n\n\n1\n2\n3\n4\n5\n6\n{\n\n  \ncontext\n:\n \n{\n\n    \nresourceType\n:\n \nDiagnosticOrder\n,\n\n    \n...\n:\n \nsnipped for brevity\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nPurpose\n: Inform an external CDS service that the user is in the process of\nreviewing a set of orders (sometimes known as a \"shopping cart\"), and solicit\nfeedback about the orders being reviewed.\n\n\nContextual data\n: The set of orders being reviewed on-screen, represented\nusing a combination of MedicationOrder, DiagnosticOrder, DeviceUseRequest,\nReferralRequest, and ProcedureRequest. See example in the sidebar.\n\n\npatient-view\n\n\nPurpose\n: Inform an external CDS service that the user has just opened a new\npatient record and is viewing a summary screen or \"face sheet\", and solicit\nfeedback about this patient.\n\n\nContextual data\n: None required beyond default context.", 
            "title": "Hooks"
        }, 
        {
            "location": "/hooks/#hook-catalog", 
            "text": "", 
            "title": "Hook Catalog"
        }, 
        {
            "location": "/hooks/#pre-defined-cds-hooks", 
            "text": "We describe a set of hooks to support common use cases out of the box.\nBut  this is not a closed set ; anyone can define new hooks to address new use\ncases. To propose a new hooks please add it to the  proposed hooks  page of our wiki.  Note that each hook (e.g.  medication-prescribe ) represents something the user is doing in the EHR; various hooks might respond to the same hook (e.g. a \"price check\" service and a \"prior authorization\" service might both respond to  medication-prescribe ).  Note also that each hook name in our official catalog is a simple string. If\nyou want to define custom hooks without submitting them to the catalog, then\nyou should use a URI (e.g. http://my-organization/custom-hooks/patient-transmogrify ).", 
            "title": "Pre-defined CDS hooks"
        }, 
        {
            "location": "/hooks/#medication-prescribe", 
            "text": "1\n2\n3\n4\n5\n6\n7\n8 { \n   context :   { \n     resourceType :   MedicationOrder , \n     medicationCodeableConcept :   { \n       ... :   snipped for brevity \n     } \n   }  }    Purpose : Inform an external CDS service that the user is in the process of\nprescribing a new medication, and solicit feedback about the\nprescription-in-progress.  Contextual data : The set of proposed medication prescriptions. using the\nFHIR  MedicationOrder  resource. See example in the sidebar.", 
            "title": "medication-prescribe"
        }, 
        {
            "location": "/hooks/#order-review", 
            "text": "1\n2\n3\n4\n5\n6 { \n   context :   { \n     resourceType :   DiagnosticOrder , \n     ... :   snipped for brevity \n   }  }    Purpose : Inform an external CDS service that the user is in the process of\nreviewing a set of orders (sometimes known as a \"shopping cart\"), and solicit\nfeedback about the orders being reviewed.  Contextual data : The set of orders being reviewed on-screen, represented\nusing a combination of MedicationOrder, DiagnosticOrder, DeviceUseRequest,\nReferralRequest, and ProcedureRequest. See example in the sidebar.", 
            "title": "order-review"
        }, 
        {
            "location": "/hooks/#patient-view", 
            "text": "Purpose : Inform an external CDS service that the user has just opened a new\npatient record and is viewing a summary screen or \"face sheet\", and solicit\nfeedback about this patient.  Contextual data : None required beyond default context.", 
            "title": "patient-view"
        }, 
        {
            "location": "/examples/", 
            "text": "Examples\n\n\nCDC Guideline for Prescribing Opioids for Chronic Pain\n\n\n\n\nCDS Service Request\n\n\nThe example illustrates a prescription for Acetaminophen/Hydrocodone Bitartrate for a patient that already has a prescription for Oxycodone Hydrochloride:\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n{\n\n  \nhookInstance\n:\n \nd1577c69-dfbe-44ad-ba6d-3e05e953b2ea\n,\n\n  \nfhirServer\n:\n \nhttp://fhir.example.com\n,\n\n  \nhook\n:\n \nmedication-prescribe\n,\n\n  \nuser\n:\n \nPractitioner/example\n,\n\n  \ncontext\n:\n \n[\n\n    \n{\n\n      \nresourceType\n:\n \nMedicationOrder\n,\n\n      \nid\n:\n \nmedrx001\n,\n\n      \ndateWritten\n:\n \n2017-05-05\n,\n\n      \nstatus\n:\n \ndraft\n,\n\n      \npatient\n:\n \n{\n\n        \nreference\n:\n \nPatient/example\n\n      \n},\n\n      \nmedicationCodeableConcept\n:\n \n{\n\n        \ncoding\n:\n \n[\n\n          \n{\n\n            \nsystem\n:\n \nhttp://www.nlm.nih.gov/research/umls/rxnorm\n,\n\n            \ncode\n:\n \n857001\n,\n\n            \ndisplay\n:\n \nAcetaminophen 325 MG / Hydrocodone Bitartrate 10 MG Oral Tablet\n\n          \n}\n\n        \n]\n\n      \n},\n\n      \ndosageInstruction\n:\n \n[\n\n        \n{\n\n          \ntext\n:\n \nTake 1 tablet Oral every 4 hours as needed\n,\n\n          \ntiming\n:\n \n{\n\n            \nrepeat\n:\n \n{\n\n              \nfrequency\n:\n \n6\n,\n\n              \nfrequencyMax\n:\n \n6\n,\n\n              \nperiod\n:\n \n1\n,\n\n              \nunit\n:\n \nd\n\n            \n}\n\n          \n},\n\n          \nasNeededBoolean\n:\n \ntrue\n,\n\n          \ndoseQuantity\n:\n \n{\n\n            \nvalue\n:\n \n10\n,\n\n            \nunit\n:\n \nmg\n,\n\n            \nsystem\n:\n \nhttp://unitsofmeasure.org\n,\n\n            \ncode\n:\n \nmg\n\n          \n}\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n],\n\n  \npatient\n:\n \nPatient/example\n,\n\n  \nprefetch\n:\n \n{\n\n    \nmedication\n:\n \n{\n\n      \nresponse\n:\n \n{\n\n        \nstatus\n:\n \n200 OK\n\n      \n},\n\n      \nresource\n:\n \n{\n\n        \nresourceType\n:\n \nMedicationOrder\n,\n\n        \nid\n:\n \nmedrx002\n,\n\n        \ndateWritten\n:\n \n2017-04-25\n,\n\n        \nstatus\n:\n \nactive\n,\n\n        \npatient\n:\n \n{\n\n          \nreference\n:\n \nPatient/example\n\n        \n},\n\n        \nmedicationCodeableConcept\n:\n \n{\n\n          \ncoding\n:\n \n[\n\n            \n{\n\n              \nsystem\n:\n \nhttp://www.nlm.nih.gov/research/umls/rxnorm\n,\n\n              \ncode\n:\n \n1049621\n,\n\n              \ndisplay\n:\n \nOxycodone Hydrochloride 5 MG Oral Tablet\n\n            \n}\n\n          \n]\n\n        \n},\n\n        \ndosageInstruction\n:\n \n[\n\n          \n{\n\n            \ntext\n:\n \nTake 1 tablet by mouth every 4 hours as needed for pain.\n,\n\n            \ntiming\n:\n \n{\n\n              \nrepeat\n:\n \n{\n\n                \nfrequency\n:\n \n6\n,\n\n                \nperiod\n:\n \n1\n,\n\n                \nperiodUnits\n:\n \nd\n\n              \n}\n\n            \n},\n\n            \nasNeededBoolean\n:\n \ntrue\n,\n\n            \ndoseQuantity\n:\n \n{\n\n              \nvalue\n:\n \n5\n,\n\n              \nunit\n:\n \nmg\n,\n\n              \nsystem\n:\n \nhttp://unitsofmeasure.org\n,\n\n              \ncode\n:\n \nmg\n\n            \n}\n\n          \n}\n\n        \n]\n\n      \n}\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nThis example illustrates the use of the CDS Hooks \nmedication-prescribe\n hook to implement Recommendation #5 from the \nCDC guideline for prescribing opioids for chronic pain\n.\n\n\nThis example is taken from the \nOpioid Prescribing Support Implementation Guide\n, developed in partnership with the Centers for Disease Control and Prevention \n(CDC)\n.\n\n\n\n\nCDS Service Response\n\n\nThe opioid guideline request results in the following response that indicates the patient is at high risk for opioid overdose according to the CDC guidelines, and the dosage should be tapered to less than 50 MME. Links are provided to the guideline, as well as to the MME conversion tables provided by CDC.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n{\n\n  \nsummary\n:\n \nHigh risk for opioid overdose - taper now\n,\n\n  \nindicator\n:\n \nwarning\n,\n\n  \nlinks\n:\n \n[\n\n    \n{\n\n      \nlabel\n:\n \nCDC guideline for prescribing opioids for chronic pain\n,\n\n      \ntype\n:\n \nabsolute\n,\n\n      \nurl\n:\n \nhttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\n\n    \n},\n\n    \n{\n\n      \nlabel\n:\n \nMME Conversion Tables\n,\n\n      \ntype\n:\n \nabsolute\n,\n\n      \nurl\n:\n \nhttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\n\n    \n}\n\n  \n],\n\n  \ndetail\n:\n \nTotal morphine milligram equivalent (MME) is 125mg. Taper to less than 50.\n\n\n}\n\n\n\n\n\n\n\nRadiology Appropriateness\n\n\n\n\nCDS Service Request\n\n\nThis example illustrates the use of the CDS Hooks \norder-review\n hook to implement Radiology Appropriateness scoring.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n{\n\n  \nhookInstance\n:\n \nd1577c69-dfbe-44ad-ba6d-3e05e953b2ea\n,\n\n  \nfhirServer\n:\n \nhttp://fhir.example.com\n,\n\n  \nhook\n:\n \norder-review\n,\n\n  \nuser\n:\n \nPractitioner/example\n,\n\n  \ncontext\n:\n \n[\n\n    \n{\n\n      \nresourceType\n:\n \nProcedureRequest\n,\n\n      \nid\n:\n \nprocedure-request-1\n,\n\n      \nstatus\n:\n \ndraft\n,\n\n      \nintent\n:\n \nproposal\n,\n\n      \npriority\n:\n \nroutine\n,\n\n      \ncode\n:\n \n{\n\n        \ncoding\n:\n \n[{\n\n          \nsystem\n:\n \nhttp://www.ama-assn.org/go/cpt\n,\n\n          \ncode\n:\n \n70450\n,\n\n          \ndisplay\n:\n \nCT, head, wo iv contrast\n\n        \n}]\n\n      \n},\n\n      \nsubject\n:\n \n{\n\n        \nreference\n:\n \nPatient/example\n\n      \n},\n\n      \nrequester\n:\n \n{\n\n        \nagent\n:\n \n{\n\n          \nreference\n:\n \nPractitioner/exampmle\n\n        \n}\n\n      \n}\n\n    \n}\n\n  \n],\n\n  \npatient\n:\n \nPatient/example\n\n\n}\n\n\n\n\n\n\n\n\n\nCDS Service Response\n\n\nThe appropriateness score is communicated via an update of the procedure request that adds an extension element to indicate the appropriateness rating.\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n{\n\n  \ncards\n:\n \n[\n\n    \n{\n\n      \nsummary\n:\n \nUsually appropriate\n,\n\n      \nindicator\n:\n \ninfo\n,\n\n      \ndetail\n:\n \nThe requested procedure is usually appropriate for the given indications.\n,\n\n      \nsuggestions\n:\n \n[\n\n        \n{\n\n          \nlabel\n:\n \nThe appropriateness score for this procedure given these indications is 9, usually appropriate.\n,\n\n          \nactions\n:\n \n[{\n\n            \ntype\n:\n \nupdate\n,\n\n            \ndescription\n:\n \nUpdate the order to record the appropriateness score.\n,\n\n            \nresource\n:\n \n{\n\n              \nresourceType\n:\n \nProcedureRequest\n,\n\n              \nid\n:\n \nprocedure-request-1\n,\n\n              \nextension\n:\n \n[\n\n                \n{\n\n                  \nurl\n:\n \nhttp://hl7.org/fhir/us/qicore/StructureDefinition/procedurerequest-appropriatenessScore\n,\n\n                  \nvalueDecimal\n:\n \n9\n\n                \n}\n\n              \n],\n\n              \nstatus\n:\n \ndraft\n,\n\n              \nintent\n:\n \nproposal\n,\n\n              \npriority\n:\n \nroutine\n,\n\n              \ncode\n:\n \n{\n\n                \ncoding\n:\n \n[{\n\n                  \nsystem\n:\n \nhttp://www.ama-assn.org/go/cpt\n,\n\n                  \ncode\n:\n \n70450\n,\n\n                  \ndisplay\n:\n \nCT, head, wo iv contrast\n\n                \n}]\n\n              \n},\n\n              \nsubject\n:\n \n{\n\n                \nreference\n:\n \nPatient/example\n\n              \n},\n\n              \nrequester\n:\n \n{\n\n                \nagent\n:\n \n{\n\n                  \nreference\n:\n \nPractitioner/exampmle\n\n                \n}\n\n              \n}\n\n            \n}\n\n          \n}]\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}", 
            "title": "Examples"
        }, 
        {
            "location": "/examples/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/examples/#cdc-guideline-for-prescribing-opioids-for-chronic-pain", 
            "text": "CDS Service Request  The example illustrates a prescription for Acetaminophen/Hydrocodone Bitartrate for a patient that already has a prescription for Oxycodone Hydrochloride:    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91 { \n   hookInstance :   d1577c69-dfbe-44ad-ba6d-3e05e953b2ea , \n   fhirServer :   http://fhir.example.com , \n   hook :   medication-prescribe , \n   user :   Practitioner/example , \n   context :   [ \n     { \n       resourceType :   MedicationOrder , \n       id :   medrx001 , \n       dateWritten :   2017-05-05 , \n       status :   draft , \n       patient :   { \n         reference :   Patient/example \n       }, \n       medicationCodeableConcept :   { \n         coding :   [ \n           { \n             system :   http://www.nlm.nih.gov/research/umls/rxnorm , \n             code :   857001 , \n             display :   Acetaminophen 325 MG / Hydrocodone Bitartrate 10 MG Oral Tablet \n           } \n         ] \n       }, \n       dosageInstruction :   [ \n         { \n           text :   Take 1 tablet Oral every 4 hours as needed , \n           timing :   { \n             repeat :   { \n               frequency :   6 , \n               frequencyMax :   6 , \n               period :   1 , \n               unit :   d \n             } \n           }, \n           asNeededBoolean :   true , \n           doseQuantity :   { \n             value :   10 , \n             unit :   mg , \n             system :   http://unitsofmeasure.org , \n             code :   mg \n           } \n         } \n       ] \n     } \n   ], \n   patient :   Patient/example , \n   prefetch :   { \n     medication :   { \n       response :   { \n         status :   200 OK \n       }, \n       resource :   { \n         resourceType :   MedicationOrder , \n         id :   medrx002 , \n         dateWritten :   2017-04-25 , \n         status :   active , \n         patient :   { \n           reference :   Patient/example \n         }, \n         medicationCodeableConcept :   { \n           coding :   [ \n             { \n               system :   http://www.nlm.nih.gov/research/umls/rxnorm , \n               code :   1049621 , \n               display :   Oxycodone Hydrochloride 5 MG Oral Tablet \n             } \n           ] \n         }, \n         dosageInstruction :   [ \n           { \n             text :   Take 1 tablet by mouth every 4 hours as needed for pain. , \n             timing :   { \n               repeat :   { \n                 frequency :   6 , \n                 period :   1 , \n                 periodUnits :   d \n               } \n             }, \n             asNeededBoolean :   true , \n             doseQuantity :   { \n               value :   5 , \n               unit :   mg , \n               system :   http://unitsofmeasure.org , \n               code :   mg \n             } \n           } \n         ] \n       } \n     } \n   }  }    This example illustrates the use of the CDS Hooks  medication-prescribe  hook to implement Recommendation #5 from the  CDC guideline for prescribing opioids for chronic pain .  This example is taken from the  Opioid Prescribing Support Implementation Guide , developed in partnership with the Centers for Disease Control and Prevention  (CDC) .   CDS Service Response  The opioid guideline request results in the following response that indicates the patient is at high risk for opioid overdose according to the CDC guidelines, and the dosage should be tapered to less than 50 MME. Links are provided to the guideline, as well as to the MME conversion tables provided by CDC.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17 { \n   summary :   High risk for opioid overdose - taper now , \n   indicator :   warning , \n   links :   [ \n     { \n       label :   CDC guideline for prescribing opioids for chronic pain , \n       type :   absolute , \n       url :   https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420 \n     }, \n     { \n       label :   MME Conversion Tables , \n       type :   absolute , \n       url :   https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf \n     } \n   ], \n   detail :   Total morphine milligram equivalent (MME) is 125mg. Taper to less than 50.  }", 
            "title": "CDC Guideline for Prescribing Opioids for Chronic Pain"
        }, 
        {
            "location": "/examples/#radiology-appropriateness", 
            "text": "CDS Service Request  This example illustrates the use of the CDS Hooks  order-review  hook to implement Radiology Appropriateness scoring.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31 { \n   hookInstance :   d1577c69-dfbe-44ad-ba6d-3e05e953b2ea , \n   fhirServer :   http://fhir.example.com , \n   hook :   order-review , \n   user :   Practitioner/example , \n   context :   [ \n     { \n       resourceType :   ProcedureRequest , \n       id :   procedure-request-1 , \n       status :   draft , \n       intent :   proposal , \n       priority :   routine , \n       code :   { \n         coding :   [{ \n           system :   http://www.ama-assn.org/go/cpt , \n           code :   70450 , \n           display :   CT, head, wo iv contrast \n         }] \n       }, \n       subject :   { \n         reference :   Patient/example \n       }, \n       requester :   { \n         agent :   { \n           reference :   Practitioner/exampmle \n         } \n       } \n     } \n   ], \n   patient :   Patient/example  }     CDS Service Response  The appropriateness score is communicated via an update of the procedure request that adds an extension element to indicate the appropriateness rating.    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46 { \n   cards :   [ \n     { \n       summary :   Usually appropriate , \n       indicator :   info , \n       detail :   The requested procedure is usually appropriate for the given indications. , \n       suggestions :   [ \n         { \n           label :   The appropriateness score for this procedure given these indications is 9, usually appropriate. , \n           actions :   [{ \n             type :   update , \n             description :   Update the order to record the appropriateness score. , \n             resource :   { \n               resourceType :   ProcedureRequest , \n               id :   procedure-request-1 , \n               extension :   [ \n                 { \n                   url :   http://hl7.org/fhir/us/qicore/StructureDefinition/procedurerequest-appropriatenessScore , \n                   valueDecimal :   9 \n                 } \n               ], \n               status :   draft , \n               intent :   proposal , \n               priority :   routine , \n               code :   { \n                 coding :   [{ \n                   system :   http://www.ama-assn.org/go/cpt , \n                   code :   70450 , \n                   display :   CT, head, wo iv contrast \n                 }] \n               }, \n               subject :   { \n                 reference :   Patient/example \n               }, \n               requester :   { \n                 agent :   { \n                   reference :   Practitioner/exampmle \n                 } \n               } \n             } \n           }] \n         } \n       ] \n     } \n   ]  }", 
            "title": "Radiology Appropriateness"
        }, 
        {
            "location": "/community/", 
            "text": "Community\n\n\nGet Involved\n\n\nThere are several ways in which you can get involved with the CDS Hooks community.\n\n\n\n\nAsk a question and participate in discussions via the \nCDS Hooks Google Group\n\n\nChat via \nZulip\n at \nhttps://chat.fhir.org\n in the \ncds-hooks\n stream\n\n\nContribute to the \ncode and documentation on Github\n\n\nCheck out the \nCDS services available for testing\n and contribute your own.\n\n\n\n\nCDS Hooks Sprint Program\n\n\nObjectives\n\n\n\n\nPromote creation of clinical-grade service integrations (EHRs + CDS Services)\n\n\nGain implementation experience with real-world systems\n\n\nRefine the spec, balancing ease of use, flexibility, and stability\n\n\nDrive toward pilot deployments with the ability to measure results\n\n\n\n\nWant to help build our test infrastructure?\n\n\n\n\nhelp-wanted issues\n\n\nProposed Milestones", 
            "title": "Community"
        }, 
        {
            "location": "/community/#community", 
            "text": "", 
            "title": "Community"
        }, 
        {
            "location": "/community/#get-involved", 
            "text": "There are several ways in which you can get involved with the CDS Hooks community.   Ask a question and participate in discussions via the  CDS Hooks Google Group  Chat via  Zulip  at  https://chat.fhir.org  in the  cds-hooks  stream  Contribute to the  code and documentation on Github  Check out the  CDS services available for testing  and contribute your own.", 
            "title": "Get Involved"
        }, 
        {
            "location": "/community/#cds-hooks-sprint-program", 
            "text": "", 
            "title": "CDS Hooks Sprint Program"
        }, 
        {
            "location": "/community/#objectives", 
            "text": "Promote creation of clinical-grade service integrations (EHRs + CDS Services)  Gain implementation experience with real-world systems  Refine the spec, balancing ease of use, flexibility, and stability  Drive toward pilot deployments with the ability to measure results", 
            "title": "Objectives"
        }, 
        {
            "location": "/community/#want-to-help-build-our-test-infrastructure", 
            "text": "help-wanted issues  Proposed Milestones", 
            "title": "Want to help build our test infrastructure?"
        }
    ]
}